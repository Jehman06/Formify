{"ast":null,"code":"import { EJSON, ObjectId } from 'bson';\nimport * as bson from 'bson';\nexport { bson as BSON };\nvar __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */function () {\n  function BrowserInfo(name, version, os) {\n    this.name = name;\n    this.version = version;\n    this.os = os;\n    this.type = 'browser';\n  }\n  return BrowserInfo;\n}();\nvar NodeInfo = /** @class */function () {\n  function NodeInfo(version) {\n    this.version = version;\n    this.type = 'node';\n    this.name = 'node';\n    this.os = process.platform;\n  }\n  return NodeInfo;\n}();\nvar SearchBotDeviceInfo = /** @class */function () {\n  function SearchBotDeviceInfo(name, version, os, bot) {\n    this.name = name;\n    this.version = version;\n    this.os = os;\n    this.bot = bot;\n    this.type = 'bot-device';\n  }\n  return SearchBotDeviceInfo;\n}();\nvar BotInfo = /** @class */function () {\n  function BotInfo() {\n    this.type = 'bot';\n    this.bot = true; // NOTE: deprecated test name instead\n    this.name = 'bot';\n    this.version = null;\n    this.os = null;\n  }\n  return BotInfo;\n}();\nvar ReactNativeInfo = /** @class */function () {\n  function ReactNativeInfo() {\n    this.type = 'react-native';\n    this.name = 'react-native';\n    this.version = null;\n    this.os = null;\n  }\n  return ReactNativeInfo;\n}();\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [['aol', /AOLShield\\/([0-9\\._]+)/], ['edge', /Edge\\/([0-9\\._]+)/], ['edge-ios', /EdgiOS\\/([0-9\\._]+)/], ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/], ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/], ['samsung', /SamsungBrowser\\/([0-9\\.]+)/], ['silk', /\\bSilk\\/([0-9._-]+)\\b/], ['miui', /MiuiBrowser\\/([0-9\\.]+)$/], ['beaker', /BeakerBrowser\\/([0-9\\.]+)/], ['edge-chromium', /EdgA?\\/([0-9\\.]+)/], ['chromium-webview', /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/], ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/], ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/], ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/], ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/], ['fxios', /FxiOS\\/([0-9\\.]+)/], ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/], ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/], ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/], ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/], ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/], ['ie', /MSIE\\s(7\\.0)/], ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/], ['android', /Android\\s([0-9\\.]+)/], ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/], ['safari', /Version\\/([0-9\\._]+).*Safari/], ['facebook', /FB[AS]V\\/([0-9\\.]+)/], ['instagram', /Instagram\\s([0-9\\.]+)/], ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/], ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/], ['curl', /^curl\\/([0-9\\.]+)$/], ['searchbot', SEARCHBOX_UA_REGEX]];\nvar operatingSystemRules = [['iOS', /iP(hone|od|ad)/], ['Android OS', /Android/], ['BlackBerry OS', /BlackBerry|BB10/], ['Windows Mobile', /IEMobile/], ['Amazon OS', /Kindle/], ['Windows 3.11', /Win16/], ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/], ['Windows 98', /(Windows 98)|(Win98)/], ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/], ['Windows XP', /(Windows NT 5.1)|(Windows XP)/], ['Windows Server 2003', /(Windows NT 5.2)/], ['Windows Vista', /(Windows NT 6.0)/], ['Windows 7', /(Windows NT 6.1)/], ['Windows 8', /(Windows NT 6.2)/], ['Windows 8.1', /(Windows NT 6.3)/], ['Windows 10', /(Windows NT 10.0)/], ['Windows ME', /Windows ME/], ['Open BSD', /OpenBSD/], ['Sun OS', /SunOS/], ['Chrome OS', /CrOS/], ['Linux', /(Linux)|(X11)/], ['Mac OS', /(Mac_PowerPC)|(Macintosh)/], ['QNX', /QNX/], ['BeOS', /BeOS/], ['OS/2', /OS\\/2/]];\nfunction detect(userAgent) {\n  if (!!userAgent) {\n    return parseUserAgent(userAgent);\n  }\n  if (typeof document === 'undefined' && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return new ReactNativeInfo();\n  }\n  if (typeof navigator !== 'undefined') {\n    return parseUserAgent(navigator.userAgent);\n  }\n  return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n  // opted for using reduce here rather than Array#first with a regex.test call\n  // this is primarily because using the reduce we only perform the regex\n  // execution once rather than once for the test and for the exec again below\n  // probably something that needs to be benchmarked though\n  return ua !== '' && userAgentRules.reduce(function (matched, _a) {\n    var browser = _a[0],\n      regex = _a[1];\n    if (matched) {\n      return matched;\n    }\n    var uaMatch = regex.exec(ua);\n    return !!uaMatch && [browser, uaMatch];\n  }, false);\n}\nfunction parseUserAgent(ua) {\n  var matchedRule = matchUserAgent(ua);\n  if (!matchedRule) {\n    return null;\n  }\n  var name = matchedRule[0],\n    match = matchedRule[1];\n  if (name === 'searchbot') {\n    return new BotInfo();\n  }\n  // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n  var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n  if (versionParts) {\n    if (versionParts.length < REQUIRED_VERSION_PARTS) {\n      versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n    }\n  } else {\n    versionParts = [];\n  }\n  var version = versionParts.join('.');\n  var os = detectOS(ua);\n  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n  if (searchBotMatch && searchBotMatch[1]) {\n    return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n  }\n  return new BrowserInfo(name, version, os);\n}\nfunction detectOS(ua) {\n  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n    var _a = operatingSystemRules[ii],\n      os = _a[0],\n      regex = _a[1];\n    var match = regex.exec(ua);\n    if (match) {\n      return os;\n    }\n  }\n  return null;\n}\nfunction getNodeVersion() {\n  var isNode = typeof process !== 'undefined' && process.version;\n  return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n  var output = [];\n  for (var ii = 0; ii < count; ii++) {\n    output.push('0');\n  }\n  return output;\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nclass DefaultNetworkTransport {\n  constructor() {\n    if (!DefaultNetworkTransport.fetch) {\n      throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n    }\n    if (!DefaultNetworkTransport.AbortController) {\n      throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n    }\n  }\n  fetchWithCallbacks(request, handler) {\n    // tslint:disable-next-line: no-console\n    this.fetch(request).then(async response => {\n      const decodedBody = await response.text();\n      // Pull out the headers of the response\n      const responseHeaders = {};\n      response.headers.forEach((value, key) => {\n        responseHeaders[key] = value;\n      });\n      return {\n        statusCode: response.status,\n        headers: responseHeaders,\n        body: decodedBody\n      };\n    }).then(r => handler.onSuccess(r)).catch(e => handler.onError(e));\n  }\n  async fetch(request) {\n    const {\n      timeoutMs,\n      url,\n      ...rest\n    } = request;\n    const {\n      signal,\n      cancelTimeout\n    } = this.createTimeoutSignal(timeoutMs);\n    try {\n      // We'll await the response to catch throw our own error\n      return await DefaultNetworkTransport.fetch(url, {\n        signal,\n        ...rest\n      });\n    } finally {\n      // Whatever happens, cancel any timeout\n      cancelTimeout();\n    }\n  }\n  createTimeoutSignal(timeoutMs) {\n    if (typeof timeoutMs === \"number\") {\n      const controller = new DefaultNetworkTransport.AbortController();\n      // Call abort after a specific number of milliseconds\n      const timeout = setTimeout(() => {\n        controller.abort();\n      }, timeoutMs);\n      return {\n        signal: controller.signal,\n        cancelTimeout: () => {\n          clearTimeout(timeout);\n        }\n      };\n    } else {\n      return {\n        signal: undefined,\n        cancelTimeout: () => {\n          /* No-op */\n        }\n      };\n    }\n  }\n}\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/json\"\n};\n\n////////////////////////////////////////////////////////////////////////////\nDefaultNetworkTransport.fetch = globalThis.fetch.bind(globalThis);\nDefaultNetworkTransport.AbortController = globalThis.AbortController;\n\n/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = (a => {\n  let tab = {};\n  a.forEach((c, i) => tab[c] = i);\n  return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function' ? Uint8Array.from.bind(Uint8Array) : (it, fn = x => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = src => src.replace(/=/g, '').replace(/[+\\/]/g, m0 => m0 == '+' ? '-' : '_');\nconst _tidyB64 = s => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = bin => {\n  // console.log('polyfilled');\n  let u32,\n    c0,\n    c1,\n    c2,\n    asc = '';\n  const pad = bin.length % 3;\n  for (let i = 0; i < bin.length;) {\n    if ((c0 = bin.charCodeAt(i++)) > 255 || (c1 = bin.charCodeAt(i++)) > 255 || (c2 = bin.charCodeAt(i++)) > 255) throw new TypeError('invalid character found');\n    u32 = c0 << 16 | c1 << 8 | c2;\n    asc += b64chs[u32 >> 18 & 63] + b64chs[u32 >> 12 & 63] + b64chs[u32 >> 6 & 63] + b64chs[u32 & 63];\n  }\n  return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? bin => btoa(bin) : _hasBuffer ? bin => Buffer.from(bin, 'binary').toString('base64') : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer ? u8a => Buffer.from(u8a).toString('base64') : u8a => {\n  // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n  const maxargs = 0x1000;\n  let strs = [];\n  for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n    strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n  }\n  return _btoa(strs.join(''));\n};\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = c => {\n  if (c.length < 2) {\n    var cc = c.charCodeAt(0);\n    return cc < 0x80 ? c : cc < 0x800 ? _fromCC(0xc0 | cc >>> 6) + _fromCC(0x80 | cc & 0x3f) : _fromCC(0xe0 | cc >>> 12 & 0x0f) + _fromCC(0x80 | cc >>> 6 & 0x3f) + _fromCC(0x80 | cc & 0x3f);\n  } else {\n    var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);\n    return _fromCC(0xf0 | cc >>> 18 & 0x07) + _fromCC(0x80 | cc >>> 12 & 0x3f) + _fromCC(0x80 | cc >>> 6 & 0x3f) + _fromCC(0x80 | cc & 0x3f);\n  }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = u => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer ? s => Buffer.from(s, 'utf8').toString('base64') : _TE ? s => _fromUint8Array(_TE.encode(s)) : s => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe ? _mkUriSafe(_encode(src)) : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = src => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = cccc => {\n  switch (cccc.length) {\n    case 4:\n      var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3),\n        offset = cp - 0x10000;\n      return _fromCC((offset >>> 10) + 0xD800) + _fromCC((offset & 0x3FF) + 0xDC00);\n    case 3:\n      return _fromCC((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));\n    default:\n      return _fromCC((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));\n  }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = b => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = asc => {\n  // console.log('polyfilled');\n  asc = asc.replace(/\\s+/g, '');\n  if (!b64re.test(asc)) throw new TypeError('malformed base64.');\n  asc += '=='.slice(2 - (asc.length & 3));\n  let u24,\n    bin = '',\n    r1,\n    r2;\n  for (let i = 0; i < asc.length;) {\n    u24 = b64tab[asc.charAt(i++)] << 18 | b64tab[asc.charAt(i++)] << 12 | (r1 = b64tab[asc.charAt(i++)]) << 6 | (r2 = b64tab[asc.charAt(i++)]);\n    bin += r1 === 64 ? _fromCC(u24 >> 16 & 255) : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255) : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n  }\n  return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? asc => atob(_tidyB64(asc)) : _hasBuffer ? asc => Buffer.from(asc, 'base64').toString('binary') : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer ? a => _U8Afrom(Buffer.from(a, 'base64')) : a => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = a => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer ? a => Buffer.from(a, 'base64').toString('utf8') : _TD ? a => _TD.decode(_toUint8Array(a)) : a => btou(_atob(a));\nconst _unURI = a => _tidyB64(a.replace(/[-_]/g, m0 => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = src => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = src => {\n  if (typeof src !== 'string') return false;\n  const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n  return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = v => {\n  return {\n    value: v,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n  const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n  _add('fromBase64', function () {\n    return decode(this);\n  });\n  _add('toBase64', function (urlsafe) {\n    return encode(this, urlsafe);\n  });\n  _add('toBase64URI', function () {\n    return encode(this, true);\n  });\n  _add('toBase64URL', function () {\n    return encode(this, true);\n  });\n  _add('toUint8Array', function () {\n    return toUint8Array(this);\n  });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n  const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n  _add('toBase64', function (urlsafe) {\n    return fromUint8Array(this, urlsafe);\n  });\n  _add('toBase64URI', function () {\n    return fromUint8Array(this, true);\n  });\n  _add('toBase64URL', function () {\n    return fromUint8Array(this, true);\n  });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n  extendString();\n  extendUint8Array();\n};\nconst gBase64 = {\n  version: version,\n  VERSION: VERSION,\n  atob: _atob,\n  atobPolyfill: atobPolyfill,\n  btoa: _btoa,\n  btoaPolyfill: btoaPolyfill,\n  fromBase64: decode,\n  toBase64: encode,\n  encode: encode,\n  encodeURI: encodeURI,\n  encodeURL: encodeURI,\n  utob: utob,\n  btou: btou,\n  decode: decode,\n  isValid: isValid,\n  fromUint8Array: fromUint8Array,\n  toUint8Array: toUint8Array,\n  extendString: extendString,\n  extendUint8Array: extendUint8Array,\n  extendBuiltins: extendBuiltins\n};\n\n////////////////////////////////////////////////////////////////////////////\nconst SERIALIZATION_OPTIONS = {\n  relaxed: false // Ensure Canonical mode\n};\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\nfunction serialize(obj) {\n  return EJSON.serialize(obj, SERIALIZATION_OPTIONS);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\nfunction deserialize(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(doc => EJSON.deserialize(doc));\n  } else {\n    return EJSON.deserialize(obj);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The type of a user.\n */\nvar UserType;\n(function (UserType) {\n  /**\n   * A normal end-user created this user.\n   */\n  UserType[\"Normal\"] = \"normal\";\n  /**\n   * The user was created by the server.\n   */\n  UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\nvar DataKey;\n(function (DataKey) {\n  /** @ignore */\n  DataKey[\"NAME\"] = \"name\";\n  /** @ignore */\n  DataKey[\"EMAIL\"] = \"email\";\n  /** @ignore */\n  DataKey[\"PICTURE\"] = \"picture\";\n  /** @ignore */\n  DataKey[\"FIRST_NAME\"] = \"first_name\";\n  /** @ignore */\n  DataKey[\"LAST_NAME\"] = \"last_name\";\n  /** @ignore */\n  DataKey[\"GENDER\"] = \"gender\";\n  /** @ignore */\n  DataKey[\"BIRTHDAY\"] = \"birthday\";\n  /** @ignore */\n  DataKey[\"MIN_AGE\"] = \"min_age\";\n  /** @ignore */\n  DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\nconst DATA_MAPPING = {\n  [DataKey.NAME]: \"name\",\n  [DataKey.EMAIL]: \"email\",\n  [DataKey.PICTURE]: \"pictureUrl\",\n  [DataKey.FIRST_NAME]: \"firstName\",\n  [DataKey.LAST_NAME]: \"lastName\",\n  [DataKey.GENDER]: \"gender\",\n  [DataKey.BIRTHDAY]: \"birthday\",\n  [DataKey.MIN_AGE]: \"minAge\",\n  [DataKey.MAX_AGE]: \"maxAge\"\n};\n/** @inheritdoc */\nclass UserProfile {\n  /**\n   * @param response The response of a call fetching the users profile.\n   */\n  constructor(response) {\n    /** @ignore */\n    this.type = UserType.Normal;\n    /** @ignore */\n    this.identities = [];\n    if (typeof response === \"object\" && response !== null) {\n      const {\n        type,\n        identities,\n        data\n      } = response;\n      if (typeof type === \"string\") {\n        this.type = type;\n      } else {\n        throw new Error(\"Expected 'type' in the response body\");\n      }\n      if (Array.isArray(identities)) {\n        this.identities = identities.map(identity => {\n          const {\n            id,\n            provider_type: providerType\n          } = identity;\n          return {\n            id,\n            providerType\n          };\n        });\n      } else {\n        throw new Error(\"Expected 'identities' in the response body\");\n      }\n      if (typeof data === \"object\" && data !== null) {\n        const mappedData = Object.fromEntries(Object.entries(data).map(([key, value]) => {\n          if (key in DATA_MAPPING) {\n            // Translate any known data field to its JS idiomatic alias\n            return [DATA_MAPPING[key], value];\n          } else {\n            // Pass through any other values\n            return [key, value];\n          }\n        }));\n        // We can use `any` since we trust the user supplies the correct type\n        this.data = deserialize(mappedData);\n      } else {\n        throw new Error(\"Expected 'data' in the response body\");\n      }\n    } else {\n      this.data = {};\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\nclass PrefixedStorage {\n  /**\n   * Construct a `Storage` which will prefix a key part to every operation.\n   *\n   * @param storage The underlying storage to use for operations.\n   * @param keyPart The part of the key to prefix when performing operations.\n   */\n  constructor(storage, keyPart) {\n    this.storage = storage;\n    this.keyPart = keyPart;\n  }\n  /** @inheritdoc */\n  get(key) {\n    return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n  }\n  /** @inheritdoc */\n  set(key, value) {\n    return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n  }\n  /** @inheritdoc */\n  remove(key) {\n    return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n  }\n  /** @inheritdoc */\n  prefix(keyPart) {\n    return new PrefixedStorage(this, keyPart);\n  }\n  /** @inheritdoc */\n  clear(prefix = \"\") {\n    return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n  }\n  /** @inheritdoc */\n  addListener(listener) {\n    return this.storage.addListener(listener);\n  }\n  /** @inheritdoc */\n  removeListener(listener) {\n    return this.storage.addListener(listener);\n  }\n}\n/**\n * The string separating two parts.\n */\nPrefixedStorage.PART_SEPARATOR = \":\";\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass MemoryStorage {\n  constructor() {\n    /**\n     * Internal state of the storage.\n     */\n    this.storage = {};\n    /**\n     * A set of listners.\n     */\n    this.listeners = new Set();\n  }\n  /** @inheritdoc */\n  get(key) {\n    if (key in this.storage) {\n      return this.storage[key];\n    } else {\n      return null;\n    }\n  }\n  /** @inheritdoc */\n  set(key, value) {\n    this.storage[key] = value;\n    // Fire the listeners\n    this.fireListeners();\n  }\n  /** @inheritdoc */\n  remove(key) {\n    delete this.storage[key];\n    // Fire the listeners\n    this.fireListeners();\n  }\n  /** @inheritdoc */\n  prefix(keyPart) {\n    return new PrefixedStorage(this, keyPart);\n  }\n  /** @inheritdoc */\n  clear(prefix) {\n    // Iterate all keys and delete their values if they have a matching prefix\n    for (const key of Object.keys(this.storage)) {\n      if (!prefix || key.startsWith(prefix)) {\n        delete this.storage[key];\n      }\n    }\n    // Fire the listeners\n    this.fireListeners();\n  }\n  /** @inheritdoc */\n  addListener(listener) {\n    this.listeners.add(listener);\n  }\n  /** @inheritdoc */\n  removeListener(listener) {\n    this.listeners.delete(listener);\n  }\n  /**\n   * Tell the listeners that a change occurred.\n   */\n  fireListeners() {\n    this.listeners.forEach(listener => listener());\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nconst PROFILE_STORAGE_KEY = \"profile\";\nconst PROVIDER_TYPE_STORAGE_KEY = \"providerType\";\n/**\n * Storage specific to the app.\n */\nclass UserStorage extends PrefixedStorage {\n  /**\n   * Construct a storage for a `User`.\n   *\n   * @param storage The underlying storage to wrap.\n   * @param userId The id of the user.\n   */\n  constructor(storage, userId) {\n    super(storage, `user(${userId})`);\n  }\n  /**\n   * Get the access token from storage.\n   *\n   * @returns Access token (null if unknown).\n   */\n  get accessToken() {\n    return this.get(ACCESS_TOKEN_STORAGE_KEY);\n  }\n  /**\n   * Set the access token in storage.\n   *\n   * @param value Access token (null if unknown).\n   */\n  set accessToken(value) {\n    if (value === null) {\n      this.remove(ACCESS_TOKEN_STORAGE_KEY);\n    } else {\n      this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n    }\n  }\n  /**\n   * Get the refresh token from storage.\n   *\n   * @returns Refresh token (null if unknown and user is logged out).\n   */\n  get refreshToken() {\n    return this.get(REFRESH_TOKEN_STORAGE_KEY);\n  }\n  /**\n   * Set the refresh token in storage.\n   *\n   * @param value Refresh token (null if unknown and user is logged out).\n   */\n  set refreshToken(value) {\n    if (value === null) {\n      this.remove(REFRESH_TOKEN_STORAGE_KEY);\n    } else {\n      this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n    }\n  }\n  /**\n   * Get the user profile from storage.\n   *\n   * @returns User profile (undefined if its unknown).\n   */\n  get profile() {\n    const value = this.get(PROFILE_STORAGE_KEY);\n    if (value) {\n      const profile = new UserProfile();\n      // Patch in the values\n      Object.assign(profile, JSON.parse(value));\n      return profile;\n    }\n  }\n  /**\n   * Set the user profile in storage.\n   *\n   * @param value User profile (undefined if its unknown).\n   */\n  set profile(value) {\n    if (value) {\n      this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n    } else {\n      this.remove(PROFILE_STORAGE_KEY);\n    }\n  }\n  /**\n   * Get the type of authentication provider used to authenticate\n   *\n   * @returns User profile (undefined if its unknown).\n   */\n  get providerType() {\n    const value = this.get(PROVIDER_TYPE_STORAGE_KEY);\n    if (value) {\n      return value;\n    }\n  }\n  /**\n   * Set the type of authentication provider used to authenticate\n   *\n   * @param value Type of authentication provider.\n   */\n  set providerType(value) {\n    if (value) {\n      this.set(PROVIDER_TYPE_STORAGE_KEY, value);\n    } else {\n      this.remove(PROVIDER_TYPE_STORAGE_KEY);\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param obj The object to remove keys (and undefined values from)\n * @returns A new object without the keys where the value is undefined.\n */\nfunction removeKeysWithUndefinedValues(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => typeof entry[1] !== \"undefined\"));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\nfunction generateRandomString(length, alphabet) {\n  let result = \"\";\n  for (let i = 0; i < length; i++) {\n    result += alphabet[Math.floor(Math.random() * alphabet.length)];\n  }\n  return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @param prefixed Should the \"?\" prefix be added if values exists?\n * @returns A URL encoded representation of the parameters (omitting a \"?\" prefix).\n */\nfunction encodeQueryString(params, prefixed = true) {\n  // Filter out undefined values\n  const cleanedParams = removeKeysWithUndefinedValues(params);\n  // Determine if a prefixed \"?\" is appropreate\n  const prefix = prefixed && Object.keys(cleanedParams).length > 0 ? \"?\" : \"\";\n  // Transform keys and values to a query string\n  return prefix + Object.entries(cleanedParams).map(([k, v]) => `${k}=${encodeURIComponent(v)}`).join(\"&\");\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\nfunction decodeQueryString(str) {\n  const cleanStr = str[0] === \"?\" ? str.substr(1) : str;\n  return Object.fromEntries(cleanStr.split(\"&\").filter(s => s.length > 0).map(kvp => kvp.split(\"=\")).map(([k, v]) => [k, decodeURIComponent(v)]));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\nconst RESERVED_NAMES = [\"inspect\", \"callFunction\", \"callFunctionStreaming\",\n// Methods defined on the Object.prototype might be \"typeof probed\" and called by libraries and runtime environments.\n...Object.getOwnPropertyNames(Object.prototype)];\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\nfunction cleanArgs(args) {\n  for (const arg of args) {\n    if (typeof arg === \"object\" && arg) {\n      for (const [key, value] of Object.entries(arg)) {\n        if (value === undefined) {\n          delete arg[key];\n        }\n      }\n    }\n  }\n  return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\nfunction cleanArgsAndSerialize(args) {\n  const cleaned = cleanArgs(args);\n  return cleaned.map(arg => typeof arg === \"object\" ? serialize(arg) : arg);\n}\n/**\n * Defines how functions are called.\n */\nclass FunctionsFactory {\n  /**\n   * @param fetcher The underlying fetcher to use when sending requests.\n   * @param config Additional configuration parameters.\n   */\n  constructor(fetcher, config = {}) {\n    this.fetcher = fetcher;\n    this.serviceName = config.serviceName;\n    this.argsTransformation = config.argsTransformation || cleanArgsAndSerialize;\n  }\n  /**\n   * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n   *\n   * @param fetcher The underlying fetcher to use when requesting.\n   * @param config Additional configuration parameters.\n   * @returns The newly created factory of functions.\n   */\n  static create(fetcher, config = {}) {\n    // Create a proxy, wrapping a simple object returning methods that calls functions\n    // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n    const factory = new FunctionsFactory(fetcher, config);\n    // Wrap the factory in a proxy that calls the internal call method\n    return new Proxy(factory, {\n      get(target, p, receiver) {\n        if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n          return target.callFunction.bind(target, p);\n        } else {\n          const prop = Reflect.get(target, p, receiver);\n          return typeof prop === \"function\" ? prop.bind(target) : prop;\n        }\n      }\n    });\n  }\n  /**\n   * Call a remote function by it's name.\n   *\n   * @param name Name of the remote function.\n   * @param args Arguments to pass to the remote function.\n   * @returns A promise of the value returned when executing the remote function.\n   */\n  async callFunction(name, ...args) {\n    // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n    const body = {\n      name,\n      arguments: this.argsTransformation ? this.argsTransformation(args) : args\n    };\n    if (this.serviceName) {\n      body.service = this.serviceName;\n    }\n    const appRoute = this.fetcher.appRoute;\n    return this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.functionsCall().path,\n      body\n    });\n  }\n  /**\n   * Call a remote function by it's name.\n   *\n   * @param name Name of the remote function.\n   * @param args Arguments to pass to the remote function.\n   * @returns A promise of the value returned when executing the remote function.\n   */\n  callFunctionStreaming(name, ...args) {\n    const body = {\n      name,\n      arguments: this.argsTransformation ? this.argsTransformation(args) : args\n    };\n    if (this.serviceName) {\n      body.service = this.serviceName;\n    }\n    const appRoute = this.fetcher.appRoute;\n    const qs = encodeQueryString({\n      [\"baas_request\"]: gBase64.encode(JSON.stringify(body))\n    });\n    return this.fetcher.fetchStream({\n      method: \"GET\",\n      path: appRoute.functionsCall().path + qs\n    });\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2021 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * Check whether the user's app is running in \"development mode\" (e.g. `npm run dev`\n * for a React app, or `NODE_ENV=development` for a Node app). Each platform's entry\n * point should define the value of this using `setIsDevelopmentMode`.\n * The default behaviour is to always return `false`.\n *\n * @returns true if the user's app is running in development mode, false otherwise\n */\nlet isDevelopmentMode = false;\n/**\n * Set the value of `isDevelopmentMode`. This allows each entry point (node vs DOM)\n * to use its own method for determining whether we are in development mode.\n *\n * @param state A boolean indicating whether the user's app is running in\n * development mode or not.\n */\nconst setIsDevelopmentMode = state => {\n  isDevelopmentMode = state;\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Display a deprecation warning for features being removed in the next major version\n * to users in development mode (as best as we can detect this, see `isDevelopmentMode`)\n *\n * @param deprecatedItem The method signature or name of the deprecated item\n * @param suggestedReplacement The method signature or name of the suggested replacement\n */\nconst deprecationWarning = (deprecatedItem, suggestedReplacement) => {\n  if (!isDevelopmentMode) return;\n  console.warn(`Deprecation warning from Realm: ${deprecatedItem} is deprecated and will be removed in a future major release. Consider switching to ${suggestedReplacement}.`);\n};\n/**\n * Helper function for migrating from positional arguments to a single dictionary argument.\n * Check the arguments passed to a function, if the first argument is not an object (i.e. it\n * is presumed to be a deprecated positional-style call), shows a deprecation warning and\n * converts the positional arguments into an object matching the expected \"new\" shape.\n *\n * @param args Array of arguments passed to the function (captured with `...args`).\n * @param methodName The name of the method, used to show the deprecation warning.\n * @param argNames The list of positional argument names, used to covert them into\n * an object if a deprecated call is made and to show the deprecation warning.\n * @param hasRestArgs Optional flag indicating that the function's final argument is\n * `...args` (to capture any extra arguments), in which case we capture them and return\n * as the second element of the return array.\n *\n * @returns An object containing:\n *\n * argsObject: a dictionary of function arguments, either passed through from args[0] if\n * args[0] is an object, or created from `args` and `argNames` if the args are a\n * deprecated positional argument call.\n *\n * restArgs: an array of the \"...args\" passed to the function if `hasRestArgs` is true;\n * otherwise it is `undefined`.\n */\n// Allow use of `object` type\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst handleDeprecatedPositionalArgs = (args, methodName, argNames, hasRestArgs) => {\n  if (typeof args[0] !== \"object\") {\n    const restArgsText = hasRestArgs ? \", ...args\" : \"\";\n    deprecationWarning(`${methodName}(${argNames.join(\", \")}${restArgsText})`, `${methodName}({ ${argNames.join(\", \")} }${restArgsText})`);\n    // Convert the array of arguments into a dictionary keyed by the relevant argName\n    const argsObject = argNames.reduce((prev, argName, index) => {\n      return {\n        ...prev,\n        [argName]: args[index]\n      };\n    }, {});\n    const restArgs = hasRestArgs ? args.slice(argNames.length) : undefined;\n    return {\n      argsObject,\n      restArgs\n    };\n  }\n  return {\n    argsObject: args[0],\n    restArgs: hasRestArgs ? args.slice(1) : undefined\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////\n// React/React Native set a global __DEV__ variable when running in dev mode\nsetIsDevelopmentMode(typeof __DEV__ !== \"undefined\" && __DEV__);\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass EmailPasswordAuth {\n  /**\n   * Construct an interface to the email / password authentication provider.\n   *\n   * @param fetcher The underlying fetcher used to request the services.\n   * @param providerName Optional custom name of the authentication provider.\n   */\n  constructor(fetcher, providerName = \"local-userpass\") {\n    this.fetcher = fetcher;\n    this.providerName = providerName;\n  }\n  async registerUser(...args) {\n    const {\n      argsObject: userDetails\n    } = handleDeprecatedPositionalArgs(args, \"registerUser\", [\"email\", \"password\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).register().path,\n      body: userDetails\n    });\n  }\n  async confirmUser(...args) {\n    const {\n      argsObject: tokenDetails\n    } = handleDeprecatedPositionalArgs(args, \"confirmUser\", [\"token\", \"tokenId\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).confirm().path,\n      body: tokenDetails\n    });\n  }\n  async resendConfirmationEmail(...args) {\n    const {\n      argsObject: emailDetails\n    } = handleDeprecatedPositionalArgs(args, \"resendConfirmationEmail\", [\"email\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).confirmSend().path,\n      body: emailDetails\n    });\n  }\n  async retryCustomConfirmation(...args) {\n    const {\n      argsObject: emailDetails\n    } = handleDeprecatedPositionalArgs(args, \"retryCustomConfirmation\", [\"email\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).confirmCall().path,\n      body: emailDetails\n    });\n  }\n  async resetPassword(...args) {\n    const {\n      argsObject: resetDetails\n    } = handleDeprecatedPositionalArgs(args, \"resetPassword\", [\"token\", \"tokenId\", \"password\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).reset().path,\n      body: resetDetails\n    });\n  }\n  async sendResetPasswordEmail(...args) {\n    const {\n      argsObject: emailDetails\n    } = handleDeprecatedPositionalArgs(args, \"sendResetPasswordEmail\", [\"email\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).resetSend().path,\n      body: emailDetails\n    });\n  }\n  async callResetPasswordFunction(...args) {\n    const {\n      argsObject: resetDetails,\n      restArgs\n    } = handleDeprecatedPositionalArgs(args, \"callResetPasswordFunction\", [\"email\", \"password\"], true);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).resetCall().path,\n      body: {\n        ...resetDetails,\n        arguments: restArgs\n      }\n    });\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @returns The base api route.\n */\nfunction api() {\n  return {\n    path: \"/api/client/v2.0\",\n    /**\n     * @param appId The id of the app.\n     * @returns The URL of the app endpoint.\n     */\n    app(appId) {\n      return {\n        path: this.path + `/app/${appId}`,\n        /**\n         * @returns The URL of the app location endpoint.\n         */\n        location() {\n          return {\n            path: this.path + \"/location\"\n          };\n        },\n        /**\n         * @param providerName The name of the provider.\n         * @returns The app url concatinated with the /auth/providers/{providerName}\n         */\n        authProvider(providerName) {\n          return {\n            path: this.path + `/auth/providers/${providerName}`,\n            /**\n             * @returns Get the URL of an authentication provider.\n             */\n            login() {\n              return {\n                path: this.path + \"/login\"\n              };\n            }\n          };\n        },\n        /**\n         * @param providerName The name of the provider.\n         * @returns The app url concatinated with the /auth/providers/{providerName}\n         */\n        emailPasswordAuth(providerName) {\n          const authProviderRoutes = this.authProvider(providerName);\n          return {\n            ...authProviderRoutes,\n            register() {\n              return {\n                path: this.path + \"/register\"\n              };\n            },\n            confirm() {\n              return {\n                path: this.path + \"/confirm\"\n              };\n            },\n            confirmSend() {\n              return {\n                path: this.path + \"/confirm/send\"\n              };\n            },\n            confirmCall() {\n              return {\n                path: this.path + \"/confirm/call\"\n              };\n            },\n            reset() {\n              return {\n                path: this.path + \"/reset\"\n              };\n            },\n            resetSend() {\n              return {\n                path: this.path + \"/reset/send\"\n              };\n            },\n            resetCall() {\n              return {\n                path: this.path + \"/reset/call\"\n              };\n            }\n          };\n        },\n        functionsCall() {\n          return {\n            path: this.path + \"/functions/call\"\n          };\n        }\n      };\n    },\n    auth() {\n      return {\n        path: this.path + \"/auth\",\n        apiKeys() {\n          return {\n            path: this.path + \"/api_keys\",\n            key(id) {\n              return {\n                path: this.path + `/${id}`,\n                enable() {\n                  return {\n                    path: this.path + \"/enable\"\n                  };\n                },\n                disable() {\n                  return {\n                    path: this.path + \"/disable\"\n                  };\n                }\n              };\n            }\n          };\n        },\n        profile() {\n          return {\n            path: this.path + \"/profile\"\n          };\n        },\n        session() {\n          return {\n            path: this.path + \"/session\"\n          };\n        }\n      };\n    }\n  };\n}\nvar routes = {\n  api\n};\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass ApiKeyAuth {\n  /**\n   * Construct an interface to the API-key authentication provider.\n   *\n   * @param fetcher The fetcher used to send requests to services.\n   */\n  constructor(fetcher) {\n    this.fetcher = fetcher;\n  }\n  /** @inheritdoc */\n  create(name) {\n    return this.fetcher.fetchJSON({\n      method: \"POST\",\n      body: {\n        name\n      },\n      path: routes.api().auth().apiKeys().path,\n      tokenType: \"refresh\"\n    });\n  }\n  /** @inheritdoc */\n  fetch(keyId) {\n    return this.fetcher.fetchJSON({\n      method: \"GET\",\n      path: routes.api().auth().apiKeys().key(keyId).path,\n      tokenType: \"refresh\"\n    });\n  }\n  /** @inheritdoc */\n  fetchAll() {\n    return this.fetcher.fetchJSON({\n      method: \"GET\",\n      tokenType: \"refresh\",\n      path: routes.api().auth().apiKeys().path\n    });\n  }\n  /** @inheritdoc */\n  async delete(keyId) {\n    await this.fetcher.fetchJSON({\n      method: \"DELETE\",\n      path: routes.api().auth().apiKeys().key(keyId).path,\n      tokenType: \"refresh\"\n    });\n  }\n  /** @inheritdoc */\n  async enable(keyId) {\n    await this.fetcher.fetchJSON({\n      method: \"PUT\",\n      path: routes.api().auth().apiKeys().key(keyId).enable().path,\n      tokenType: \"refresh\"\n    });\n  }\n  /** @inheritdoc */\n  async disable(keyId) {\n    await this.fetcher.fetchJSON({\n      method: \"PUT\",\n      path: routes.api().auth().apiKeys().key(keyId).disable().path,\n      tokenType: \"refresh\"\n    });\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nlet environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\nfunction setEnvironment(e) {\n  environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\nfunction getEnvironment() {\n  if (environment) {\n    return environment;\n  } else {\n    throw new Error(\"Cannot get environment before it's set\");\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * An error occured during the parsing of a watch stream.\n */\nclass WatchError extends Error {\n  constructor({\n    message,\n    code\n  }) {\n    super(message);\n    /**\n     * The name of this type of error\n     */\n    this.name = \"WatchError\";\n    this.code = code;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n// NOTE: this is a fully processed event, not a single \"data: foo\" line!\n/**\n * The state of a WatchStream.\n */\nvar WatchStreamState;\n(function (WatchStreamState) {\n  /**\n   * Need to call one of the feed functions.\n   */\n  WatchStreamState[\"NEED_DATA\"] = \"NEED_DATA\";\n  /**\n   * Call nextEvent() to consume an event.\n   */\n  WatchStreamState[\"HAVE_EVENT\"] = \"HAVE_EVENT\";\n  /**\n   * Call error().\n   */\n  WatchStreamState[\"HAVE_ERROR\"] = \"HAVE_ERROR\";\n})(WatchStreamState || (WatchStreamState = {}));\n/**\n * Represents a stream of events\n */\nclass WatchStream {\n  constructor() {\n    this._state = WatchStreamState.NEED_DATA;\n    this._error = null;\n    // Used by feedBuffer to construct lines\n    this._textDecoder = new (getEnvironment().TextDecoder)();\n    this._buffer = \"\";\n    this._bufferOffset = 0;\n    // Used by feedLine for building the next SSE\n    this._eventType = \"\";\n    this._dataBuffer = \"\";\n  }\n  // Call these when you have data, in whatever shape is easiest for your SDK to get.\n  // Pick one, mixing and matching on a single instance isn't supported.\n  // These can only be called in NEED_DATA state, which is the initial state.\n  feedBuffer(buffer) {\n    this.assertState(WatchStreamState.NEED_DATA);\n    this._buffer += this._textDecoder.decode(buffer, {\n      stream: true\n    });\n    this.advanceBufferState();\n  }\n  feedLine(line) {\n    this.assertState(WatchStreamState.NEED_DATA);\n    // This is an implementation of the algorithm described at\n    // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation.\n    // Currently the server does not use id or retry lines, so that processing isn't implemented.\n    // ignore trailing LF if not removed by SDK.\n    if (line.endsWith(\"\\n\")) line = line.substr(0, line.length - 1);\n    // ignore trailing CR from CRLF\n    if (line.endsWith(\"\\r\")) line = line.substr(0, line.length - 1);\n    if (line.length === 0) {\n      // This is the \"dispatch the event\" portion of the algorithm.\n      if (this._dataBuffer.length === 0) {\n        this._eventType = \"\";\n        return;\n      }\n      if (this._dataBuffer.endsWith(\"\\n\")) this._dataBuffer = this._dataBuffer.substr(0, this._dataBuffer.length - 1);\n      this.feedSse({\n        data: this._dataBuffer,\n        eventType: this._eventType\n      });\n      this._dataBuffer = \"\";\n      this._eventType = \"\";\n    }\n    if (line[0] === \":\") return;\n    const colon = line.indexOf(\":\");\n    const field = line.substr(0, colon);\n    let value = colon === -1 ? \"\" : line.substr(colon + 1);\n    if (value.startsWith(\" \")) value = value.substr(1);\n    if (field === \"event\") {\n      this._eventType = value;\n    } else if (field === \"data\") {\n      this._dataBuffer += value;\n      this._dataBuffer += \"\\n\";\n    } else ;\n  }\n  feedSse(sse) {\n    this.assertState(WatchStreamState.NEED_DATA);\n    const firstPercentIndex = sse.data.indexOf(\"%\");\n    if (firstPercentIndex !== -1) {\n      // For some reason, the stich server decided to add percent-encoding for '%', '\\n', and '\\r' to its\n      // event-stream replies. But it isn't real urlencoding, since most characters pass through, so we can't use\n      // uri_percent_decode() here.\n      let buffer = \"\";\n      let start = 0;\n      for (let percentIndex = firstPercentIndex; percentIndex !== -1; percentIndex = sse.data.indexOf(\"%\", start)) {\n        buffer += sse.data.substr(start, percentIndex - start);\n        const encoded = sse.data.substr(percentIndex, 3); // may be smaller than 3 if string ends with %\n        if (encoded === \"%25\") {\n          buffer += \"%\";\n        } else if (encoded === \"%0A\") {\n          buffer += \"\\x0A\"; // '\\n'\n        } else if (encoded === \"%0D\") {\n          buffer += \"\\x0D\"; // '\\r'\n        } else {\n          buffer += encoded; // propagate as-is\n        }\n\n        start = percentIndex + encoded.length;\n      }\n      // Advance the buffer with the last part\n      buffer += sse.data.substr(start);\n      sse.data = buffer;\n    }\n    if (!sse.eventType || sse.eventType === \"message\") {\n      try {\n        const parsed = EJSON.parse(sse.data);\n        if (typeof parsed === \"object\") {\n          // ???\n          this._nextEvent = parsed;\n          this._state = WatchStreamState.HAVE_EVENT;\n          return;\n        }\n      } catch {\n        // fallthrough to same handling as for non-document value.\n      }\n      this._state = WatchStreamState.HAVE_ERROR;\n      this._error = new WatchError({\n        message: \"server returned malformed event: \" + sse.data,\n        code: \"bad bson parse\"\n      });\n    } else if (sse.eventType === \"error\") {\n      this._state = WatchStreamState.HAVE_ERROR;\n      // default error message if we have issues parsing the reply.\n      this._error = new WatchError({\n        message: sse.data,\n        code: \"unknown\"\n      });\n      try {\n        const {\n          error_code: errorCode,\n          error\n        } = EJSON.parse(sse.data);\n        if (typeof errorCode !== \"string\") return;\n        if (typeof error !== \"string\") return;\n        // XXX in realm-js, object-store will error if the error_code is not one of the known\n        // error code enum values.\n        this._error = new WatchError({\n          message: error,\n          code: errorCode\n        });\n      } catch {\n        return; // Use the default state.\n      }\n    } else ;\n  }\n  get state() {\n    return this._state;\n  }\n  // Consumes the returned event. If you used feedBuffer(), there may be another event or error after this one,\n  // so you need to call state() again to see what to do next.\n  nextEvent() {\n    this.assertState(WatchStreamState.HAVE_EVENT);\n    // We can use \"as ChangeEvent<T>\" since we just asserted the state.\n    const out = this._nextEvent;\n    this._state = WatchStreamState.NEED_DATA;\n    this.advanceBufferState();\n    return out;\n  }\n  // Once this enters the error state, it stays that way. You should not feed any more data.\n  get error() {\n    return this._error;\n  }\n  ////////////////////////////////////////////\n  advanceBufferState() {\n    this.assertState(WatchStreamState.NEED_DATA);\n    while (this.state === WatchStreamState.NEED_DATA) {\n      if (this._bufferOffset === this._buffer.length) {\n        this._buffer = \"\";\n        this._bufferOffset = 0;\n        return;\n      }\n      // NOTE not supporting CR-only newlines, just LF and CRLF.\n      const nextNewlineIndex = this._buffer.indexOf(\"\\n\", this._bufferOffset);\n      if (nextNewlineIndex === -1) {\n        // We have a partial line.\n        if (this._bufferOffset !== 0) {\n          // Slide the partial line down to the front of the buffer.\n          this._buffer = this._buffer.substr(this._bufferOffset, this._buffer.length - this._bufferOffset);\n          this._bufferOffset = 0;\n        }\n        return;\n      }\n      this.feedLine(this._buffer.substr(this._bufferOffset, nextNewlineIndex - this._bufferOffset));\n      this._bufferOffset = nextNewlineIndex + 1; // Advance past this line, including its newline.\n    }\n  }\n\n  assertState(state) {\n    if (this._state !== state) {\n      throw Error(`Expected WatchStream to be in state ${state}, but in state ${this._state}`);\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A remote collection of documents.\n */\nclass MongoDBCollection {\n  /**\n   * Construct a remote collection of documents.\n   *\n   * @param fetcher The fetcher to use when requesting the service.\n   * @param serviceName The name of the remote service.\n   * @param databaseName The name of the database.\n   * @param collectionName The name of the remote collection.\n   */\n  constructor(fetcher, serviceName, databaseName, collectionName) {\n    this.functions = FunctionsFactory.create(fetcher, {\n      serviceName\n    });\n    this.databaseName = databaseName;\n    this.collectionName = collectionName;\n    this.serviceName = serviceName;\n    this.fetcher = fetcher;\n  }\n  /** @inheritdoc */\n  find(filter = {}, options = {}) {\n    return this.functions.find({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      project: options.projection,\n      sort: options.sort,\n      limit: options.limit\n    });\n  }\n  /** @inheritdoc */\n  findOne(filter = {}, options = {}) {\n    return this.functions.findOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      project: options.projection,\n      sort: options.sort\n    });\n  }\n  /** @inheritdoc */\n  findOneAndUpdate(filter = {}, update, options = {}) {\n    return this.functions.findOneAndUpdate({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter,\n      update,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument\n    });\n  }\n  /** @inheritdoc */\n  findOneAndReplace(filter = {}, replacement, options = {}) {\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter: filter,\n      update: replacement,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument\n    });\n  }\n  /** @inheritdoc */\n  findOneAndDelete(filter = {}, options = {}) {\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter,\n      sort: options.sort,\n      projection: options.projection\n    });\n  }\n  /** @inheritdoc */\n  aggregate(pipeline) {\n    return this.functions.aggregate({\n      database: this.databaseName,\n      collection: this.collectionName,\n      pipeline\n    });\n  }\n  /** @inheritdoc */\n  count(filter = {}, options = {}) {\n    return this.functions.count({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      limit: options.limit\n    });\n  }\n  /** @inheritdoc */\n  insertOne(document) {\n    return this.functions.insertOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      document\n    });\n  }\n  /** @inheritdoc */\n  insertMany(documents) {\n    return this.functions.insertMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      documents\n    });\n  }\n  /** @inheritdoc */\n  deleteOne(filter = {}) {\n    return this.functions.deleteOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter\n    });\n  }\n  /** @inheritdoc */\n  deleteMany(filter = {}) {\n    return this.functions.deleteMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter\n    });\n  }\n  /** @inheritdoc */\n  updateOne(filter, update, options = {}) {\n    return this.functions.updateOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      update,\n      upsert: options.upsert\n    });\n  }\n  /** @inheritdoc */\n  updateMany(filter, update, options = {}) {\n    return this.functions.updateMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      update,\n      upsert: options.upsert\n    });\n  }\n  async *watch({\n    ids,\n    filter\n  } = {}) {\n    const iterator = await this.functions.callFunctionStreaming(\"watch\", {\n      database: this.databaseName,\n      collection: this.collectionName,\n      ids,\n      filter\n    });\n    const watchStream = new WatchStream();\n    for await (const chunk of iterator) {\n      if (!chunk) continue;\n      watchStream.feedBuffer(chunk);\n      while (watchStream.state == WatchStreamState.HAVE_EVENT) {\n        yield watchStream.nextEvent();\n      }\n      if (watchStream.state == WatchStreamState.HAVE_ERROR)\n        // XXX this is just throwing an error like {error_code: \"BadRequest, error: \"message\"},\n        // which matches realm-js, but is different from how errors are handled in realm-web\n        throw watchStream.error;\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\nfunction createCollection(fetcher, serviceName, databaseName, collectionName) {\n  return new MongoDBCollection(fetcher, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\nfunction createDatabase(fetcher, serviceName, databaseName) {\n  return {\n    collection: createCollection.bind(null, fetcher, serviceName, databaseName)\n  };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName An optional service name.\n * @returns The service.\n */\nfunction createService(fetcher, serviceName = \"mongo-db\") {\n  return {\n    db: createDatabase.bind(null, fetcher, serviceName)\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst DEFAULT_DEVICE_ID = \"000000000000000000000000\";\n/** The state of a user within the app */\nvar UserState;\n(function (UserState) {\n  /** Active, with both access and refresh tokens */\n  UserState[\"Active\"] = \"active\";\n  /** Logged out, but there might still be data persisted about the user, in the browser. */\n  UserState[\"LoggedOut\"] = \"logged-out\";\n  /** Logged out and all data about the user has been removed. */\n  UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\n/** The type of a user. */\nvar UserType$1;\n(function (UserType) {\n  /** Created by the user itself. */\n  UserType[\"Normal\"] = \"normal\";\n  /** Created by an administrator of the app. */\n  UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\n/**\n * Representation of an authenticated user of an app.\n */\nclass User {\n  /**\n   * @param parameters Parameters of the user.\n   */\n  constructor(parameters) {\n    this.app = parameters.app;\n    this.id = parameters.id;\n    this.storage = new UserStorage(this.app.storage, this.id);\n    if (\"accessToken\" in parameters && \"refreshToken\" in parameters && \"providerType\" in parameters) {\n      this._accessToken = parameters.accessToken;\n      this._refreshToken = parameters.refreshToken;\n      this.providerType = parameters.providerType;\n      // Save the parameters to storage, for future instances to be hydrated from\n      this.storage.accessToken = parameters.accessToken;\n      this.storage.refreshToken = parameters.refreshToken;\n      this.storage.providerType = parameters.providerType;\n    } else {\n      // Hydrate the rest of the parameters from storage\n      this._accessToken = this.storage.accessToken;\n      this._refreshToken = this.storage.refreshToken;\n      const providerType = this.storage.providerType;\n      this._profile = this.storage.profile;\n      if (providerType) {\n        this.providerType = providerType;\n      } else {\n        throw new Error(\"Storage is missing a provider type\");\n      }\n    }\n    this.fetcher = this.app.fetcher.clone({\n      userContext: {\n        currentUser: this\n      }\n    });\n    this.apiKeys = new ApiKeyAuth(this.fetcher);\n    this.functions = FunctionsFactory.create(this.fetcher);\n  }\n  /**\n   * @returns The access token used to authenticate the user towards MongoDB Realm.\n   */\n  get accessToken() {\n    return this._accessToken;\n  }\n  /**\n   * @param token The new access token.\n   */\n  set accessToken(token) {\n    this._accessToken = token;\n    this.storage.accessToken = token;\n  }\n  /**\n   * @returns The refresh token used to issue new access tokens.\n   */\n  get refreshToken() {\n    return this._refreshToken;\n  }\n  /**\n   * @param token The new refresh token.\n   */\n  set refreshToken(token) {\n    this._refreshToken = token;\n    this.storage.refreshToken = token;\n  }\n  /**\n   * @returns The current state of the user.\n   */\n  get state() {\n    if (this.id in this.app.allUsers) {\n      return this.refreshToken === null ? UserState.LoggedOut : UserState.Active;\n    } else {\n      return UserState.Removed;\n    }\n  }\n  /**\n   * @returns The logged in state of the user.\n   */\n  get isLoggedIn() {\n    return this.state === UserState.Active;\n  }\n  get customData() {\n    if (this.accessToken) {\n      const decodedToken = this.decodeAccessToken();\n      return decodedToken.userData;\n    } else {\n      throw new Error(\"Cannot read custom data without an access token\");\n    }\n  }\n  /**\n   * @returns Profile containing detailed information about the user.\n   */\n  get profile() {\n    if (this._profile) {\n      return this._profile.data;\n    } else {\n      throw new Error(\"A profile was never fetched for this user\");\n    }\n  }\n  get identities() {\n    if (this._profile) {\n      return this._profile.identities;\n    } else {\n      throw new Error(\"A profile was never fetched for this user\");\n    }\n  }\n  get deviceId() {\n    if (this.accessToken) {\n      const payload = this.accessToken.split(\".\")[1];\n      if (payload) {\n        const parsedPayload = JSON.parse(gBase64.decode(payload));\n        const deviceId = parsedPayload[\"baas_device_id\"];\n        if (typeof deviceId === \"string\" && deviceId !== DEFAULT_DEVICE_ID) {\n          return deviceId;\n        }\n      }\n    }\n    return null;\n  }\n  /**\n   * Refresh the users profile data.\n   */\n  async refreshProfile() {\n    // Fetch the latest profile\n    const response = await this.fetcher.fetchJSON({\n      method: \"GET\",\n      path: routes.api().auth().profile().path\n    });\n    // Create a profile instance\n    this._profile = new UserProfile(response);\n    // Store this for later hydration\n    this.storage.profile = this._profile;\n  }\n  /**\n   * Log out the user, invalidating the session (and its refresh token).\n   */\n  async logOut() {\n    // Invalidate the refresh token\n    try {\n      if (this._refreshToken !== null) {\n        await this.fetcher.fetchJSON({\n          method: \"DELETE\",\n          path: routes.api().auth().session().path,\n          tokenType: \"refresh\"\n        });\n      }\n    } finally {\n      // Forget the access and refresh token\n      this.accessToken = null;\n      this.refreshToken = null;\n    }\n  }\n  /** @inheritdoc */\n  async linkCredentials(credentials) {\n    const response = await this.app.authenticator.authenticate(credentials, this);\n    // Sanity check the response\n    if (this.id !== response.userId) {\n      const details = `got user id ${response.userId} expected ${this.id}`;\n      throw new Error(`Link response ment for another user (${details})`);\n    }\n    // Update the access token\n    this.accessToken = response.accessToken;\n    // Refresh the profile to include the new identity\n    await this.refreshProfile();\n  }\n  /**\n   * Request a new access token, using the refresh token.\n   */\n  async refreshAccessToken() {\n    const response = await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: routes.api().auth().session().path,\n      tokenType: \"refresh\"\n    });\n    const {\n      access_token: accessToken\n    } = response;\n    if (typeof accessToken === \"string\") {\n      this.accessToken = accessToken;\n    } else {\n      throw new Error(\"Expected an 'access_token' in the response\");\n    }\n  }\n  /** @inheritdoc */\n  async refreshCustomData() {\n    await this.refreshAccessToken();\n    return this.customData;\n  }\n  /** @inheritdoc */\n  callFunction(name, ...args) {\n    return this.functions.callFunction(name, ...args);\n  }\n  /**\n   * @returns A plain ol' JavaScript object representation of the user.\n   */\n  toJSON() {\n    return {\n      id: this.id,\n      accessToken: this.accessToken,\n      refreshToken: this.refreshToken,\n      profile: this._profile,\n      state: this.state,\n      customData: this.customData\n    };\n  }\n  /** @inheritdoc */\n  push() {\n    throw new Error(\"Not yet implemented\");\n  }\n  /** @inheritdoc */\n  mongoClient(serviceName) {\n    return createService(this.fetcher, serviceName);\n  }\n  decodeAccessToken() {\n    if (this.accessToken) {\n      // Decode and spread the token\n      const parts = this.accessToken.split(\".\");\n      if (parts.length !== 3) {\n        throw new Error(\"Expected an access token with three parts\");\n      }\n      // Decode the payload\n      const encodedPayload = parts[1];\n      const decodedPayload = gBase64.decode(encodedPayload);\n      const parsedPayload = JSON.parse(decodedPayload);\n      const {\n        exp: expires,\n        iat: issuedAt,\n        sub: subject,\n        user_data: userData = {}\n      } = parsedPayload;\n      // Validate the types\n      if (typeof expires !== \"number\") {\n        throw new Error(\"Failed to decode access token 'exp'\");\n      } else if (typeof issuedAt !== \"number\") {\n        throw new Error(\"Failed to decode access token 'iat'\");\n      }\n      return {\n        expires,\n        issuedAt,\n        subject,\n        userData\n      };\n    } else {\n      throw new Error(\"Missing an access token\");\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nclass Credentials {\n  /**\n   * Constructs an instance of credentials.\n   *\n   * @param providerName The name of the authentication provider used when authenticating.\n   * @param providerType The type of the authentication provider used when authenticating.\n   * @param payload The data being sent to the service when authenticating.\n   */\n  constructor(providerName, providerType, payload) {\n    this.providerName = providerName;\n    this.providerType = providerType;\n    this.payload = payload;\n  }\n  /**\n   * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n   *\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n  static anonymous() {\n    return new Credentials(\"anon-user\", \"anon-user\", {});\n  }\n  /**\n   * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n   *\n   * @deprecated Use `Credentials.apiKey`.\n   * @param key The secret content of the API key.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n  static userApiKey(key) {\n    return new Credentials(\"api-key\", \"api-key\", {\n      key\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n   *\n   * @deprecated Use `Credentials.apiKey`.\n   * @param key The secret content of the API key.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n  static serverApiKey(key) {\n    return new Credentials(\"api-key\", \"api-key\", {\n      key\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n   *\n   * @param key The secret content of the API key.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n  static apiKey(key) {\n    return new Credentials(\"api-key\", \"api-key\", {\n      key\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n   * Note: This was formerly known as the \"Username/Password\" provider.\n   *\n   * @param email The end-users email address.\n   * @param password The end-users password.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n  static emailPassword(email, password) {\n    return new Credentials(\"local-userpass\", \"local-userpass\", {\n      username: email,\n      password\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n   *\n   * @param payload The custom payload as expected by the server.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n  static function(payload) {\n    return new Credentials(\"custom-function\", \"custom-function\", payload);\n  }\n  /**\n   * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n   *\n   * @param token The JSON Web Token (JWT).\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n  static jwt(token) {\n    return new Credentials(\"custom-token\", \"custom-token\", {\n      token\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n   *\n   * @param payload The URL that users should be redirected to, the auth code or id token from Google.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n  static google(payload) {\n    return new Credentials(\"oauth2-google\", \"oauth2-google\", Credentials.derivePayload(payload));\n  }\n  /**\n   * @param payload The payload string.\n   * @returns A payload object based on the string.\n   */\n  static derivePayload(payload) {\n    if (typeof payload === \"string\") {\n      if (payload.includes(\"://\")) {\n        return this.derivePayload({\n          redirectUrl: payload\n        });\n      } else if (payload.startsWith(\"4/\")) {\n        return this.derivePayload({\n          authCode: payload\n        });\n      } else if (payload.startsWith(\"ey\")) {\n        return this.derivePayload({\n          idToken: payload\n        });\n      } else {\n        throw new Error(`Unexpected payload: ${payload}`);\n      }\n    } else if (Object.keys(payload).length === 1) {\n      if (\"authCode\" in payload || \"redirectUrl\" in payload) {\n        return payload;\n      } else if (\"idToken\" in payload) {\n        return {\n          id_token: payload.idToken\n        };\n      } else {\n        throw new Error(\"Unexpected payload: \" + JSON.stringify(payload));\n      }\n    } else {\n      throw new Error(\"Expected only one property in payload, got \" + JSON.stringify(payload));\n    }\n  }\n  /**\n   * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n   *\n   * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n  static facebook(redirectUrlOrAccessToken) {\n    return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\") ? {\n      redirectUrl: redirectUrlOrAccessToken\n    } : {\n      accessToken: redirectUrlOrAccessToken\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n   *\n   * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n  static apple(redirectUrlOrIdToken) {\n    return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\") ? {\n      redirectUrl: redirectUrlOrIdToken\n    } : {\n      id_token: redirectUrlOrIdToken\n    });\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst USER_IDS_STORAGE_KEY = \"userIds\";\nconst DEVICE_ID_STORAGE_KEY = \"deviceId\";\n/**\n * Storage specific to the app.\n */\nclass AppStorage extends PrefixedStorage {\n  /**\n   * @param storage The underlying storage to wrap.\n   * @param appId The id of the app.\n   */\n  constructor(storage, appId) {\n    super(storage, `app(${appId})`);\n  }\n  /**\n   * Reads out the list of user ids from storage.\n   *\n   * @returns A list of user ids.\n   */\n  getUserIds() {\n    const userIdsString = this.get(USER_IDS_STORAGE_KEY);\n    const userIds = userIdsString ? JSON.parse(userIdsString) : [];\n    if (Array.isArray(userIds)) {\n      // Remove any duplicates that might have been added\n      // The Set preserves insertion order\n      return [...new Set(userIds)];\n    } else {\n      throw new Error(\"Expected the user ids to be an array\");\n    }\n  }\n  /**\n   * Sets the list of ids in storage.\n   * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n   *\n   * @param userIds The list of ids to store.\n   * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n   */\n  setUserIds(userIds, mergeWithExisting) {\n    if (mergeWithExisting) {\n      // Add any existing user id to the end of this list, avoiding duplicates\n      const existingIds = this.getUserIds();\n      for (const id of existingIds) {\n        if (userIds.indexOf(id) === -1) {\n          userIds.push(id);\n        }\n      }\n    }\n    // Store the list of ids\n    this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n  }\n  /**\n   * Remove an id from the list of ids.\n   *\n   * @param userId The id of a User to be removed.\n   */\n  removeUserId(userId) {\n    const existingIds = this.getUserIds();\n    const userIds = existingIds.filter(id => id !== userId);\n    // Store the list of ids\n    this.setUserIds(userIds, false);\n  }\n  /**\n   * @returns id of this device (if any exists)\n   */\n  getDeviceId() {\n    return this.get(DEVICE_ID_STORAGE_KEY);\n  }\n  /**\n   * @param deviceId The id of this device, to send on subsequent authentication requests.\n   */\n  setDeviceId(deviceId) {\n    this.set(DEVICE_ID_STORAGE_KEY, deviceId);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nconst LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nconst CLOSE_CHECK_INTERVAL = 100; // 10 times per second\nconst REDIRECT_HASH_TO_RESULT = {\n  _stitch_client_app_id: \"appId\",\n  _baas_client_app_id: \"appId\",\n  _stitch_ua: \"userAuth\",\n  _baas_ua: \"userAuth\",\n  _stitch_link: \"link\",\n  _baas_link: \"link\",\n  _stitch_error: \"error\",\n  _baas_error: \"error\",\n  _stitch_state: \"state\",\n  _baas_state: \"state\"\n};\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\nclass OAuth2Helper {\n  /**\n   * @param storage The underlying storage to use when storing and retriving secrets.\n   * @param openWindow An optional function called when a browser window needs to open.\n   */\n  constructor(storage, openWindow = getEnvironment().openWindow) {\n    this.storage = storage.prefix(\"oauth2\");\n    this.openWindow = openWindow;\n  }\n  /**\n   * Parses the query string from the final step of the OAuth flow.\n   *\n   * @param queryString The query string passed through in location.hash.\n   * @returns The result of the OAuth flow.\n   */\n  static parseRedirectLocation(queryString) {\n    const params = decodeQueryString(queryString);\n    const result = {};\n    for (const [p, r] of Object.entries(REDIRECT_HASH_TO_RESULT)) {\n      const value = params[p];\n      if (value) {\n        result[r] = value;\n      }\n    }\n    return result;\n  }\n  /**\n   * Handle the redirect querystring by parsing it and storing it for others to consume.\n   *\n   * @param queryString The query string containing the encoded result from the OAuth provider.\n   * @param storage The underlying storage used to persist the result.\n   */\n  static handleRedirect(queryString, storage = getEnvironment().defaultStorage) {\n    const result = OAuth2Helper.parseRedirectLocation(queryString);\n    const {\n      state,\n      error\n    } = result;\n    if (typeof state === \"string\") {\n      const oauth2Storage = storage.prefix(\"oauth2\");\n      const stateStorage = OAuth2Helper.getStateStorage(oauth2Storage, state);\n      stateStorage.set(\"result\", JSON.stringify(result));\n    } else if (error) {\n      throw new Error(`Failed to handle OAuth 2.0 redirect: ${error}`);\n    } else {\n      throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n    }\n  }\n  /**\n   * Decodes the authInfo string into its seperate parts.\n   *\n   * @param authInfo An authInfo string returned from the server.\n   * @returns An object containing the separate parts of the authInfo string.\n   */\n  static decodeAuthInfo(authInfo) {\n    const parts = (authInfo || \"\").split(\"$\");\n    if (parts.length === 4) {\n      const [accessToken, refreshToken, userId, deviceId] = parts;\n      return {\n        accessToken,\n        refreshToken,\n        userId,\n        deviceId\n      };\n    } else {\n      throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n    }\n  }\n  /**\n   * Get the storage key associated of an secret associated with a state.\n   *\n   * @param storage The root storage used to derive a \"state namespaced\" storage.\n   * @param state The random state.\n   * @returns The storage associated with a particular state.\n   */\n  static getStateStorage(storage, state) {\n    return storage.prefix(`state(${state})`);\n  }\n  /**\n   * Open a window and wait for the redirect to be handled.\n   *\n   * @param url The URL to open.\n   * @param state The state which will be used to listen for storage updates.\n   * @returns The result passed through the redirect.\n   */\n  openWindowAndWaitForRedirect(url, state) {\n    const stateStorage = OAuth2Helper.getStateStorage(this.storage, state);\n    // Return a promise that resolves when the  gets known\n    return new Promise((resolve, reject) => {\n      let redirectWindow = null;\n      // We're declaring the interval now to enable referencing before its initialized\n      let windowClosedInterval; // eslint-disable-line prefer-const\n      const handleStorageUpdate = () => {\n        // Trying to get the secret from storage\n        const result = stateStorage.get(\"result\");\n        if (result) {\n          const parsedResult = JSON.parse(result);\n          // The secret got updated!\n          stateStorage.removeListener(handleStorageUpdate);\n          // Clear the storage to prevent others from reading this\n          stateStorage.clear();\n          // Try closing the newly created window\n          try {\n            if (redirectWindow) {\n              // Stop checking if the window closed\n              clearInterval(windowClosedInterval);\n              redirectWindow.close();\n            }\n          } catch (err) {\n            console.warn(`Failed closing redirect window: ${err}`);\n          } finally {\n            resolve(parsedResult);\n          }\n        }\n      };\n      // Add a listener to the state storage, awaiting an update to the secret\n      stateStorage.addListener(handleStorageUpdate);\n      // Open up a window\n      redirectWindow = this.openWindow(url);\n      // Not using a const, because we need the two listeners to reference each other when removing the other.\n      windowClosedInterval = setInterval(() => {\n        // Polling \"closed\" because registering listeners on the window violates cross-origin policies\n        if (!redirectWindow) {\n          // No need to keep polling for a window that we can't check\n          clearInterval(windowClosedInterval);\n        } else if (redirectWindow.closed) {\n          // Stop polling the window state\n          clearInterval(windowClosedInterval);\n          // Stop listening for changes to the storage\n          stateStorage.removeListener(handleStorageUpdate);\n          // Reject the promise\n          const err = new Error(\"Window closed\");\n          reject(err);\n        }\n      }, CLOSE_CHECK_INTERVAL);\n    });\n  }\n  /**\n   * Generate a random state string.\n   *\n   * @returns The random state string.\n   */\n  generateState() {\n    return generateRandomString(12, LOWERCASE_LETTERS);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst REDIRECT_LOCATION_HEADER = \"x-baas-location\";\n/**\n * Handles authentication and linking of users.\n */\nclass Authenticator {\n  /**\n   * @param fetcher The fetcher used to fetch responses from the server.\n   * @param storage The storage used when completing OAuth 2.0 flows (should not be scoped to a specific app).\n   * @param getDeviceInformation Called to get device information to be sent to the server.\n   */\n  constructor(fetcher, storage, getDeviceInformation) {\n    this.fetcher = fetcher;\n    this.oauth2 = new OAuth2Helper(storage);\n    this.getDeviceInformation = getDeviceInformation;\n  }\n  /**\n   * @param credentials Credentials to use when logging in.\n   * @param linkingUser A user requesting to link.\n   * @returns A promise resolving to the response from the server.\n   */\n  async authenticate(credentials, linkingUser) {\n    const deviceInformation = this.getDeviceInformation();\n    const isLinking = typeof linkingUser === \"object\";\n    if (credentials.providerType.startsWith(\"oauth2\") && typeof credentials.payload.redirectUrl === \"string\") {\n      // Initiate the OAuth2 flow by generating a state and fetch a redirect URL\n      const state = this.oauth2.generateState();\n      const url = await this.getLogInUrl(credentials, isLinking, {\n        state,\n        redirect: credentials.payload.redirectUrl,\n        // Ensure redirects are communicated in a header different from \"Location\" and status remains 200 OK\n        providerRedirectHeader: isLinking ? true : undefined,\n        // Add the device information, only if we're not linking - since that request won't have a body of its own.\n        device: !isLinking ? deviceInformation.encode() : undefined\n      });\n      // If we're linking, we need to send the users access token in the request\n      if (isLinking) {\n        const response = await this.fetcher.fetch({\n          method: \"GET\",\n          url,\n          tokenType: isLinking ? \"access\" : \"none\",\n          user: linkingUser,\n          // The response will set a cookie that we need to tell the browser to store\n          mode: \"cors\",\n          credentials: \"include\"\n        });\n        // If a response header contains a redirect URL: Open a window and wait for the redirect to be handled\n        const redirectUrl = response.headers.get(REDIRECT_LOCATION_HEADER);\n        if (redirectUrl) {\n          return this.openWindowAndWaitForAuthResponse(redirectUrl, state);\n        } else {\n          throw new Error(`Missing ${REDIRECT_LOCATION_HEADER} header`);\n        }\n      } else {\n        // Otherwise we can open a window and let the server redirect the user right away\n        // This gives lower latency (as we don't need the client to receive and execute the redirect in code)\n        // This also has less dependency on cookies and doesn't sent any tokens.\n        return this.openWindowAndWaitForAuthResponse(url, state);\n      }\n    } else {\n      const logInUrl = await this.getLogInUrl(credentials, isLinking);\n      const response = await this.fetcher.fetchJSON({\n        method: \"POST\",\n        url: logInUrl,\n        body: {\n          ...credentials.payload,\n          options: {\n            device: deviceInformation.toJSON()\n          }\n        },\n        tokenType: isLinking ? \"access\" : \"none\",\n        user: linkingUser\n      });\n      // Spread out values from the response and ensure they're valid\n      const {\n        user_id: userId,\n        access_token: accessToken,\n        refresh_token: refreshToken = null,\n        device_id: deviceId\n      } = response;\n      if (typeof userId !== \"string\") {\n        throw new Error(\"Expected a user id in the response\");\n      }\n      if (typeof accessToken !== \"string\") {\n        throw new Error(\"Expected an access token in the response\");\n      }\n      if (typeof refreshToken !== \"string\" && refreshToken !== null) {\n        throw new Error(\"Expected refresh token to be a string or null\");\n      }\n      if (typeof deviceId !== \"string\") {\n        throw new Error(\"Expected device id to be a string\");\n      }\n      return {\n        userId,\n        accessToken,\n        refreshToken,\n        deviceId\n      };\n    }\n  }\n  /**\n   * @param credentials Credentials to use when logging in.\n   * @param link Should the request link with the current user?\n   * @param extraQueryParams Any extra parameters to include in the query string\n   * @returns A promise resolving to the url to be used when logging in.\n   */\n  async getLogInUrl(credentials, link = false, extraQueryParams = {}) {\n    // See https://github.com/mongodb/stitch-js-sdk/blob/310f0bd5af80f818cdfbc3caf1ae29ffa8e9c7cf/packages/core/sdk/src/auth/internal/CoreStitchAuth.ts#L746-L780\n    const appRoute = this.fetcher.appRoute;\n    const loginRoute = appRoute.authProvider(credentials.providerName).login();\n    const qs = encodeQueryString({\n      link: link ? \"true\" : undefined,\n      ...extraQueryParams\n    });\n    const locationUrl = await this.fetcher.locationUrl;\n    return locationUrl + loginRoute.path + qs;\n  }\n  async openWindowAndWaitForAuthResponse(redirectUrl, state) {\n    const redirectResult = await this.oauth2.openWindowAndWaitForRedirect(redirectUrl, state);\n    // Decode the auth info (id, tokens, etc.) from the result of the redirect\n    return OAuth2Helper.decodeAuthInfo(redirectResult.userAuth);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Determine if the shape of an error response is specific to each service or widely used.\n/**\n * An error produced while communicating with the MongoDB Realm server.\n */\nclass MongoDBRealmError extends Error {\n  constructor(method, url, statusCode, statusText, error, errorCode, link) {\n    const summary = statusText ? `status ${statusCode} ${statusText}` : `status ${statusCode}`;\n    if (typeof error === \"string\") {\n      super(`Request failed (${method} ${url}): ${error} (${summary})`);\n    } else {\n      super(`Request failed (${method} ${url}): (${summary})`);\n    }\n    this.method = method;\n    this.url = url;\n    this.statusText = statusText;\n    this.statusCode = statusCode;\n    this.error = error;\n    this.errorCode = errorCode;\n    this.link = link;\n  }\n  /**\n   * Constructs and returns an error from a request and a response.\n   * Note: The caller must throw this error themselves.\n   *\n   * @param request The request sent to the server.\n   * @param response A raw response, as returned from the server.\n   * @returns An error from a request and a response.\n   */\n  static async fromRequestAndResponse(request, response) {\n    var _a;\n    const {\n      url,\n      method\n    } = request;\n    const {\n      status,\n      statusText\n    } = response;\n    if ((_a = response.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.startsWith(\"application/json\")) {\n      const body = await response.json();\n      if (typeof body === \"object\" && body) {\n        const {\n          error,\n          error_code: errorCode,\n          link\n        } = body;\n        return new MongoDBRealmError(method, url, status, statusText, typeof error === \"string\" ? error : undefined, typeof errorCode === \"string\" ? errorCode : undefined, typeof link === \"string\" ? link : undefined);\n      }\n    }\n    return new MongoDBRealmError(method, url, status, statusText);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param body A possible resonse body.\n * @returns An async iterator.\n */\nfunction asyncIteratorFromResponseBody(body) {\n  if (typeof body !== \"object\" || body === null) {\n    throw new Error(\"Expected a non-null object\");\n  } else if (Symbol.asyncIterator in body) {\n    return body;\n  } else if (\"getReader\" in body) {\n    const stream = body;\n    return {\n      [Symbol.asyncIterator]() {\n        const reader = stream.getReader();\n        return {\n          next() {\n            return reader.read();\n          },\n          async return() {\n            await reader.cancel();\n            return {\n              done: true,\n              value: null\n            };\n          }\n        };\n      }\n    };\n  } else {\n    throw new Error(\"Expected an AsyncIterable or a ReadableStream\");\n  }\n}\n/**\n * Wraps a NetworkTransport from the \"realm-network-transport\" package.\n * Extracts error messages and throws `MongoDBRealmError` objects upon failures.\n * Injects access or refresh tokens for a current or specific user.\n * Refreshes access tokens if requests fails due to a 401 error.\n * Optionally parses response as JSON before returning it.\n * Fetches and exposes an app's location url.\n */\nclass Fetcher {\n  /**\n   * @param config A configuration of the fetcher.\n   * @param config.appId The application id.\n   * @param config.transport The transport used when fetching.\n   * @param config.userContext An object used to determine the requesting user.\n   * @param config.locationUrlContext An object used to determine the location / base URL.\n   */\n  constructor({\n    appId,\n    transport,\n    userContext,\n    locationUrlContext\n  }) {\n    this.appId = appId;\n    this.transport = transport;\n    this.userContext = userContext;\n    this.locationUrlContext = locationUrlContext;\n  }\n  /**\n   * @param user An optional user to generate the header for.\n   * @param tokenType The type of token (access or refresh).\n   * @returns An object containing the user's token as \"Authorization\" header or undefined if no user is given.\n   */\n  static buildAuthorizationHeader(user, tokenType) {\n    if (!user || tokenType === \"none\") {\n      return {};\n    } else if (tokenType === \"access\") {\n      return {\n        Authorization: `Bearer ${user.accessToken}`\n      };\n    } else if (tokenType === \"refresh\") {\n      return {\n        Authorization: `Bearer ${user.refreshToken}`\n      };\n    } else {\n      throw new Error(`Unexpected token type (${tokenType})`);\n    }\n  }\n  /**\n   * @param body The body string or object passed from a request.\n   * @returns An object optionally specifying the \"Content-Type\" header.\n   */\n  static buildBody(body) {\n    if (!body) {\n      return;\n    } else if (typeof body === \"object\" && body !== null) {\n      return JSON.stringify(serialize(body));\n    } else if (typeof body === \"string\") {\n      return body;\n    } else {\n      console.log(\"body is\", body);\n      throw new Error(\"Unexpected type of body\");\n    }\n  }\n  /**\n   * @param body The body string or object passed from a request.\n   * @returns An object optionally specifying the \"Content-Type\" header.\n   */\n  static buildJsonHeader(body) {\n    if (body && body.length > 0) {\n      return {\n        \"Content-Type\": \"application/json\"\n      };\n    } else {\n      return {};\n    }\n  }\n  clone(config) {\n    return new Fetcher({\n      appId: this.appId,\n      transport: this.transport,\n      userContext: this.userContext,\n      locationUrlContext: this.locationUrlContext,\n      ...config\n    });\n  }\n  /**\n   * Fetch a network resource as an authenticated user.\n   *\n   * @param request The request which should be sent to the server.\n   * @returns The response from the server.\n   */\n  async fetch(request) {\n    const {\n      path,\n      url,\n      tokenType = \"access\",\n      user = this.userContext.currentUser,\n      ...restOfRequest\n    } = request;\n    if (typeof path === \"string\" && typeof url === \"string\") {\n      throw new Error(\"Use of 'url' and 'path' mutually exclusive\");\n    } else if (typeof path === \"string\") {\n      // Derive the URL\n      const url = (await this.locationUrlContext.locationUrl) + path;\n      return this.fetch({\n        ...request,\n        path: undefined,\n        url\n      });\n    } else if (typeof url === \"string\") {\n      const response = await this.transport.fetch({\n        ...restOfRequest,\n        url,\n        headers: {\n          ...Fetcher.buildAuthorizationHeader(user, tokenType),\n          ...request.headers\n        }\n      });\n      if (response.ok) {\n        return response;\n      } else if (user && response.status === 401 && tokenType === \"access\") {\n        // If the access token has expired, it would help refreshing it\n        await user.refreshAccessToken();\n        // Retry with the specific user, since the currentUser might have changed.\n        return this.fetch({\n          ...request,\n          user\n        });\n      } else {\n        if (user && response.status === 401 && tokenType === \"refresh\") {\n          // A 401 error while using the refresh token indicates the token has an issue.\n          // Reset the tokens to prevent a lock.\n          user.accessToken = null;\n          user.refreshToken = null;\n        }\n        // Throw an error with a message extracted from the body\n        throw await MongoDBRealmError.fromRequestAndResponse(request, response);\n      }\n    } else {\n      throw new Error(\"Expected either 'url' or 'path'\");\n    }\n  }\n  /**\n   * Fetch a network resource as an authenticated user and parse the result as extended JSON.\n   *\n   * @param request The request which should be sent to the server.\n   * @returns The response from the server, parsed as extended JSON.\n   */\n  async fetchJSON(request) {\n    const {\n      body\n    } = request;\n    const serializedBody = Fetcher.buildBody(body);\n    const contentTypeHeaders = Fetcher.buildJsonHeader(serializedBody);\n    const response = await this.fetch({\n      ...request,\n      body: serializedBody,\n      headers: {\n        Accept: \"application/json\",\n        ...contentTypeHeaders,\n        ...request.headers\n      }\n    });\n    const contentType = response.headers.get(\"content-type\");\n    if (contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(\"application/json\")) {\n      const responseBody = await response.json();\n      return deserialize(responseBody);\n    } else if (contentType === null) {\n      return null;\n    } else {\n      throw new Error(`Expected JSON response, got \"${contentType}\"`);\n    }\n  }\n  /**\n   * Fetch an \"event-stream\" resource as an authenticated user.\n   *\n   * @param request The request which should be sent to the server.\n   * @returns An async iterator over the response body.\n   */\n  async fetchStream(request) {\n    const {\n      body\n    } = await this.fetch({\n      ...request,\n      headers: {\n        Accept: \"text/event-stream\",\n        ...request.headers\n      }\n    });\n    return asyncIteratorFromResponseBody(body);\n  }\n  /**\n   * @returns The path of the app route.\n   */\n  get appRoute() {\n    return routes.api().app(this.appId);\n  }\n  /**\n   * @returns A promise of the location URL of the app.\n   */\n  get locationUrl() {\n    return this.locationUrlContext.locationUrl;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The key in a storage on which the device id is stored.\n */\nconst DEVICE_ID_STORAGE_KEY$1 = \"deviceId\";\nvar DeviceFields;\n(function (DeviceFields) {\n  DeviceFields[\"DEVICE_ID\"] = \"deviceId\";\n  DeviceFields[\"APP_ID\"] = \"appId\";\n  DeviceFields[\"APP_VERSION\"] = \"appVersion\";\n  DeviceFields[\"PLATFORM\"] = \"platform\";\n  DeviceFields[\"PLATFORM_VERSION\"] = \"platformVersion\";\n  DeviceFields[\"SDK_VERSION\"] = \"sdkVersion\";\n})(DeviceFields || (DeviceFields = {}));\n/**\n * Information describing the device, app and SDK.\n */\nclass DeviceInformation {\n  /**\n   * @param params Construct the device information from these parameters.\n   * @param params.appId A user-defined application id.\n   * @param params.appVersion A user-defined application version.\n   * @param params.deviceId An unique id for the end-users device.\n   */\n  constructor({\n    appId,\n    appVersion,\n    deviceId\n  }) {\n    /**\n     * The version of the Realm Web SDK (constant provided by Rollup).\n     */\n    this.sdkVersion = \"1.5.1\";\n    const environment = getEnvironment();\n    this.platform = environment.platform;\n    this.platformVersion = environment.platformVersion;\n    this.appId = appId;\n    this.appVersion = appVersion;\n    this.deviceId = deviceId;\n  }\n  /**\n   * @returns An base64 URI encoded representation of the device information.\n   */\n  encode() {\n    const obj = removeKeysWithUndefinedValues(this);\n    return gBase64.encode(JSON.stringify(obj));\n  }\n  /**\n   * @returns The defaults\n   */\n  toJSON() {\n    return removeKeysWithUndefinedValues(this);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\nconst DEFAULT_BASE_URL = \"https://stitch.mongodb.com\";\n/**\n * MongoDB Realm App\n */\nclass App {\n  /**\n   * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n   *\n   * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n   */\n  constructor(idOrConfiguration) {\n    /**\n     * An array of active and logged-out users.\n     * Elements in the beginning of the array is considered more recent than the later elements.\n     */\n    this.users = [];\n    /**\n     * A promise resolving to the App's location url.\n     */\n    this._locationUrl = null;\n    // If the argument is a string, convert it to a simple configuration object.\n    const configuration = typeof idOrConfiguration === \"string\" ? {\n      id: idOrConfiguration\n    } : idOrConfiguration;\n    // Initialize properties from the configuration\n    if (typeof configuration === \"object\" && typeof configuration.id === \"string\") {\n      this.id = configuration.id;\n    } else {\n      throw new Error(\"Missing a MongoDB Realm app-id\");\n    }\n    this.baseUrl = configuration.baseUrl || DEFAULT_BASE_URL;\n    if (configuration.skipLocationRequest) {\n      // Use the base url directly, instead of requesting a location URL from the server\n      this._locationUrl = Promise.resolve(this.baseUrl);\n    }\n    this.localApp = configuration.app;\n    const {\n      storage,\n      transport = new DefaultNetworkTransport()\n    } = configuration;\n    // Construct a fetcher wrapping the network transport\n    this.fetcher = new Fetcher({\n      appId: this.id,\n      userContext: this,\n      locationUrlContext: this,\n      transport\n    });\n    // Construct the auth providers\n    this.emailPasswordAuth = new EmailPasswordAuth(this.fetcher);\n    // Construct the storage\n    const baseStorage = storage || getEnvironment().defaultStorage;\n    this.storage = new AppStorage(baseStorage, this.id);\n    this.authenticator = new Authenticator(this.fetcher, baseStorage, () => this.deviceInformation);\n    // Hydrate the app state from storage\n    try {\n      this.hydrate();\n    } catch (err) {\n      // The storage was corrupted\n      this.storage.clear();\n      // A failed hydration shouldn't throw and break the app experience\n      // Since this is \"just\" persisted state that unfortunately got corrupted or partially lost\n      console.warn(\"Realm app hydration failed:\", err.message);\n    }\n  }\n  /**\n   * Get or create a singleton Realm App from an id.\n   * Calling this function multiple times with the same id will return the same instance.\n   *\n   * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n   * @returns The Realm App instance.\n   */\n  static getApp(id) {\n    if (id in App.appCache) {\n      return App.appCache[id];\n    } else {\n      const instance = new App(id);\n      App.appCache[id] = instance;\n      return instance;\n    }\n  }\n  /**\n   * Switch user.\n   *\n   * @param nextUser The user or id of the user to switch to.\n   */\n  switchUser(nextUser) {\n    const index = this.users.findIndex(u => u === nextUser);\n    if (index === -1) {\n      throw new Error(\"The user was never logged into this app\");\n    }\n    // Remove the user from the stack\n    const [user] = this.users.splice(index, 1);\n    // Insert the user in the beginning of the stack\n    this.users.unshift(user);\n  }\n  /**\n   * Log in a user.\n   *\n   * @param credentials Credentials to use when logging in.\n   * @param fetchProfile Should the users profile be fetched? (default: true)\n   * @returns A promise resolving to the newly logged in user.\n   */\n  async logIn(credentials, fetchProfile = true) {\n    const response = await this.authenticator.authenticate(credentials);\n    const user = this.createOrUpdateUser(response, credentials.providerType);\n    // Let's ensure this will be the current user, in case the user object was reused.\n    this.switchUser(user);\n    // If neeeded, fetch and set the profile on the user\n    if (fetchProfile) {\n      await user.refreshProfile();\n    }\n    // Persist the user id in the storage,\n    // merging to avoid overriding logins from other apps using the same underlying storage\n    this.storage.setUserIds(this.users.map(u => u.id), true);\n    // Read out and store the device id from the server\n    const deviceId = response.deviceId;\n    if (deviceId && deviceId !== \"000000000000000000000000\") {\n      this.storage.set(DEVICE_ID_STORAGE_KEY$1, deviceId);\n    }\n    // Return the user\n    return user;\n  }\n  /**\n   * @inheritdoc\n   */\n  async removeUser(user) {\n    // Remove the user from the list of users\n    const index = this.users.findIndex(u => u === user);\n    if (index === -1) {\n      throw new Error(\"The user was never logged into this app\");\n    }\n    this.users.splice(index, 1);\n    // Log out the user - this removes access and refresh tokens from storage\n    await user.logOut();\n    // Remove the users profile from storage\n    this.storage.remove(`user(${user.id}):profile`);\n    // Remove the user from the storage\n    this.storage.removeUserId(user.id);\n  }\n  /**\n   * The currently active user (or null if no active users exists).\n   *\n   * @returns the currently active user or null.\n   */\n  get currentUser() {\n    const activeUsers = this.users.filter(user => user.state === UserState.Active);\n    if (activeUsers.length === 0) {\n      return null;\n    } else {\n      // Current user is the top of the stack\n      return activeUsers[0];\n    }\n  }\n  /**\n   * All active and logged-out users:\n   *  - First in the list are active users (ordered by most recent call to switchUser or login)\n   *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n   *\n   * @returns An array of users active or loggedout users (current user being the first).\n   */\n  get allUsers() {\n    // Returning a freezed copy of the list of users to prevent outside changes\n    return Object.fromEntries(this.users.map(user => [user.id, user]));\n  }\n  /**\n   * @returns A promise of the app URL, with the app location resolved.\n   */\n  get locationUrl() {\n    if (!this._locationUrl) {\n      const path = routes.api().app(this.id).location().path;\n      this._locationUrl = this.fetcher.fetchJSON({\n        method: \"GET\",\n        url: this.baseUrl + path,\n        tokenType: \"none\"\n      }).then(body => {\n        if (typeof body !== \"object\") {\n          throw new Error(\"Expected response body be an object\");\n        } else {\n          return body;\n        }\n      }).then(({\n        hostname\n      }) => {\n        if (typeof hostname !== \"string\") {\n          throw new Error(\"Expected response to contain a 'hostname'\");\n        } else {\n          return hostname;\n        }\n      }).catch(err => {\n        // Reset the location to allow another request to fetch again.\n        this._locationUrl = null;\n        throw err;\n      });\n    }\n    return this._locationUrl;\n  }\n  /**\n   * @returns Information about the current device, sent to the server when authenticating.\n   */\n  get deviceInformation() {\n    const deviceIdStr = this.storage.getDeviceId();\n    const deviceId = typeof deviceIdStr === \"string\" && deviceIdStr !== \"000000000000000000000000\" ? new ObjectId(deviceIdStr) : undefined;\n    return new DeviceInformation({\n      appId: this.localApp ? this.localApp.name : undefined,\n      appVersion: this.localApp ? this.localApp.version : undefined,\n      deviceId\n    });\n  }\n  /**\n   * Create (and store) a new user or update an existing user's access and refresh tokens.\n   * This helps de-duplicating users in the list of users known to the app.\n   *\n   * @param response A response from the Authenticator.\n   * @param providerType The type of the authentication provider used.\n   * @returns A new or an existing user.\n   */\n  createOrUpdateUser(response, providerType) {\n    const existingUser = this.users.find(u => u.id === response.userId);\n    if (existingUser) {\n      // Update the users access and refresh tokens\n      existingUser.accessToken = response.accessToken;\n      existingUser.refreshToken = response.refreshToken;\n      return existingUser;\n    } else {\n      // Create and store a new user\n      if (!response.refreshToken) {\n        throw new Error(\"No refresh token in response from server\");\n      }\n      const user = new User({\n        app: this,\n        id: response.userId,\n        accessToken: response.accessToken,\n        refreshToken: response.refreshToken,\n        providerType\n      });\n      this.users.unshift(user);\n      return user;\n    }\n  }\n  /**\n   * Restores the state of the app (active and logged-out users) from the storage\n   */\n  hydrate() {\n    const userIds = this.storage.getUserIds();\n    this.users = userIds.map(id => new User({\n      app: this,\n      id\n    }));\n  }\n}\n/**\n * A map of app instances returned from calling getApp.\n */\nApp.appCache = {};\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nApp.Credentials = Credentials;\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Get or create a singleton Realm App from an id.\n * Calling this function multiple times with the same id will return the same instance.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance.\n */\nfunction getApp(id) {\n  return App.getApp(id);\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass LocalStorage {\n  /**\n   * Constructs a LocalStorage using the global window.\n   */\n  constructor() {\n    if (typeof globalThis.localStorage === \"object\") {\n      this.global = globalThis;\n    } else {\n      throw new Error(\"Cannot use LocalStorage without a global localStorage object\");\n    }\n  }\n  /** @inheritdoc */\n  get(key) {\n    return this.global.localStorage.getItem(key);\n  }\n  /** @inheritdoc */\n  set(key, value) {\n    return this.global.localStorage.setItem(key, value);\n  }\n  /** @inheritdoc */\n  remove(key) {\n    return this.global.localStorage.removeItem(key);\n  }\n  /** @inheritdoc */\n  prefix(keyPart) {\n    return new PrefixedStorage(this, keyPart);\n  }\n  /** @inheritdoc */\n  clear(prefix) {\n    const keys = [];\n    // Iterate all keys to find the once have a matching prefix.\n    for (let i = 0; i < this.global.localStorage.length; i++) {\n      const key = this.global.localStorage.key(i);\n      if (key && (!prefix || key.startsWith(prefix))) {\n        keys.push(key);\n      }\n    }\n    // Remove the items in a seperate loop to avoid updating while iterating.\n    for (const key of keys) {\n      this.global.localStorage.removeItem(key);\n    }\n  }\n  /** @inheritdoc */\n  addListener(listener) {\n    return this.global.addEventListener(\"storage\", listener);\n  }\n  /** @inheritdoc */\n  removeListener(listener) {\n    return this.global.removeEventListener(\"storage\", listener);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst browser = detect();\nconst DefaultStorage = \"localStorage\" in globalThis ? LocalStorage : MemoryStorage;\n/**\n * Attempt to use the browser to open a window\n *\n * @param url The url to open a window to.\n * @returns Then newly create window.\n */\nfunction openWindow(url) {\n  if (typeof globalThis.open === \"function\") {\n    return globalThis.open(url);\n  } else {\n    console.log(`Please open ${url}`);\n    return null;\n  }\n}\nconst environment$1 = {\n  defaultStorage: new DefaultStorage().prefix(\"realm-web\"),\n  openWindow,\n  platform: (browser === null || browser === void 0 ? void 0 : browser.name) || \"web\",\n  platformVersion: (browser === null || browser === void 0 ? void 0 : browser.version) || \"0.0.0\",\n  TextDecoder\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\nfunction handleAuthRedirect(location = globalThis.location, storage = environment$1.defaultStorage) {\n  try {\n    const queryString = location.hash.substr(1); // Strip the initial # from the hash\n    OAuth2Helper.handleRedirect(queryString, storage);\n  } catch (err) {\n    // Ensure calling this never throws: It should not interrupt a users flow.\n    console.warn(err);\n  }\n}\nexport { App, Credentials, DEFAULT_BASE_URL, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, setEnvironment };","map":{"version":3,"names":["EJSON","ObjectId","bson","BSON","__spreadArray","undefined","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","BrowserInfo","name","version","os","type","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOX_UA_REGEX","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","getNodeVersion","matchUserAgent","ua","reduce","matched","_a","browser","regex","uaMatch","exec","matchedRule","match","versionParts","split","join","createVersionParts","detectOS","searchBotMatch","ii","count","isNode","output","push","DefaultNetworkTransport","constructor","fetch","Error","AbortController","fetchWithCallbacks","request","handler","then","response","decodedBody","text","responseHeaders","headers","forEach","value","key","statusCode","status","body","r","onSuccess","catch","e","onError","timeoutMs","url","rest","signal","cancelTimeout","createTimeoutSignal","controller","timeout","setTimeout","abort","clearTimeout","DEFAULT_HEADERS","globalThis","bind","VERSION","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","Buffer","_TD","TextDecoder","_TE","TextEncoder","b64ch","b64chs","b64tab","a","tab","c","b64re","_fromCC","String","fromCharCode","_U8Afrom","Uint8Array","it","fn","x","map","_mkUriSafe","src","replace","m0","_tidyB64","s","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","charCodeAt","TypeError","substring","_btoa","toString","_fromUint8Array","u8a","maxargs","strs","apply","subarray","fromUint8Array","urlsafe","cb_utob","cc","re_utob","utob","u","_encode","encode","encodeURI","re_btou","cb_btou","cccc","cp","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","_toUint8Array","toUint8Array","_unURI","_decode","decode","isValid","_noEnum","v","enumerable","writable","configurable","extendString","_add","Object","defineProperty","extendUint8Array","extendBuiltins","gBase64","fromBase64","toBase64","encodeURL","SERIALIZATION_OPTIONS","relaxed","serialize","obj","deserialize","isArray","doc","UserType","DataKey","DATA_MAPPING","NAME","EMAIL","PICTURE","FIRST_NAME","LAST_NAME","GENDER","BIRTHDAY","MIN_AGE","MAX_AGE","UserProfile","Normal","identities","data","identity","id","provider_type","providerType","mappedData","fromEntries","entries","PrefixedStorage","storage","keyPart","get","PART_SEPARATOR","set","remove","prefix","clear","addListener","listener","removeListener","MemoryStorage","listeners","Set","fireListeners","keys","startsWith","add","delete","ACCESS_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","PROFILE_STORAGE_KEY","PROVIDER_TYPE_STORAGE_KEY","UserStorage","userId","accessToken","refreshToken","profile","assign","JSON","parse","stringify","removeKeysWithUndefinedValues","filter","entry","generateRandomString","alphabet","result","Math","floor","random","encodeQueryString","params","prefixed","cleanedParams","k","encodeURIComponent","decodeQueryString","str","cleanStr","substr","kvp","decodeURIComponent","RESERVED_NAMES","getOwnPropertyNames","cleanArgs","args","arg","cleanArgsAndSerialize","cleaned","FunctionsFactory","fetcher","config","serviceName","argsTransformation","create","factory","Proxy","target","p","receiver","indexOf","callFunction","prop","Reflect","service","appRoute","fetchJSON","method","path","functionsCall","callFunctionStreaming","qs","fetchStream","isDevelopmentMode","setIsDevelopmentMode","state","deprecationWarning","deprecatedItem","suggestedReplacement","console","warn","handleDeprecatedPositionalArgs","methodName","argNames","hasRestArgs","restArgsText","argsObject","prev","argName","index","restArgs","__DEV__","EmailPasswordAuth","providerName","registerUser","userDetails","emailPasswordAuth","register","confirmUser","tokenDetails","confirm","resendConfirmationEmail","emailDetails","confirmSend","retryCustomConfirmation","confirmCall","resetPassword","resetDetails","reset","sendResetPasswordEmail","resetSend","callResetPasswordFunction","resetCall","api","app","appId","location","authProvider","login","authProviderRoutes","auth","apiKeys","enable","disable","session","routes","ApiKeyAuth","tokenType","keyId","fetchAll","environment","setEnvironment","getEnvironment","WatchError","message","code","WatchStreamState","WatchStream","_state","NEED_DATA","_error","_textDecoder","_buffer","_bufferOffset","_eventType","_dataBuffer","feedBuffer","buffer","assertState","stream","advanceBufferState","feedLine","line","endsWith","feedSse","eventType","colon","field","sse","firstPercentIndex","start","percentIndex","encoded","parsed","_nextEvent","HAVE_EVENT","HAVE_ERROR","error_code","errorCode","error","nextEvent","out","nextNewlineIndex","MongoDBCollection","databaseName","collectionName","functions","find","options","database","collection","query","project","projection","sort","limit","findOne","findOneAndUpdate","update","upsert","returnNewDocument","findOneAndReplace","replacement","findOneAndDelete","aggregate","pipeline","insertOne","insertMany","documents","deleteOne","deleteMany","updateOne","updateMany","watch","ids","iterator","watchStream","chunk","createCollection","createDatabase","createService","db","DEFAULT_DEVICE_ID","UserState","UserType$1","User","parameters","_accessToken","_refreshToken","_profile","clone","userContext","currentUser","token","allUsers","LoggedOut","Active","Removed","isLoggedIn","customData","decodedToken","decodeAccessToken","userData","deviceId","payload","parsedPayload","refreshProfile","logOut","linkCredentials","credentials","authenticator","authenticate","details","refreshAccessToken","access_token","refreshCustomData","toJSON","mongoClient","parts","encodedPayload","decodedPayload","exp","expires","iat","issuedAt","sub","subject","user_data","Credentials","anonymous","userApiKey","serverApiKey","apiKey","emailPassword","email","password","username","function","jwt","google","derivePayload","includes","redirectUrl","authCode","idToken","id_token","facebook","redirectUrlOrAccessToken","apple","redirectUrlOrIdToken","USER_IDS_STORAGE_KEY","DEVICE_ID_STORAGE_KEY","AppStorage","getUserIds","userIdsString","userIds","setUserIds","mergeWithExisting","existingIds","removeUserId","getDeviceId","setDeviceId","LOWERCASE_LETTERS","CLOSE_CHECK_INTERVAL","REDIRECT_HASH_TO_RESULT","_stitch_client_app_id","_baas_client_app_id","_stitch_ua","_baas_ua","_stitch_link","_baas_link","_stitch_error","_baas_error","_stitch_state","_baas_state","OAuth2Helper","openWindow","parseRedirectLocation","queryString","handleRedirect","defaultStorage","oauth2Storage","stateStorage","getStateStorage","decodeAuthInfo","authInfo","openWindowAndWaitForRedirect","Promise","resolve","reject","redirectWindow","windowClosedInterval","handleStorageUpdate","parsedResult","clearInterval","close","err","setInterval","closed","generateState","REDIRECT_LOCATION_HEADER","Authenticator","getDeviceInformation","oauth2","linkingUser","deviceInformation","isLinking","getLogInUrl","redirect","providerRedirectHeader","device","user","mode","openWindowAndWaitForAuthResponse","logInUrl","user_id","refresh_token","device_id","link","extraQueryParams","loginRoute","locationUrl","redirectResult","userAuth","MongoDBRealmError","statusText","summary","fromRequestAndResponse","json","asyncIteratorFromResponseBody","Symbol","asyncIterator","reader","getReader","next","read","return","cancel","done","Fetcher","transport","locationUrlContext","buildAuthorizationHeader","Authorization","buildBody","log","buildJsonHeader","restOfRequest","ok","serializedBody","contentTypeHeaders","Accept","contentType","responseBody","DEVICE_ID_STORAGE_KEY$1","DeviceFields","DeviceInformation","appVersion","sdkVersion","platformVersion","DEFAULT_BASE_URL","App","idOrConfiguration","users","_locationUrl","configuration","baseUrl","skipLocationRequest","localApp","baseStorage","hydrate","getApp","appCache","instance","switchUser","nextUser","findIndex","splice","unshift","logIn","fetchProfile","createOrUpdateUser","removeUser","activeUsers","hostname","deviceIdStr","existingUser","LocalStorage","localStorage","global","getItem","setItem","removeItem","addEventListener","removeEventListener","DefaultStorage","open","environment$1","handleAuthRedirect","hash"],"sources":["/Users/jeremylehmann/Desktop/Software Development/Personal projects/form-api/frontend/node_modules/realm-web/dist/bundle.dom.es.js"],"sourcesContent":["import { EJSON, ObjectId } from 'bson';\nimport * as bson from 'bson';\nexport { bson as BSON };\n\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nfunction detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nfunction parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nfunction detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nfunction getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nclass DefaultNetworkTransport {\n    constructor() {\n        if (!DefaultNetworkTransport.fetch) {\n            throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n        }\n        if (!DefaultNetworkTransport.AbortController) {\n            throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n        }\n    }\n    fetchWithCallbacks(request, handler) {\n        // tslint:disable-next-line: no-console\n        this.fetch(request)\n            .then(async (response) => {\n            const decodedBody = await response.text();\n            // Pull out the headers of the response\n            const responseHeaders = {};\n            response.headers.forEach((value, key) => {\n                responseHeaders[key] = value;\n            });\n            return {\n                statusCode: response.status,\n                headers: responseHeaders,\n                body: decodedBody,\n            };\n        })\n            .then((r) => handler.onSuccess(r))\n            .catch((e) => handler.onError(e));\n    }\n    async fetch(request) {\n        const { timeoutMs, url, ...rest } = request;\n        const { signal, cancelTimeout } = this.createTimeoutSignal(timeoutMs);\n        try {\n            // We'll await the response to catch throw our own error\n            return await DefaultNetworkTransport.fetch(url, {\n                signal,\n                ...rest,\n            });\n        }\n        finally {\n            // Whatever happens, cancel any timeout\n            cancelTimeout();\n        }\n    }\n    createTimeoutSignal(timeoutMs) {\n        if (typeof timeoutMs === \"number\") {\n            const controller = new DefaultNetworkTransport.AbortController();\n            // Call abort after a specific number of milliseconds\n            const timeout = setTimeout(() => {\n                controller.abort();\n            }, timeoutMs);\n            return {\n                signal: controller.signal,\n                cancelTimeout: () => {\n                    clearTimeout(timeout);\n                },\n            };\n        }\n        else {\n            return {\n                signal: undefined,\n                cancelTimeout: () => {\n                    /* No-op */\n                },\n            };\n        }\n    }\n}\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n    \"Content-Type\": \"application/json\",\n};\n\n////////////////////////////////////////////////////////////////////////////\nDefaultNetworkTransport.fetch = globalThis.fetch.bind(globalThis);\nDefaultNetworkTransport.AbortController = globalThis.AbortController;\n\n/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n\n////////////////////////////////////////////////////////////////////////////\nconst SERIALIZATION_OPTIONS = {\n    relaxed: false, // Ensure Canonical mode\n};\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\nfunction serialize(obj) {\n    return EJSON.serialize(obj, SERIALIZATION_OPTIONS);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\nfunction deserialize(obj) {\n    if (Array.isArray(obj)) {\n        return obj.map((doc) => EJSON.deserialize(doc));\n    }\n    else {\n        return EJSON.deserialize(obj);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The type of a user.\n */\nvar UserType;\n(function (UserType) {\n    /**\n     * A normal end-user created this user.\n     */\n    UserType[\"Normal\"] = \"normal\";\n    /**\n     * The user was created by the server.\n     */\n    UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\nvar DataKey;\n(function (DataKey) {\n    /** @ignore */\n    DataKey[\"NAME\"] = \"name\";\n    /** @ignore */\n    DataKey[\"EMAIL\"] = \"email\";\n    /** @ignore */\n    DataKey[\"PICTURE\"] = \"picture\";\n    /** @ignore */\n    DataKey[\"FIRST_NAME\"] = \"first_name\";\n    /** @ignore */\n    DataKey[\"LAST_NAME\"] = \"last_name\";\n    /** @ignore */\n    DataKey[\"GENDER\"] = \"gender\";\n    /** @ignore */\n    DataKey[\"BIRTHDAY\"] = \"birthday\";\n    /** @ignore */\n    DataKey[\"MIN_AGE\"] = \"min_age\";\n    /** @ignore */\n    DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\nconst DATA_MAPPING = {\n    [DataKey.NAME]: \"name\",\n    [DataKey.EMAIL]: \"email\",\n    [DataKey.PICTURE]: \"pictureUrl\",\n    [DataKey.FIRST_NAME]: \"firstName\",\n    [DataKey.LAST_NAME]: \"lastName\",\n    [DataKey.GENDER]: \"gender\",\n    [DataKey.BIRTHDAY]: \"birthday\",\n    [DataKey.MIN_AGE]: \"minAge\",\n    [DataKey.MAX_AGE]: \"maxAge\",\n};\n/** @inheritdoc */\nclass UserProfile {\n    /**\n     * @param response The response of a call fetching the users profile.\n     */\n    constructor(response) {\n        /** @ignore */\n        this.type = UserType.Normal;\n        /** @ignore */\n        this.identities = [];\n        if (typeof response === \"object\" && response !== null) {\n            const { type, identities, data } = response;\n            if (typeof type === \"string\") {\n                this.type = type;\n            }\n            else {\n                throw new Error(\"Expected 'type' in the response body\");\n            }\n            if (Array.isArray(identities)) {\n                this.identities = identities.map((identity) => {\n                    const { id, provider_type: providerType } = identity;\n                    return { id, providerType };\n                });\n            }\n            else {\n                throw new Error(\"Expected 'identities' in the response body\");\n            }\n            if (typeof data === \"object\" && data !== null) {\n                const mappedData = Object.fromEntries(Object.entries(data).map(([key, value]) => {\n                    if (key in DATA_MAPPING) {\n                        // Translate any known data field to its JS idiomatic alias\n                        return [DATA_MAPPING[key], value];\n                    }\n                    else {\n                        // Pass through any other values\n                        return [key, value];\n                    }\n                }));\n                // We can use `any` since we trust the user supplies the correct type\n                this.data = deserialize(mappedData);\n            }\n            else {\n                throw new Error(\"Expected 'data' in the response body\");\n            }\n        }\n        else {\n            this.data = {};\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\nclass PrefixedStorage {\n    /**\n     * Construct a `Storage` which will prefix a key part to every operation.\n     *\n     * @param storage The underlying storage to use for operations.\n     * @param keyPart The part of the key to prefix when performing operations.\n     */\n    constructor(storage, keyPart) {\n        this.storage = storage;\n        this.keyPart = keyPart;\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix = \"\") {\n        return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.storage.addListener(listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.storage.addListener(listener);\n    }\n}\n/**\n * The string separating two parts.\n */\nPrefixedStorage.PART_SEPARATOR = \":\";\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass MemoryStorage {\n    constructor() {\n        /**\n         * Internal state of the storage.\n         */\n        this.storage = {};\n        /**\n         * A set of listners.\n         */\n        this.listeners = new Set();\n    }\n    /** @inheritdoc */\n    get(key) {\n        if (key in this.storage) {\n            return this.storage[key];\n        }\n        else {\n            return null;\n        }\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        this.storage[key] = value;\n        // Fire the listeners\n        this.fireListeners();\n    }\n    /** @inheritdoc */\n    remove(key) {\n        delete this.storage[key];\n        // Fire the listeners\n        this.fireListeners();\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix) {\n        // Iterate all keys and delete their values if they have a matching prefix\n        for (const key of Object.keys(this.storage)) {\n            if (!prefix || key.startsWith(prefix)) {\n                delete this.storage[key];\n            }\n        }\n        // Fire the listeners\n        this.fireListeners();\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        this.listeners.add(listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        this.listeners.delete(listener);\n    }\n    /**\n     * Tell the listeners that a change occurred.\n     */\n    fireListeners() {\n        this.listeners.forEach((listener) => listener());\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nconst PROFILE_STORAGE_KEY = \"profile\";\nconst PROVIDER_TYPE_STORAGE_KEY = \"providerType\";\n/**\n * Storage specific to the app.\n */\nclass UserStorage extends PrefixedStorage {\n    /**\n     * Construct a storage for a `User`.\n     *\n     * @param storage The underlying storage to wrap.\n     * @param userId The id of the user.\n     */\n    constructor(storage, userId) {\n        super(storage, `user(${userId})`);\n    }\n    /**\n     * Get the access token from storage.\n     *\n     * @returns Access token (null if unknown).\n     */\n    get accessToken() {\n        return this.get(ACCESS_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the access token in storage.\n     *\n     * @param value Access token (null if unknown).\n     */\n    set accessToken(value) {\n        if (value === null) {\n            this.remove(ACCESS_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the refresh token from storage.\n     *\n     * @returns Refresh token (null if unknown and user is logged out).\n     */\n    get refreshToken() {\n        return this.get(REFRESH_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the refresh token in storage.\n     *\n     * @param value Refresh token (null if unknown and user is logged out).\n     */\n    set refreshToken(value) {\n        if (value === null) {\n            this.remove(REFRESH_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the user profile from storage.\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get profile() {\n        const value = this.get(PROFILE_STORAGE_KEY);\n        if (value) {\n            const profile = new UserProfile();\n            // Patch in the values\n            Object.assign(profile, JSON.parse(value));\n            return profile;\n        }\n    }\n    /**\n     * Set the user profile in storage.\n     *\n     * @param value User profile (undefined if its unknown).\n     */\n    set profile(value) {\n        if (value) {\n            this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n        }\n        else {\n            this.remove(PROFILE_STORAGE_KEY);\n        }\n    }\n    /**\n     * Get the type of authentication provider used to authenticate\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get providerType() {\n        const value = this.get(PROVIDER_TYPE_STORAGE_KEY);\n        if (value) {\n            return value;\n        }\n    }\n    /**\n     * Set the type of authentication provider used to authenticate\n     *\n     * @param value Type of authentication provider.\n     */\n    set providerType(value) {\n        if (value) {\n            this.set(PROVIDER_TYPE_STORAGE_KEY, value);\n        }\n        else {\n            this.remove(PROVIDER_TYPE_STORAGE_KEY);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param obj The object to remove keys (and undefined values from)\n * @returns A new object without the keys where the value is undefined.\n */\nfunction removeKeysWithUndefinedValues(obj) {\n    return Object.fromEntries(Object.entries(obj).filter((entry) => typeof entry[1] !== \"undefined\"));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\nfunction generateRandomString(length, alphabet) {\n    let result = \"\";\n    for (let i = 0; i < length; i++) {\n        result += alphabet[Math.floor(Math.random() * alphabet.length)];\n    }\n    return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @param prefixed Should the \"?\" prefix be added if values exists?\n * @returns A URL encoded representation of the parameters (omitting a \"?\" prefix).\n */\nfunction encodeQueryString(params, prefixed = true) {\n    // Filter out undefined values\n    const cleanedParams = removeKeysWithUndefinedValues(params);\n    // Determine if a prefixed \"?\" is appropreate\n    const prefix = prefixed && Object.keys(cleanedParams).length > 0 ? \"?\" : \"\";\n    // Transform keys and values to a query string\n    return (prefix +\n        Object.entries(cleanedParams)\n            .map(([k, v]) => `${k}=${encodeURIComponent(v)}`)\n            .join(\"&\"));\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\nfunction decodeQueryString(str) {\n    const cleanStr = str[0] === \"?\" ? str.substr(1) : str;\n    return Object.fromEntries(cleanStr\n        .split(\"&\")\n        .filter((s) => s.length > 0)\n        .map((kvp) => kvp.split(\"=\"))\n        .map(([k, v]) => [k, decodeURIComponent(v)]));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\nconst RESERVED_NAMES = [\n    \"inspect\",\n    \"callFunction\",\n    \"callFunctionStreaming\",\n    // Methods defined on the Object.prototype might be \"typeof probed\" and called by libraries and runtime environments.\n    ...Object.getOwnPropertyNames(Object.prototype),\n];\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\nfunction cleanArgs(args) {\n    for (const arg of args) {\n        if (typeof arg === \"object\" && arg) {\n            for (const [key, value] of Object.entries(arg)) {\n                if (value === undefined) {\n                    delete arg[key];\n                }\n            }\n        }\n    }\n    return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\nfunction cleanArgsAndSerialize(args) {\n    const cleaned = cleanArgs(args);\n    return cleaned.map((arg) => (typeof arg === \"object\" ? serialize(arg) : arg));\n}\n/**\n * Defines how functions are called.\n */\nclass FunctionsFactory {\n    /**\n     * @param fetcher The underlying fetcher to use when sending requests.\n     * @param config Additional configuration parameters.\n     */\n    constructor(fetcher, config = {}) {\n        this.fetcher = fetcher;\n        this.serviceName = config.serviceName;\n        this.argsTransformation = config.argsTransformation || cleanArgsAndSerialize;\n    }\n    /**\n     * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n     *\n     * @param fetcher The underlying fetcher to use when requesting.\n     * @param config Additional configuration parameters.\n     * @returns The newly created factory of functions.\n     */\n    static create(fetcher, config = {}) {\n        // Create a proxy, wrapping a simple object returning methods that calls functions\n        // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n        const factory = new FunctionsFactory(fetcher, config);\n        // Wrap the factory in a proxy that calls the internal call method\n        return new Proxy(factory, {\n            get(target, p, receiver) {\n                if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n                    return target.callFunction.bind(target, p);\n                }\n                else {\n                    const prop = Reflect.get(target, p, receiver);\n                    return typeof prop === \"function\" ? prop.bind(target) : prop;\n                }\n            },\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    async callFunction(name, ...args) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n        const body = {\n            name,\n            arguments: this.argsTransformation ? this.argsTransformation(args) : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const appRoute = this.fetcher.appRoute;\n        return this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.functionsCall().path,\n            body,\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    callFunctionStreaming(name, ...args) {\n        const body = {\n            name,\n            arguments: this.argsTransformation ? this.argsTransformation(args) : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const appRoute = this.fetcher.appRoute;\n        const qs = encodeQueryString({\n            [\"baas_request\"]: gBase64.encode(JSON.stringify(body)),\n        });\n        return this.fetcher.fetchStream({\n            method: \"GET\",\n            path: appRoute.functionsCall().path + qs,\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2021 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * Check whether the user's app is running in \"development mode\" (e.g. `npm run dev`\n * for a React app, or `NODE_ENV=development` for a Node app). Each platform's entry\n * point should define the value of this using `setIsDevelopmentMode`.\n * The default behaviour is to always return `false`.\n *\n * @returns true if the user's app is running in development mode, false otherwise\n */\nlet isDevelopmentMode = false;\n/**\n * Set the value of `isDevelopmentMode`. This allows each entry point (node vs DOM)\n * to use its own method for determining whether we are in development mode.\n *\n * @param state A boolean indicating whether the user's app is running in\n * development mode or not.\n */\nconst setIsDevelopmentMode = (state) => {\n    isDevelopmentMode = state;\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Display a deprecation warning for features being removed in the next major version\n * to users in development mode (as best as we can detect this, see `isDevelopmentMode`)\n *\n * @param deprecatedItem The method signature or name of the deprecated item\n * @param suggestedReplacement The method signature or name of the suggested replacement\n */\nconst deprecationWarning = (deprecatedItem, suggestedReplacement) => {\n    if (!isDevelopmentMode)\n        return;\n    console.warn(`Deprecation warning from Realm: ${deprecatedItem} is deprecated and will be removed in a future major release. Consider switching to ${suggestedReplacement}.`);\n};\n/**\n * Helper function for migrating from positional arguments to a single dictionary argument.\n * Check the arguments passed to a function, if the first argument is not an object (i.e. it\n * is presumed to be a deprecated positional-style call), shows a deprecation warning and\n * converts the positional arguments into an object matching the expected \"new\" shape.\n *\n * @param args Array of arguments passed to the function (captured with `...args`).\n * @param methodName The name of the method, used to show the deprecation warning.\n * @param argNames The list of positional argument names, used to covert them into\n * an object if a deprecated call is made and to show the deprecation warning.\n * @param hasRestArgs Optional flag indicating that the function's final argument is\n * `...args` (to capture any extra arguments), in which case we capture them and return\n * as the second element of the return array.\n *\n * @returns An object containing:\n *\n * argsObject: a dictionary of function arguments, either passed through from args[0] if\n * args[0] is an object, or created from `args` and `argNames` if the args are a\n * deprecated positional argument call.\n *\n * restArgs: an array of the \"...args\" passed to the function if `hasRestArgs` is true;\n * otherwise it is `undefined`.\n */\n// Allow use of `object` type\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst handleDeprecatedPositionalArgs = (args, methodName, argNames, hasRestArgs) => {\n    if (typeof args[0] !== \"object\") {\n        const restArgsText = hasRestArgs ? \", ...args\" : \"\";\n        deprecationWarning(`${methodName}(${argNames.join(\", \")}${restArgsText})`, `${methodName}({ ${argNames.join(\", \")} }${restArgsText})`);\n        // Convert the array of arguments into a dictionary keyed by the relevant argName\n        const argsObject = argNames.reduce((prev, argName, index) => {\n            return { ...prev, [argName]: args[index] };\n        }, {});\n        const restArgs = hasRestArgs ? args.slice(argNames.length) : undefined;\n        return { argsObject, restArgs };\n    }\n    return { argsObject: args[0], restArgs: hasRestArgs ? args.slice(1) : undefined };\n};\n\n////////////////////////////////////////////////////////////////////////////\n// React/React Native set a global __DEV__ variable when running in dev mode\nsetIsDevelopmentMode(typeof __DEV__ !== \"undefined\" && __DEV__);\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass EmailPasswordAuth {\n    /**\n     * Construct an interface to the email / password authentication provider.\n     *\n     * @param fetcher The underlying fetcher used to request the services.\n     * @param providerName Optional custom name of the authentication provider.\n     */\n    constructor(fetcher, providerName = \"local-userpass\") {\n        this.fetcher = fetcher;\n        this.providerName = providerName;\n    }\n    async registerUser(...args) {\n        const { argsObject: userDetails } = handleDeprecatedPositionalArgs(args, \"registerUser\", [\"email\", \"password\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).register().path,\n            body: userDetails,\n        });\n    }\n    async confirmUser(...args) {\n        const { argsObject: tokenDetails } = handleDeprecatedPositionalArgs(args, \"confirmUser\", [\"token\", \"tokenId\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirm().path,\n            body: tokenDetails,\n        });\n    }\n    async resendConfirmationEmail(...args) {\n        const { argsObject: emailDetails } = handleDeprecatedPositionalArgs(args, \"resendConfirmationEmail\", [\"email\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirmSend().path,\n            body: emailDetails,\n        });\n    }\n    async retryCustomConfirmation(...args) {\n        const { argsObject: emailDetails } = handleDeprecatedPositionalArgs(args, \"retryCustomConfirmation\", [\"email\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirmCall().path,\n            body: emailDetails,\n        });\n    }\n    async resetPassword(...args) {\n        const { argsObject: resetDetails } = handleDeprecatedPositionalArgs(args, \"resetPassword\", [\"token\", \"tokenId\", \"password\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).reset().path,\n            body: resetDetails,\n        });\n    }\n    async sendResetPasswordEmail(...args) {\n        const { argsObject: emailDetails } = handleDeprecatedPositionalArgs(args, \"sendResetPasswordEmail\", [\"email\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).resetSend().path,\n            body: emailDetails,\n        });\n    }\n    async callResetPasswordFunction(...args) {\n        const { argsObject: resetDetails, restArgs, } = handleDeprecatedPositionalArgs(args, \"callResetPasswordFunction\", [\"email\", \"password\"], true);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).resetCall().path,\n            body: { ...resetDetails, arguments: restArgs },\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @returns The base api route.\n */\nfunction api() {\n    return {\n        path: \"/api/client/v2.0\",\n        /**\n         * @param appId The id of the app.\n         * @returns The URL of the app endpoint.\n         */\n        app(appId) {\n            return {\n                path: this.path + `/app/${appId}`,\n                /**\n                 * @returns The URL of the app location endpoint.\n                 */\n                location() {\n                    return {\n                        path: this.path + \"/location\",\n                    };\n                },\n                /**\n                 * @param providerName The name of the provider.\n                 * @returns The app url concatinated with the /auth/providers/{providerName}\n                 */\n                authProvider(providerName) {\n                    return {\n                        path: this.path + `/auth/providers/${providerName}`,\n                        /**\n                         * @returns Get the URL of an authentication provider.\n                         */\n                        login() {\n                            return { path: this.path + \"/login\" };\n                        },\n                    };\n                },\n                /**\n                 * @param providerName The name of the provider.\n                 * @returns The app url concatinated with the /auth/providers/{providerName}\n                 */\n                emailPasswordAuth(providerName) {\n                    const authProviderRoutes = this.authProvider(providerName);\n                    return {\n                        ...authProviderRoutes,\n                        register() {\n                            return { path: this.path + \"/register\" };\n                        },\n                        confirm() {\n                            return { path: this.path + \"/confirm\" };\n                        },\n                        confirmSend() {\n                            return { path: this.path + \"/confirm/send\" };\n                        },\n                        confirmCall() {\n                            return { path: this.path + \"/confirm/call\" };\n                        },\n                        reset() {\n                            return { path: this.path + \"/reset\" };\n                        },\n                        resetSend() {\n                            return { path: this.path + \"/reset/send\" };\n                        },\n                        resetCall() {\n                            return { path: this.path + \"/reset/call\" };\n                        },\n                    };\n                },\n                functionsCall() {\n                    return {\n                        path: this.path + \"/functions/call\",\n                    };\n                },\n            };\n        },\n        auth() {\n            return {\n                path: this.path + \"/auth\",\n                apiKeys() {\n                    return {\n                        path: this.path + \"/api_keys\",\n                        key(id) {\n                            return {\n                                path: this.path + `/${id}`,\n                                enable() {\n                                    return { path: this.path + \"/enable\" };\n                                },\n                                disable() {\n                                    return { path: this.path + \"/disable\" };\n                                },\n                            };\n                        },\n                    };\n                },\n                profile() {\n                    return { path: this.path + \"/profile\" };\n                },\n                session() {\n                    return { path: this.path + \"/session\" };\n                },\n            };\n        },\n    };\n}\nvar routes = { api };\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass ApiKeyAuth {\n    /**\n     * Construct an interface to the API-key authentication provider.\n     *\n     * @param fetcher The fetcher used to send requests to services.\n     */\n    constructor(fetcher) {\n        this.fetcher = fetcher;\n    }\n    /** @inheritdoc */\n    create(name) {\n        return this.fetcher.fetchJSON({\n            method: \"POST\",\n            body: { name },\n            path: routes.api().auth().apiKeys().path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    fetch(keyId) {\n        return this.fetcher.fetchJSON({\n            method: \"GET\",\n            path: routes.api().auth().apiKeys().key(keyId).path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    fetchAll() {\n        return this.fetcher.fetchJSON({\n            method: \"GET\",\n            tokenType: \"refresh\",\n            path: routes.api().auth().apiKeys().path,\n        });\n    }\n    /** @inheritdoc */\n    async delete(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"DELETE\",\n            path: routes.api().auth().apiKeys().key(keyId).path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    async enable(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"PUT\",\n            path: routes.api().auth().apiKeys().key(keyId).enable().path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    async disable(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"PUT\",\n            path: routes.api().auth().apiKeys().key(keyId).disable().path,\n            tokenType: \"refresh\",\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nlet environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\nfunction setEnvironment(e) {\n    environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\nfunction getEnvironment() {\n    if (environment) {\n        return environment;\n    }\n    else {\n        throw new Error(\"Cannot get environment before it's set\");\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * An error occured during the parsing of a watch stream.\n */\nclass WatchError extends Error {\n    constructor({ message, code }) {\n        super(message);\n        /**\n         * The name of this type of error\n         */\n        this.name = \"WatchError\";\n        this.code = code;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n// NOTE: this is a fully processed event, not a single \"data: foo\" line!\n/**\n * The state of a WatchStream.\n */\nvar WatchStreamState;\n(function (WatchStreamState) {\n    /**\n     * Need to call one of the feed functions.\n     */\n    WatchStreamState[\"NEED_DATA\"] = \"NEED_DATA\";\n    /**\n     * Call nextEvent() to consume an event.\n     */\n    WatchStreamState[\"HAVE_EVENT\"] = \"HAVE_EVENT\";\n    /**\n     * Call error().\n     */\n    WatchStreamState[\"HAVE_ERROR\"] = \"HAVE_ERROR\";\n})(WatchStreamState || (WatchStreamState = {}));\n/**\n * Represents a stream of events\n */\nclass WatchStream {\n    constructor() {\n        this._state = WatchStreamState.NEED_DATA;\n        this._error = null;\n        // Used by feedBuffer to construct lines\n        this._textDecoder = new (getEnvironment().TextDecoder)();\n        this._buffer = \"\";\n        this._bufferOffset = 0;\n        // Used by feedLine for building the next SSE\n        this._eventType = \"\";\n        this._dataBuffer = \"\";\n    }\n    // Call these when you have data, in whatever shape is easiest for your SDK to get.\n    // Pick one, mixing and matching on a single instance isn't supported.\n    // These can only be called in NEED_DATA state, which is the initial state.\n    feedBuffer(buffer) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        this._buffer += this._textDecoder.decode(buffer, { stream: true });\n        this.advanceBufferState();\n    }\n    feedLine(line) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        // This is an implementation of the algorithm described at\n        // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation.\n        // Currently the server does not use id or retry lines, so that processing isn't implemented.\n        // ignore trailing LF if not removed by SDK.\n        if (line.endsWith(\"\\n\"))\n            line = line.substr(0, line.length - 1);\n        // ignore trailing CR from CRLF\n        if (line.endsWith(\"\\r\"))\n            line = line.substr(0, line.length - 1);\n        if (line.length === 0) {\n            // This is the \"dispatch the event\" portion of the algorithm.\n            if (this._dataBuffer.length === 0) {\n                this._eventType = \"\";\n                return;\n            }\n            if (this._dataBuffer.endsWith(\"\\n\"))\n                this._dataBuffer = this._dataBuffer.substr(0, this._dataBuffer.length - 1);\n            this.feedSse({\n                data: this._dataBuffer,\n                eventType: this._eventType,\n            });\n            this._dataBuffer = \"\";\n            this._eventType = \"\";\n        }\n        if (line[0] === \":\")\n            return;\n        const colon = line.indexOf(\":\");\n        const field = line.substr(0, colon);\n        let value = colon === -1 ? \"\" : line.substr(colon + 1);\n        if (value.startsWith(\" \"))\n            value = value.substr(1);\n        if (field === \"event\") {\n            this._eventType = value;\n        }\n        else if (field === \"data\") {\n            this._dataBuffer += value;\n            this._dataBuffer += \"\\n\";\n        }\n        else ;\n    }\n    feedSse(sse) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        const firstPercentIndex = sse.data.indexOf(\"%\");\n        if (firstPercentIndex !== -1) {\n            // For some reason, the stich server decided to add percent-encoding for '%', '\\n', and '\\r' to its\n            // event-stream replies. But it isn't real urlencoding, since most characters pass through, so we can't use\n            // uri_percent_decode() here.\n            let buffer = \"\";\n            let start = 0;\n            for (let percentIndex = firstPercentIndex; percentIndex !== -1; percentIndex = sse.data.indexOf(\"%\", start)) {\n                buffer += sse.data.substr(start, percentIndex - start);\n                const encoded = sse.data.substr(percentIndex, 3); // may be smaller than 3 if string ends with %\n                if (encoded === \"%25\") {\n                    buffer += \"%\";\n                }\n                else if (encoded === \"%0A\") {\n                    buffer += \"\\x0A\"; // '\\n'\n                }\n                else if (encoded === \"%0D\") {\n                    buffer += \"\\x0D\"; // '\\r'\n                }\n                else {\n                    buffer += encoded; // propagate as-is\n                }\n                start = percentIndex + encoded.length;\n            }\n            // Advance the buffer with the last part\n            buffer += sse.data.substr(start);\n            sse.data = buffer;\n        }\n        if (!sse.eventType || sse.eventType === \"message\") {\n            try {\n                const parsed = EJSON.parse(sse.data);\n                if (typeof parsed === \"object\") {\n                    // ???\n                    this._nextEvent = parsed;\n                    this._state = WatchStreamState.HAVE_EVENT;\n                    return;\n                }\n            }\n            catch {\n                // fallthrough to same handling as for non-document value.\n            }\n            this._state = WatchStreamState.HAVE_ERROR;\n            this._error = new WatchError({\n                message: \"server returned malformed event: \" + sse.data,\n                code: \"bad bson parse\",\n            });\n        }\n        else if (sse.eventType === \"error\") {\n            this._state = WatchStreamState.HAVE_ERROR;\n            // default error message if we have issues parsing the reply.\n            this._error = new WatchError({\n                message: sse.data,\n                code: \"unknown\",\n            });\n            try {\n                const { error_code: errorCode, error } = EJSON.parse(sse.data);\n                if (typeof errorCode !== \"string\")\n                    return;\n                if (typeof error !== \"string\")\n                    return;\n                // XXX in realm-js, object-store will error if the error_code is not one of the known\n                // error code enum values.\n                this._error = new WatchError({\n                    message: error,\n                    code: errorCode,\n                });\n            }\n            catch {\n                return; // Use the default state.\n            }\n        }\n        else ;\n    }\n    get state() {\n        return this._state;\n    }\n    // Consumes the returned event. If you used feedBuffer(), there may be another event or error after this one,\n    // so you need to call state() again to see what to do next.\n    nextEvent() {\n        this.assertState(WatchStreamState.HAVE_EVENT);\n        // We can use \"as ChangeEvent<T>\" since we just asserted the state.\n        const out = this._nextEvent;\n        this._state = WatchStreamState.NEED_DATA;\n        this.advanceBufferState();\n        return out;\n    }\n    // Once this enters the error state, it stays that way. You should not feed any more data.\n    get error() {\n        return this._error;\n    }\n    ////////////////////////////////////////////\n    advanceBufferState() {\n        this.assertState(WatchStreamState.NEED_DATA);\n        while (this.state === WatchStreamState.NEED_DATA) {\n            if (this._bufferOffset === this._buffer.length) {\n                this._buffer = \"\";\n                this._bufferOffset = 0;\n                return;\n            }\n            // NOTE not supporting CR-only newlines, just LF and CRLF.\n            const nextNewlineIndex = this._buffer.indexOf(\"\\n\", this._bufferOffset);\n            if (nextNewlineIndex === -1) {\n                // We have a partial line.\n                if (this._bufferOffset !== 0) {\n                    // Slide the partial line down to the front of the buffer.\n                    this._buffer = this._buffer.substr(this._bufferOffset, this._buffer.length - this._bufferOffset);\n                    this._bufferOffset = 0;\n                }\n                return;\n            }\n            this.feedLine(this._buffer.substr(this._bufferOffset, nextNewlineIndex - this._bufferOffset));\n            this._bufferOffset = nextNewlineIndex + 1; // Advance past this line, including its newline.\n        }\n    }\n    assertState(state) {\n        if (this._state !== state) {\n            throw Error(`Expected WatchStream to be in state ${state}, but in state ${this._state}`);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A remote collection of documents.\n */\nclass MongoDBCollection {\n    /**\n     * Construct a remote collection of documents.\n     *\n     * @param fetcher The fetcher to use when requesting the service.\n     * @param serviceName The name of the remote service.\n     * @param databaseName The name of the database.\n     * @param collectionName The name of the remote collection.\n     */\n    constructor(fetcher, serviceName, databaseName, collectionName) {\n        this.functions = FunctionsFactory.create(fetcher, {\n            serviceName,\n        });\n        this.databaseName = databaseName;\n        this.collectionName = collectionName;\n        this.serviceName = serviceName;\n        this.fetcher = fetcher;\n    }\n    /** @inheritdoc */\n    find(filter = {}, options = {}) {\n        return this.functions.find({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    findOne(filter = {}, options = {}) {\n        return this.functions.findOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndUpdate(filter = {}, update, options = {}) {\n        return this.functions.findOneAndUpdate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            update,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndReplace(filter = {}, replacement, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter: filter,\n            update: replacement,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndDelete(filter = {}, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            sort: options.sort,\n            projection: options.projection,\n        });\n    }\n    /** @inheritdoc */\n    aggregate(pipeline) {\n        return this.functions.aggregate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            pipeline,\n        });\n    }\n    /** @inheritdoc */\n    count(filter = {}, options = {}) {\n        return this.functions.count({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    insertOne(document) {\n        return this.functions.insertOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            document,\n        });\n    }\n    /** @inheritdoc */\n    insertMany(documents) {\n        return this.functions.insertMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            documents,\n        });\n    }\n    /** @inheritdoc */\n    deleteOne(filter = {}) {\n        return this.functions.deleteOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    deleteMany(filter = {}) {\n        return this.functions.deleteMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    updateOne(filter, update, options = {}) {\n        return this.functions.updateOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n        });\n    }\n    /** @inheritdoc */\n    updateMany(filter, update, options = {}) {\n        return this.functions.updateMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n        });\n    }\n    async *watch({ ids, filter, } = {}) {\n        const iterator = await this.functions.callFunctionStreaming(\"watch\", {\n            database: this.databaseName,\n            collection: this.collectionName,\n            ids,\n            filter,\n        });\n        const watchStream = new WatchStream();\n        for await (const chunk of iterator) {\n            if (!chunk)\n                continue;\n            watchStream.feedBuffer(chunk);\n            while (watchStream.state == WatchStreamState.HAVE_EVENT) {\n                yield watchStream.nextEvent();\n            }\n            if (watchStream.state == WatchStreamState.HAVE_ERROR)\n                // XXX this is just throwing an error like {error_code: \"BadRequest, error: \"message\"},\n                // which matches realm-js, but is different from how errors are handled in realm-web\n                throw watchStream.error;\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\nfunction createCollection(fetcher, serviceName, databaseName, collectionName) {\n    return new MongoDBCollection(fetcher, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\nfunction createDatabase(fetcher, serviceName, databaseName) {\n    return {\n        collection: createCollection.bind(null, fetcher, serviceName, databaseName),\n    };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName An optional service name.\n * @returns The service.\n */\nfunction createService(fetcher, serviceName = \"mongo-db\") {\n    return { db: createDatabase.bind(null, fetcher, serviceName) };\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst DEFAULT_DEVICE_ID = \"000000000000000000000000\";\n/** The state of a user within the app */\nvar UserState;\n(function (UserState) {\n    /** Active, with both access and refresh tokens */\n    UserState[\"Active\"] = \"active\";\n    /** Logged out, but there might still be data persisted about the user, in the browser. */\n    UserState[\"LoggedOut\"] = \"logged-out\";\n    /** Logged out and all data about the user has been removed. */\n    UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\n/** The type of a user. */\nvar UserType$1;\n(function (UserType) {\n    /** Created by the user itself. */\n    UserType[\"Normal\"] = \"normal\";\n    /** Created by an administrator of the app. */\n    UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\n/**\n * Representation of an authenticated user of an app.\n */\nclass User {\n    /**\n     * @param parameters Parameters of the user.\n     */\n    constructor(parameters) {\n        this.app = parameters.app;\n        this.id = parameters.id;\n        this.storage = new UserStorage(this.app.storage, this.id);\n        if (\"accessToken\" in parameters && \"refreshToken\" in parameters && \"providerType\" in parameters) {\n            this._accessToken = parameters.accessToken;\n            this._refreshToken = parameters.refreshToken;\n            this.providerType = parameters.providerType;\n            // Save the parameters to storage, for future instances to be hydrated from\n            this.storage.accessToken = parameters.accessToken;\n            this.storage.refreshToken = parameters.refreshToken;\n            this.storage.providerType = parameters.providerType;\n        }\n        else {\n            // Hydrate the rest of the parameters from storage\n            this._accessToken = this.storage.accessToken;\n            this._refreshToken = this.storage.refreshToken;\n            const providerType = this.storage.providerType;\n            this._profile = this.storage.profile;\n            if (providerType) {\n                this.providerType = providerType;\n            }\n            else {\n                throw new Error(\"Storage is missing a provider type\");\n            }\n        }\n        this.fetcher = this.app.fetcher.clone({\n            userContext: { currentUser: this },\n        });\n        this.apiKeys = new ApiKeyAuth(this.fetcher);\n        this.functions = FunctionsFactory.create(this.fetcher);\n    }\n    /**\n     * @returns The access token used to authenticate the user towards MongoDB Realm.\n     */\n    get accessToken() {\n        return this._accessToken;\n    }\n    /**\n     * @param token The new access token.\n     */\n    set accessToken(token) {\n        this._accessToken = token;\n        this.storage.accessToken = token;\n    }\n    /**\n     * @returns The refresh token used to issue new access tokens.\n     */\n    get refreshToken() {\n        return this._refreshToken;\n    }\n    /**\n     * @param token The new refresh token.\n     */\n    set refreshToken(token) {\n        this._refreshToken = token;\n        this.storage.refreshToken = token;\n    }\n    /**\n     * @returns The current state of the user.\n     */\n    get state() {\n        if (this.id in this.app.allUsers) {\n            return this.refreshToken === null ? UserState.LoggedOut : UserState.Active;\n        }\n        else {\n            return UserState.Removed;\n        }\n    }\n    /**\n     * @returns The logged in state of the user.\n     */\n    get isLoggedIn() {\n        return this.state === UserState.Active;\n    }\n    get customData() {\n        if (this.accessToken) {\n            const decodedToken = this.decodeAccessToken();\n            return decodedToken.userData;\n        }\n        else {\n            throw new Error(\"Cannot read custom data without an access token\");\n        }\n    }\n    /**\n     * @returns Profile containing detailed information about the user.\n     */\n    get profile() {\n        if (this._profile) {\n            return this._profile.data;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    get identities() {\n        if (this._profile) {\n            return this._profile.identities;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    get deviceId() {\n        if (this.accessToken) {\n            const payload = this.accessToken.split(\".\")[1];\n            if (payload) {\n                const parsedPayload = JSON.parse(gBase64.decode(payload));\n                const deviceId = parsedPayload[\"baas_device_id\"];\n                if (typeof deviceId === \"string\" && deviceId !== DEFAULT_DEVICE_ID) {\n                    return deviceId;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Refresh the users profile data.\n     */\n    async refreshProfile() {\n        // Fetch the latest profile\n        const response = await this.fetcher.fetchJSON({\n            method: \"GET\",\n            path: routes.api().auth().profile().path,\n        });\n        // Create a profile instance\n        this._profile = new UserProfile(response);\n        // Store this for later hydration\n        this.storage.profile = this._profile;\n    }\n    /**\n     * Log out the user, invalidating the session (and its refresh token).\n     */\n    async logOut() {\n        // Invalidate the refresh token\n        try {\n            if (this._refreshToken !== null) {\n                await this.fetcher.fetchJSON({\n                    method: \"DELETE\",\n                    path: routes.api().auth().session().path,\n                    tokenType: \"refresh\",\n                });\n            }\n        }\n        finally {\n            // Forget the access and refresh token\n            this.accessToken = null;\n            this.refreshToken = null;\n        }\n    }\n    /** @inheritdoc */\n    async linkCredentials(credentials) {\n        const response = await this.app.authenticator.authenticate(credentials, this);\n        // Sanity check the response\n        if (this.id !== response.userId) {\n            const details = `got user id ${response.userId} expected ${this.id}`;\n            throw new Error(`Link response ment for another user (${details})`);\n        }\n        // Update the access token\n        this.accessToken = response.accessToken;\n        // Refresh the profile to include the new identity\n        await this.refreshProfile();\n    }\n    /**\n     * Request a new access token, using the refresh token.\n     */\n    async refreshAccessToken() {\n        const response = await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: routes.api().auth().session().path,\n            tokenType: \"refresh\",\n        });\n        const { access_token: accessToken } = response;\n        if (typeof accessToken === \"string\") {\n            this.accessToken = accessToken;\n        }\n        else {\n            throw new Error(\"Expected an 'access_token' in the response\");\n        }\n    }\n    /** @inheritdoc */\n    async refreshCustomData() {\n        await this.refreshAccessToken();\n        return this.customData;\n    }\n    /** @inheritdoc */\n    callFunction(name, ...args) {\n        return this.functions.callFunction(name, ...args);\n    }\n    /**\n     * @returns A plain ol' JavaScript object representation of the user.\n     */\n    toJSON() {\n        return {\n            id: this.id,\n            accessToken: this.accessToken,\n            refreshToken: this.refreshToken,\n            profile: this._profile,\n            state: this.state,\n            customData: this.customData,\n        };\n    }\n    /** @inheritdoc */\n    push() {\n        throw new Error(\"Not yet implemented\");\n    }\n    /** @inheritdoc */\n    mongoClient(serviceName) {\n        return createService(this.fetcher, serviceName);\n    }\n    decodeAccessToken() {\n        if (this.accessToken) {\n            // Decode and spread the token\n            const parts = this.accessToken.split(\".\");\n            if (parts.length !== 3) {\n                throw new Error(\"Expected an access token with three parts\");\n            }\n            // Decode the payload\n            const encodedPayload = parts[1];\n            const decodedPayload = gBase64.decode(encodedPayload);\n            const parsedPayload = JSON.parse(decodedPayload);\n            const { exp: expires, iat: issuedAt, sub: subject, user_data: userData = {} } = parsedPayload;\n            // Validate the types\n            if (typeof expires !== \"number\") {\n                throw new Error(\"Failed to decode access token 'exp'\");\n            }\n            else if (typeof issuedAt !== \"number\") {\n                throw new Error(\"Failed to decode access token 'iat'\");\n            }\n            return { expires, issuedAt, subject, userData };\n        }\n        else {\n            throw new Error(\"Missing an access token\");\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nclass Credentials {\n    /**\n     * Constructs an instance of credentials.\n     *\n     * @param providerName The name of the authentication provider used when authenticating.\n     * @param providerType The type of the authentication provider used when authenticating.\n     * @param payload The data being sent to the service when authenticating.\n     */\n    constructor(providerName, providerType, payload) {\n        this.providerName = providerName;\n        this.providerType = providerType;\n        this.payload = payload;\n    }\n    /**\n     * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n     *\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static anonymous() {\n        return new Credentials(\"anon-user\", \"anon-user\", {});\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static userApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static serverApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n     * Note: This was formerly known as the \"Username/Password\" provider.\n     *\n     * @param email The end-users email address.\n     * @param password The end-users password.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static emailPassword(email, password) {\n        return new Credentials(\"local-userpass\", \"local-userpass\", {\n            username: email,\n            password,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n     *\n     * @param payload The custom payload as expected by the server.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static function(payload) {\n        return new Credentials(\"custom-function\", \"custom-function\", payload);\n    }\n    /**\n     * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n     *\n     * @param token The JSON Web Token (JWT).\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static jwt(token) {\n        return new Credentials(\"custom-token\", \"custom-token\", {\n            token,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n     *\n     * @param payload The URL that users should be redirected to, the auth code or id token from Google.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static google(payload) {\n        return new Credentials(\"oauth2-google\", \"oauth2-google\", Credentials.derivePayload(payload));\n    }\n    /**\n     * @param payload The payload string.\n     * @returns A payload object based on the string.\n     */\n    static derivePayload(payload) {\n        if (typeof payload === \"string\") {\n            if (payload.includes(\"://\")) {\n                return this.derivePayload({ redirectUrl: payload });\n            }\n            else if (payload.startsWith(\"4/\")) {\n                return this.derivePayload({ authCode: payload });\n            }\n            else if (payload.startsWith(\"ey\")) {\n                return this.derivePayload({ idToken: payload });\n            }\n            else {\n                throw new Error(`Unexpected payload: ${payload}`);\n            }\n        }\n        else if (Object.keys(payload).length === 1) {\n            if (\"authCode\" in payload || \"redirectUrl\" in payload) {\n                return payload;\n            }\n            else if (\"idToken\" in payload) {\n                return { id_token: payload.idToken };\n            }\n            else {\n                throw new Error(\"Unexpected payload: \" + JSON.stringify(payload));\n            }\n        }\n        else {\n            throw new Error(\"Expected only one property in payload, got \" + JSON.stringify(payload));\n        }\n    }\n    /**\n     * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n     *\n     * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static facebook(redirectUrlOrAccessToken) {\n        return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\")\n            ? { redirectUrl: redirectUrlOrAccessToken }\n            : { accessToken: redirectUrlOrAccessToken });\n    }\n    /**\n     * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n     *\n     * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apple(redirectUrlOrIdToken) {\n        return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\") ? { redirectUrl: redirectUrlOrIdToken } : { id_token: redirectUrlOrIdToken });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst USER_IDS_STORAGE_KEY = \"userIds\";\nconst DEVICE_ID_STORAGE_KEY = \"deviceId\";\n/**\n * Storage specific to the app.\n */\nclass AppStorage extends PrefixedStorage {\n    /**\n     * @param storage The underlying storage to wrap.\n     * @param appId The id of the app.\n     */\n    constructor(storage, appId) {\n        super(storage, `app(${appId})`);\n    }\n    /**\n     * Reads out the list of user ids from storage.\n     *\n     * @returns A list of user ids.\n     */\n    getUserIds() {\n        const userIdsString = this.get(USER_IDS_STORAGE_KEY);\n        const userIds = userIdsString ? JSON.parse(userIdsString) : [];\n        if (Array.isArray(userIds)) {\n            // Remove any duplicates that might have been added\n            // The Set preserves insertion order\n            return [...new Set(userIds)];\n        }\n        else {\n            throw new Error(\"Expected the user ids to be an array\");\n        }\n    }\n    /**\n     * Sets the list of ids in storage.\n     * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n     *\n     * @param userIds The list of ids to store.\n     * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n     */\n    setUserIds(userIds, mergeWithExisting) {\n        if (mergeWithExisting) {\n            // Add any existing user id to the end of this list, avoiding duplicates\n            const existingIds = this.getUserIds();\n            for (const id of existingIds) {\n                if (userIds.indexOf(id) === -1) {\n                    userIds.push(id);\n                }\n            }\n        }\n        // Store the list of ids\n        this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n    }\n    /**\n     * Remove an id from the list of ids.\n     *\n     * @param userId The id of a User to be removed.\n     */\n    removeUserId(userId) {\n        const existingIds = this.getUserIds();\n        const userIds = existingIds.filter((id) => id !== userId);\n        // Store the list of ids\n        this.setUserIds(userIds, false);\n    }\n    /**\n     * @returns id of this device (if any exists)\n     */\n    getDeviceId() {\n        return this.get(DEVICE_ID_STORAGE_KEY);\n    }\n    /**\n     * @param deviceId The id of this device, to send on subsequent authentication requests.\n     */\n    setDeviceId(deviceId) {\n        this.set(DEVICE_ID_STORAGE_KEY, deviceId);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nconst LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nconst CLOSE_CHECK_INTERVAL = 100; // 10 times per second\nconst REDIRECT_HASH_TO_RESULT = {\n    _stitch_client_app_id: \"appId\",\n    _baas_client_app_id: \"appId\",\n    _stitch_ua: \"userAuth\",\n    _baas_ua: \"userAuth\",\n    _stitch_link: \"link\",\n    _baas_link: \"link\",\n    _stitch_error: \"error\",\n    _baas_error: \"error\",\n    _stitch_state: \"state\",\n    _baas_state: \"state\",\n};\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\nclass OAuth2Helper {\n    /**\n     * @param storage The underlying storage to use when storing and retriving secrets.\n     * @param openWindow An optional function called when a browser window needs to open.\n     */\n    constructor(storage, openWindow = getEnvironment().openWindow) {\n        this.storage = storage.prefix(\"oauth2\");\n        this.openWindow = openWindow;\n    }\n    /**\n     * Parses the query string from the final step of the OAuth flow.\n     *\n     * @param queryString The query string passed through in location.hash.\n     * @returns The result of the OAuth flow.\n     */\n    static parseRedirectLocation(queryString) {\n        const params = decodeQueryString(queryString);\n        const result = {};\n        for (const [p, r] of Object.entries(REDIRECT_HASH_TO_RESULT)) {\n            const value = params[p];\n            if (value) {\n                result[r] = value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Handle the redirect querystring by parsing it and storing it for others to consume.\n     *\n     * @param queryString The query string containing the encoded result from the OAuth provider.\n     * @param storage The underlying storage used to persist the result.\n     */\n    static handleRedirect(queryString, storage = getEnvironment().defaultStorage) {\n        const result = OAuth2Helper.parseRedirectLocation(queryString);\n        const { state, error } = result;\n        if (typeof state === \"string\") {\n            const oauth2Storage = storage.prefix(\"oauth2\");\n            const stateStorage = OAuth2Helper.getStateStorage(oauth2Storage, state);\n            stateStorage.set(\"result\", JSON.stringify(result));\n        }\n        else if (error) {\n            throw new Error(`Failed to handle OAuth 2.0 redirect: ${error}`);\n        }\n        else {\n            throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n        }\n    }\n    /**\n     * Decodes the authInfo string into its seperate parts.\n     *\n     * @param authInfo An authInfo string returned from the server.\n     * @returns An object containing the separate parts of the authInfo string.\n     */\n    static decodeAuthInfo(authInfo) {\n        const parts = (authInfo || \"\").split(\"$\");\n        if (parts.length === 4) {\n            const [accessToken, refreshToken, userId, deviceId] = parts;\n            return { accessToken, refreshToken, userId, deviceId };\n        }\n        else {\n            throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n        }\n    }\n    /**\n     * Get the storage key associated of an secret associated with a state.\n     *\n     * @param storage The root storage used to derive a \"state namespaced\" storage.\n     * @param state The random state.\n     * @returns The storage associated with a particular state.\n     */\n    static getStateStorage(storage, state) {\n        return storage.prefix(`state(${state})`);\n    }\n    /**\n     * Open a window and wait for the redirect to be handled.\n     *\n     * @param url The URL to open.\n     * @param state The state which will be used to listen for storage updates.\n     * @returns The result passed through the redirect.\n     */\n    openWindowAndWaitForRedirect(url, state) {\n        const stateStorage = OAuth2Helper.getStateStorage(this.storage, state);\n        // Return a promise that resolves when the  gets known\n        return new Promise((resolve, reject) => {\n            let redirectWindow = null;\n            // We're declaring the interval now to enable referencing before its initialized\n            let windowClosedInterval; // eslint-disable-line prefer-const\n            const handleStorageUpdate = () => {\n                // Trying to get the secret from storage\n                const result = stateStorage.get(\"result\");\n                if (result) {\n                    const parsedResult = JSON.parse(result);\n                    // The secret got updated!\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Clear the storage to prevent others from reading this\n                    stateStorage.clear();\n                    // Try closing the newly created window\n                    try {\n                        if (redirectWindow) {\n                            // Stop checking if the window closed\n                            clearInterval(windowClosedInterval);\n                            redirectWindow.close();\n                        }\n                    }\n                    catch (err) {\n                        console.warn(`Failed closing redirect window: ${err}`);\n                    }\n                    finally {\n                        resolve(parsedResult);\n                    }\n                }\n            };\n            // Add a listener to the state storage, awaiting an update to the secret\n            stateStorage.addListener(handleStorageUpdate);\n            // Open up a window\n            redirectWindow = this.openWindow(url);\n            // Not using a const, because we need the two listeners to reference each other when removing the other.\n            windowClosedInterval = setInterval(() => {\n                // Polling \"closed\" because registering listeners on the window violates cross-origin policies\n                if (!redirectWindow) {\n                    // No need to keep polling for a window that we can't check\n                    clearInterval(windowClosedInterval);\n                }\n                else if (redirectWindow.closed) {\n                    // Stop polling the window state\n                    clearInterval(windowClosedInterval);\n                    // Stop listening for changes to the storage\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Reject the promise\n                    const err = new Error(\"Window closed\");\n                    reject(err);\n                }\n            }, CLOSE_CHECK_INTERVAL);\n        });\n    }\n    /**\n     * Generate a random state string.\n     *\n     * @returns The random state string.\n     */\n    generateState() {\n        return generateRandomString(12, LOWERCASE_LETTERS);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst REDIRECT_LOCATION_HEADER = \"x-baas-location\";\n/**\n * Handles authentication and linking of users.\n */\nclass Authenticator {\n    /**\n     * @param fetcher The fetcher used to fetch responses from the server.\n     * @param storage The storage used when completing OAuth 2.0 flows (should not be scoped to a specific app).\n     * @param getDeviceInformation Called to get device information to be sent to the server.\n     */\n    constructor(fetcher, storage, getDeviceInformation) {\n        this.fetcher = fetcher;\n        this.oauth2 = new OAuth2Helper(storage);\n        this.getDeviceInformation = getDeviceInformation;\n    }\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param linkingUser A user requesting to link.\n     * @returns A promise resolving to the response from the server.\n     */\n    async authenticate(credentials, linkingUser) {\n        const deviceInformation = this.getDeviceInformation();\n        const isLinking = typeof linkingUser === \"object\";\n        if (credentials.providerType.startsWith(\"oauth2\") && typeof credentials.payload.redirectUrl === \"string\") {\n            // Initiate the OAuth2 flow by generating a state and fetch a redirect URL\n            const state = this.oauth2.generateState();\n            const url = await this.getLogInUrl(credentials, isLinking, {\n                state,\n                redirect: credentials.payload.redirectUrl,\n                // Ensure redirects are communicated in a header different from \"Location\" and status remains 200 OK\n                providerRedirectHeader: isLinking ? true : undefined,\n                // Add the device information, only if we're not linking - since that request won't have a body of its own.\n                device: !isLinking ? deviceInformation.encode() : undefined,\n            });\n            // If we're linking, we need to send the users access token in the request\n            if (isLinking) {\n                const response = await this.fetcher.fetch({\n                    method: \"GET\",\n                    url,\n                    tokenType: isLinking ? \"access\" : \"none\",\n                    user: linkingUser,\n                    // The response will set a cookie that we need to tell the browser to store\n                    mode: \"cors\",\n                    credentials: \"include\",\n                });\n                // If a response header contains a redirect URL: Open a window and wait for the redirect to be handled\n                const redirectUrl = response.headers.get(REDIRECT_LOCATION_HEADER);\n                if (redirectUrl) {\n                    return this.openWindowAndWaitForAuthResponse(redirectUrl, state);\n                }\n                else {\n                    throw new Error(`Missing ${REDIRECT_LOCATION_HEADER} header`);\n                }\n            }\n            else {\n                // Otherwise we can open a window and let the server redirect the user right away\n                // This gives lower latency (as we don't need the client to receive and execute the redirect in code)\n                // This also has less dependency on cookies and doesn't sent any tokens.\n                return this.openWindowAndWaitForAuthResponse(url, state);\n            }\n        }\n        else {\n            const logInUrl = await this.getLogInUrl(credentials, isLinking);\n            const response = await this.fetcher.fetchJSON({\n                method: \"POST\",\n                url: logInUrl,\n                body: {\n                    ...credentials.payload,\n                    options: {\n                        device: deviceInformation.toJSON(),\n                    },\n                },\n                tokenType: isLinking ? \"access\" : \"none\",\n                user: linkingUser,\n            });\n            // Spread out values from the response and ensure they're valid\n            const { user_id: userId, access_token: accessToken, refresh_token: refreshToken = null, device_id: deviceId, } = response;\n            if (typeof userId !== \"string\") {\n                throw new Error(\"Expected a user id in the response\");\n            }\n            if (typeof accessToken !== \"string\") {\n                throw new Error(\"Expected an access token in the response\");\n            }\n            if (typeof refreshToken !== \"string\" && refreshToken !== null) {\n                throw new Error(\"Expected refresh token to be a string or null\");\n            }\n            if (typeof deviceId !== \"string\") {\n                throw new Error(\"Expected device id to be a string\");\n            }\n            return { userId, accessToken, refreshToken, deviceId };\n        }\n    }\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param link Should the request link with the current user?\n     * @param extraQueryParams Any extra parameters to include in the query string\n     * @returns A promise resolving to the url to be used when logging in.\n     */\n    async getLogInUrl(credentials, link = false, extraQueryParams = {}) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/310f0bd5af80f818cdfbc3caf1ae29ffa8e9c7cf/packages/core/sdk/src/auth/internal/CoreStitchAuth.ts#L746-L780\n        const appRoute = this.fetcher.appRoute;\n        const loginRoute = appRoute.authProvider(credentials.providerName).login();\n        const qs = encodeQueryString({\n            link: link ? \"true\" : undefined,\n            ...extraQueryParams,\n        });\n        const locationUrl = await this.fetcher.locationUrl;\n        return locationUrl + loginRoute.path + qs;\n    }\n    async openWindowAndWaitForAuthResponse(redirectUrl, state) {\n        const redirectResult = await this.oauth2.openWindowAndWaitForRedirect(redirectUrl, state);\n        // Decode the auth info (id, tokens, etc.) from the result of the redirect\n        return OAuth2Helper.decodeAuthInfo(redirectResult.userAuth);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Determine if the shape of an error response is specific to each service or widely used.\n/**\n * An error produced while communicating with the MongoDB Realm server.\n */\nclass MongoDBRealmError extends Error {\n    constructor(method, url, statusCode, statusText, error, errorCode, link) {\n        const summary = statusText ? `status ${statusCode} ${statusText}` : `status ${statusCode}`;\n        if (typeof error === \"string\") {\n            super(`Request failed (${method} ${url}): ${error} (${summary})`);\n        }\n        else {\n            super(`Request failed (${method} ${url}): (${summary})`);\n        }\n        this.method = method;\n        this.url = url;\n        this.statusText = statusText;\n        this.statusCode = statusCode;\n        this.error = error;\n        this.errorCode = errorCode;\n        this.link = link;\n    }\n    /**\n     * Constructs and returns an error from a request and a response.\n     * Note: The caller must throw this error themselves.\n     *\n     * @param request The request sent to the server.\n     * @param response A raw response, as returned from the server.\n     * @returns An error from a request and a response.\n     */\n    static async fromRequestAndResponse(request, response) {\n        var _a;\n        const { url, method } = request;\n        const { status, statusText } = response;\n        if ((_a = response.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.startsWith(\"application/json\")) {\n            const body = await response.json();\n            if (typeof body === \"object\" && body) {\n                const { error, error_code: errorCode, link } = body;\n                return new MongoDBRealmError(method, url, status, statusText, typeof error === \"string\" ? error : undefined, typeof errorCode === \"string\" ? errorCode : undefined, typeof link === \"string\" ? link : undefined);\n            }\n        }\n        return new MongoDBRealmError(method, url, status, statusText);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param body A possible resonse body.\n * @returns An async iterator.\n */\nfunction asyncIteratorFromResponseBody(body) {\n    if (typeof body !== \"object\" || body === null) {\n        throw new Error(\"Expected a non-null object\");\n    }\n    else if (Symbol.asyncIterator in body) {\n        return body;\n    }\n    else if (\"getReader\" in body) {\n        const stream = body;\n        return {\n            [Symbol.asyncIterator]() {\n                const reader = stream.getReader();\n                return {\n                    next() {\n                        return reader.read();\n                    },\n                    async return() {\n                        await reader.cancel();\n                        return { done: true, value: null };\n                    },\n                };\n            },\n        };\n    }\n    else {\n        throw new Error(\"Expected an AsyncIterable or a ReadableStream\");\n    }\n}\n/**\n * Wraps a NetworkTransport from the \"realm-network-transport\" package.\n * Extracts error messages and throws `MongoDBRealmError` objects upon failures.\n * Injects access or refresh tokens for a current or specific user.\n * Refreshes access tokens if requests fails due to a 401 error.\n * Optionally parses response as JSON before returning it.\n * Fetches and exposes an app's location url.\n */\nclass Fetcher {\n    /**\n     * @param config A configuration of the fetcher.\n     * @param config.appId The application id.\n     * @param config.transport The transport used when fetching.\n     * @param config.userContext An object used to determine the requesting user.\n     * @param config.locationUrlContext An object used to determine the location / base URL.\n     */\n    constructor({ appId, transport, userContext, locationUrlContext }) {\n        this.appId = appId;\n        this.transport = transport;\n        this.userContext = userContext;\n        this.locationUrlContext = locationUrlContext;\n    }\n    /**\n     * @param user An optional user to generate the header for.\n     * @param tokenType The type of token (access or refresh).\n     * @returns An object containing the user's token as \"Authorization\" header or undefined if no user is given.\n     */\n    static buildAuthorizationHeader(user, tokenType) {\n        if (!user || tokenType === \"none\") {\n            return {};\n        }\n        else if (tokenType === \"access\") {\n            return { Authorization: `Bearer ${user.accessToken}` };\n        }\n        else if (tokenType === \"refresh\") {\n            return { Authorization: `Bearer ${user.refreshToken}` };\n        }\n        else {\n            throw new Error(`Unexpected token type (${tokenType})`);\n        }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n    static buildBody(body) {\n        if (!body) {\n            return;\n        }\n        else if (typeof body === \"object\" && body !== null) {\n            return JSON.stringify(serialize(body));\n        }\n        else if (typeof body === \"string\") {\n            return body;\n        }\n        else {\n            console.log(\"body is\", body);\n            throw new Error(\"Unexpected type of body\");\n        }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n    static buildJsonHeader(body) {\n        if (body && body.length > 0) {\n            return { \"Content-Type\": \"application/json\" };\n        }\n        else {\n            return {};\n        }\n    }\n    clone(config) {\n        return new Fetcher({\n            appId: this.appId,\n            transport: this.transport,\n            userContext: this.userContext,\n            locationUrlContext: this.locationUrlContext,\n            ...config,\n        });\n    }\n    /**\n     * Fetch a network resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server.\n     */\n    async fetch(request) {\n        const { path, url, tokenType = \"access\", user = this.userContext.currentUser, ...restOfRequest } = request;\n        if (typeof path === \"string\" && typeof url === \"string\") {\n            throw new Error(\"Use of 'url' and 'path' mutually exclusive\");\n        }\n        else if (typeof path === \"string\") {\n            // Derive the URL\n            const url = (await this.locationUrlContext.locationUrl) + path;\n            return this.fetch({ ...request, path: undefined, url });\n        }\n        else if (typeof url === \"string\") {\n            const response = await this.transport.fetch({\n                ...restOfRequest,\n                url,\n                headers: {\n                    ...Fetcher.buildAuthorizationHeader(user, tokenType),\n                    ...request.headers,\n                },\n            });\n            if (response.ok) {\n                return response;\n            }\n            else if (user && response.status === 401 && tokenType === \"access\") {\n                // If the access token has expired, it would help refreshing it\n                await user.refreshAccessToken();\n                // Retry with the specific user, since the currentUser might have changed.\n                return this.fetch({ ...request, user });\n            }\n            else {\n                if (user && response.status === 401 && tokenType === \"refresh\") {\n                    // A 401 error while using the refresh token indicates the token has an issue.\n                    // Reset the tokens to prevent a lock.\n                    user.accessToken = null;\n                    user.refreshToken = null;\n                }\n                // Throw an error with a message extracted from the body\n                throw await MongoDBRealmError.fromRequestAndResponse(request, response);\n            }\n        }\n        else {\n            throw new Error(\"Expected either 'url' or 'path'\");\n        }\n    }\n    /**\n     * Fetch a network resource as an authenticated user and parse the result as extended JSON.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server, parsed as extended JSON.\n     */\n    async fetchJSON(request) {\n        const { body } = request;\n        const serializedBody = Fetcher.buildBody(body);\n        const contentTypeHeaders = Fetcher.buildJsonHeader(serializedBody);\n        const response = await this.fetch({\n            ...request,\n            body: serializedBody,\n            headers: {\n                Accept: \"application/json\",\n                ...contentTypeHeaders,\n                ...request.headers,\n            },\n        });\n        const contentType = response.headers.get(\"content-type\");\n        if (contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(\"application/json\")) {\n            const responseBody = await response.json();\n            return deserialize(responseBody);\n        }\n        else if (contentType === null) {\n            return null;\n        }\n        else {\n            throw new Error(`Expected JSON response, got \"${contentType}\"`);\n        }\n    }\n    /**\n     * Fetch an \"event-stream\" resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns An async iterator over the response body.\n     */\n    async fetchStream(request) {\n        const { body } = await this.fetch({\n            ...request,\n            headers: {\n                Accept: \"text/event-stream\",\n                ...request.headers,\n            },\n        });\n        return asyncIteratorFromResponseBody(body);\n    }\n    /**\n     * @returns The path of the app route.\n     */\n    get appRoute() {\n        return routes.api().app(this.appId);\n    }\n    /**\n     * @returns A promise of the location URL of the app.\n     */\n    get locationUrl() {\n        return this.locationUrlContext.locationUrl;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The key in a storage on which the device id is stored.\n */\nconst DEVICE_ID_STORAGE_KEY$1 = \"deviceId\";\nvar DeviceFields;\n(function (DeviceFields) {\n    DeviceFields[\"DEVICE_ID\"] = \"deviceId\";\n    DeviceFields[\"APP_ID\"] = \"appId\";\n    DeviceFields[\"APP_VERSION\"] = \"appVersion\";\n    DeviceFields[\"PLATFORM\"] = \"platform\";\n    DeviceFields[\"PLATFORM_VERSION\"] = \"platformVersion\";\n    DeviceFields[\"SDK_VERSION\"] = \"sdkVersion\";\n})(DeviceFields || (DeviceFields = {}));\n/**\n * Information describing the device, app and SDK.\n */\nclass DeviceInformation {\n    /**\n     * @param params Construct the device information from these parameters.\n     * @param params.appId A user-defined application id.\n     * @param params.appVersion A user-defined application version.\n     * @param params.deviceId An unique id for the end-users device.\n     */\n    constructor({ appId, appVersion, deviceId }) {\n        /**\n         * The version of the Realm Web SDK (constant provided by Rollup).\n         */\n        this.sdkVersion = \"1.5.1\";\n        const environment = getEnvironment();\n        this.platform = environment.platform;\n        this.platformVersion = environment.platformVersion;\n        this.appId = appId;\n        this.appVersion = appVersion;\n        this.deviceId = deviceId;\n    }\n    /**\n     * @returns An base64 URI encoded representation of the device information.\n     */\n    encode() {\n        const obj = removeKeysWithUndefinedValues(this);\n        return gBase64.encode(JSON.stringify(obj));\n    }\n    /**\n     * @returns The defaults\n     */\n    toJSON() {\n        return removeKeysWithUndefinedValues(this);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\nconst DEFAULT_BASE_URL = \"https://stitch.mongodb.com\";\n/**\n * MongoDB Realm App\n */\nclass App {\n    /**\n     * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n     *\n     * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n     */\n    constructor(idOrConfiguration) {\n        /**\n         * An array of active and logged-out users.\n         * Elements in the beginning of the array is considered more recent than the later elements.\n         */\n        this.users = [];\n        /**\n         * A promise resolving to the App's location url.\n         */\n        this._locationUrl = null;\n        // If the argument is a string, convert it to a simple configuration object.\n        const configuration = typeof idOrConfiguration === \"string\" ? { id: idOrConfiguration } : idOrConfiguration;\n        // Initialize properties from the configuration\n        if (typeof configuration === \"object\" && typeof configuration.id === \"string\") {\n            this.id = configuration.id;\n        }\n        else {\n            throw new Error(\"Missing a MongoDB Realm app-id\");\n        }\n        this.baseUrl = configuration.baseUrl || DEFAULT_BASE_URL;\n        if (configuration.skipLocationRequest) {\n            // Use the base url directly, instead of requesting a location URL from the server\n            this._locationUrl = Promise.resolve(this.baseUrl);\n        }\n        this.localApp = configuration.app;\n        const { storage, transport = new DefaultNetworkTransport() } = configuration;\n        // Construct a fetcher wrapping the network transport\n        this.fetcher = new Fetcher({\n            appId: this.id,\n            userContext: this,\n            locationUrlContext: this,\n            transport,\n        });\n        // Construct the auth providers\n        this.emailPasswordAuth = new EmailPasswordAuth(this.fetcher);\n        // Construct the storage\n        const baseStorage = storage || getEnvironment().defaultStorage;\n        this.storage = new AppStorage(baseStorage, this.id);\n        this.authenticator = new Authenticator(this.fetcher, baseStorage, () => this.deviceInformation);\n        // Hydrate the app state from storage\n        try {\n            this.hydrate();\n        }\n        catch (err) {\n            // The storage was corrupted\n            this.storage.clear();\n            // A failed hydration shouldn't throw and break the app experience\n            // Since this is \"just\" persisted state that unfortunately got corrupted or partially lost\n            console.warn(\"Realm app hydration failed:\", err.message);\n        }\n    }\n    /**\n     * Get or create a singleton Realm App from an id.\n     * Calling this function multiple times with the same id will return the same instance.\n     *\n     * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n     * @returns The Realm App instance.\n     */\n    static getApp(id) {\n        if (id in App.appCache) {\n            return App.appCache[id];\n        }\n        else {\n            const instance = new App(id);\n            App.appCache[id] = instance;\n            return instance;\n        }\n    }\n    /**\n     * Switch user.\n     *\n     * @param nextUser The user or id of the user to switch to.\n     */\n    switchUser(nextUser) {\n        const index = this.users.findIndex((u) => u === nextUser);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        // Remove the user from the stack\n        const [user] = this.users.splice(index, 1);\n        // Insert the user in the beginning of the stack\n        this.users.unshift(user);\n    }\n    /**\n     * Log in a user.\n     *\n     * @param credentials Credentials to use when logging in.\n     * @param fetchProfile Should the users profile be fetched? (default: true)\n     * @returns A promise resolving to the newly logged in user.\n     */\n    async logIn(credentials, fetchProfile = true) {\n        const response = await this.authenticator.authenticate(credentials);\n        const user = this.createOrUpdateUser(response, credentials.providerType);\n        // Let's ensure this will be the current user, in case the user object was reused.\n        this.switchUser(user);\n        // If neeeded, fetch and set the profile on the user\n        if (fetchProfile) {\n            await user.refreshProfile();\n        }\n        // Persist the user id in the storage,\n        // merging to avoid overriding logins from other apps using the same underlying storage\n        this.storage.setUserIds(this.users.map((u) => u.id), true);\n        // Read out and store the device id from the server\n        const deviceId = response.deviceId;\n        if (deviceId && deviceId !== \"000000000000000000000000\") {\n            this.storage.set(DEVICE_ID_STORAGE_KEY$1, deviceId);\n        }\n        // Return the user\n        return user;\n    }\n    /**\n     * @inheritdoc\n     */\n    async removeUser(user) {\n        // Remove the user from the list of users\n        const index = this.users.findIndex((u) => u === user);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        this.users.splice(index, 1);\n        // Log out the user - this removes access and refresh tokens from storage\n        await user.logOut();\n        // Remove the users profile from storage\n        this.storage.remove(`user(${user.id}):profile`);\n        // Remove the user from the storage\n        this.storage.removeUserId(user.id);\n    }\n    /**\n     * The currently active user (or null if no active users exists).\n     *\n     * @returns the currently active user or null.\n     */\n    get currentUser() {\n        const activeUsers = this.users.filter((user) => user.state === UserState.Active);\n        if (activeUsers.length === 0) {\n            return null;\n        }\n        else {\n            // Current user is the top of the stack\n            return activeUsers[0];\n        }\n    }\n    /**\n     * All active and logged-out users:\n     *  - First in the list are active users (ordered by most recent call to switchUser or login)\n     *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n     *\n     * @returns An array of users active or loggedout users (current user being the first).\n     */\n    get allUsers() {\n        // Returning a freezed copy of the list of users to prevent outside changes\n        return Object.fromEntries(this.users.map((user) => [user.id, user]));\n    }\n    /**\n     * @returns A promise of the app URL, with the app location resolved.\n     */\n    get locationUrl() {\n        if (!this._locationUrl) {\n            const path = routes.api().app(this.id).location().path;\n            this._locationUrl = this.fetcher\n                .fetchJSON({\n                method: \"GET\",\n                url: this.baseUrl + path,\n                tokenType: \"none\",\n            })\n                .then((body) => {\n                if (typeof body !== \"object\") {\n                    throw new Error(\"Expected response body be an object\");\n                }\n                else {\n                    return body;\n                }\n            })\n                .then(({ hostname }) => {\n                if (typeof hostname !== \"string\") {\n                    throw new Error(\"Expected response to contain a 'hostname'\");\n                }\n                else {\n                    return hostname;\n                }\n            })\n                .catch((err) => {\n                // Reset the location to allow another request to fetch again.\n                this._locationUrl = null;\n                throw err;\n            });\n        }\n        return this._locationUrl;\n    }\n    /**\n     * @returns Information about the current device, sent to the server when authenticating.\n     */\n    get deviceInformation() {\n        const deviceIdStr = this.storage.getDeviceId();\n        const deviceId = typeof deviceIdStr === \"string\" && deviceIdStr !== \"000000000000000000000000\"\n            ? new ObjectId(deviceIdStr)\n            : undefined;\n        return new DeviceInformation({\n            appId: this.localApp ? this.localApp.name : undefined,\n            appVersion: this.localApp ? this.localApp.version : undefined,\n            deviceId,\n        });\n    }\n    /**\n     * Create (and store) a new user or update an existing user's access and refresh tokens.\n     * This helps de-duplicating users in the list of users known to the app.\n     *\n     * @param response A response from the Authenticator.\n     * @param providerType The type of the authentication provider used.\n     * @returns A new or an existing user.\n     */\n    createOrUpdateUser(response, providerType) {\n        const existingUser = this.users.find((u) => u.id === response.userId);\n        if (existingUser) {\n            // Update the users access and refresh tokens\n            existingUser.accessToken = response.accessToken;\n            existingUser.refreshToken = response.refreshToken;\n            return existingUser;\n        }\n        else {\n            // Create and store a new user\n            if (!response.refreshToken) {\n                throw new Error(\"No refresh token in response from server\");\n            }\n            const user = new User({\n                app: this,\n                id: response.userId,\n                accessToken: response.accessToken,\n                refreshToken: response.refreshToken,\n                providerType,\n            });\n            this.users.unshift(user);\n            return user;\n        }\n    }\n    /**\n     * Restores the state of the app (active and logged-out users) from the storage\n     */\n    hydrate() {\n        const userIds = this.storage.getUserIds();\n        this.users = userIds.map((id) => new User({ app: this, id }));\n    }\n}\n/**\n * A map of app instances returned from calling getApp.\n */\nApp.appCache = {};\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nApp.Credentials = Credentials;\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Get or create a singleton Realm App from an id.\n * Calling this function multiple times with the same id will return the same instance.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance.\n */\nfunction getApp(id) {\n    return App.getApp(id);\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass LocalStorage {\n    /**\n     * Constructs a LocalStorage using the global window.\n     */\n    constructor() {\n        if (typeof globalThis.localStorage === \"object\") {\n            this.global = globalThis;\n        }\n        else {\n            throw new Error(\"Cannot use LocalStorage without a global localStorage object\");\n        }\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.global.localStorage.getItem(key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.global.localStorage.setItem(key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.global.localStorage.removeItem(key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix) {\n        const keys = [];\n        // Iterate all keys to find the once have a matching prefix.\n        for (let i = 0; i < this.global.localStorage.length; i++) {\n            const key = this.global.localStorage.key(i);\n            if (key && (!prefix || key.startsWith(prefix))) {\n                keys.push(key);\n            }\n        }\n        // Remove the items in a seperate loop to avoid updating while iterating.\n        for (const key of keys) {\n            this.global.localStorage.removeItem(key);\n        }\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.global.addEventListener(\"storage\", listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.global.removeEventListener(\"storage\", listener);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst browser = detect();\nconst DefaultStorage = \"localStorage\" in globalThis ? LocalStorage : MemoryStorage;\n/**\n * Attempt to use the browser to open a window\n *\n * @param url The url to open a window to.\n * @returns Then newly create window.\n */\nfunction openWindow(url) {\n    if (typeof globalThis.open === \"function\") {\n        return globalThis.open(url);\n    }\n    else {\n        console.log(`Please open ${url}`);\n        return null;\n    }\n}\nconst environment$1 = {\n    defaultStorage: new DefaultStorage().prefix(\"realm-web\"),\n    openWindow,\n    platform: (browser === null || browser === void 0 ? void 0 : browser.name) || \"web\",\n    platformVersion: (browser === null || browser === void 0 ? void 0 : browser.version) || \"0.0.0\",\n    TextDecoder,\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\nfunction handleAuthRedirect(location = globalThis.location, storage = environment$1.defaultStorage) {\n    try {\n        const queryString = location.hash.substr(1); // Strip the initial # from the hash\n        OAuth2Helper.handleRedirect(queryString, storage);\n    }\n    catch (err) {\n        // Ensure calling this never throws: It should not interrupt a users flow.\n        console.warn(err);\n    }\n}\n\nexport { App, Credentials, DEFAULT_BASE_URL, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, setEnvironment };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
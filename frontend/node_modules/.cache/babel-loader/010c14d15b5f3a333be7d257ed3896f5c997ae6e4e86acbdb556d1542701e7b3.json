{"ast":null,"code":"var _jsxFileName = \"/Users/jeremylehmann/Desktop/Software Development/Personal projects/form-api/frontend/src/contexts/project.context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { UserContext } from \"./user.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectContext = /*#__PURE__*/createContext();\nconst baseURL = 'http://localhost:3001';\n\n// Custom hook to use the projects context\nexport const useUserProjects = () => {\n  _s();\n  return useContext(ProjectContext);\n};\n\n// Provide the context to the app\n_s(useUserProjects, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ProjectProvider = ({\n  children\n}) => {\n  _s2();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const {\n    user\n  } = useContext(UserContext);\n\n  // Fetch projects data and store it in the projects state\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(`${baseURL}/projects`, {\n        params: {\n          userId: user.id\n        }\n      });\n      console.log('Fetched projects:', response.data);\n      setProjects(response.data.map(project => ({\n        value: project,\n        label: project.name\n      })));\n    } catch (error) {\n      console.error('Error fetching projects', error);\n    }\n  };\n\n  // Fetch project data and store it in the selectedProject state\n  const fetchProject = async () => {\n    try {\n      const response = await axios.get(`${baseURL}/projects/${selectedProject.token}`, {\n        params: {\n          userId: user.id\n        }\n      });\n      setSelectedProject(response.data);\n    } catch (error) {\n      console.error('Error fetching project', error);\n    }\n  };\n  useEffect(() => {\n    fetchProjects(); // Fetch projects when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProjectContext.Provider, {\n    value: {\n      projects,\n      setProjects,\n      selectedProject,\n      setSelectedProject,\n      fetchProjects,\n      fetchProject\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s2(ProjectProvider, \"o9tczsxbIkMMF0ZWNhkabPEtixI=\");\n_c = ProjectProvider;\nvar _c;\n$RefreshReg$(_c, \"ProjectProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","UserContext","jsxDEV","_jsxDEV","ProjectContext","baseURL","useUserProjects","_s","ProjectProvider","children","_s2","projects","setProjects","selectedProject","setSelectedProject","user","fetchProjects","response","get","params","userId","id","console","log","data","map","project","value","label","name","error","fetchProject","token","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeremylehmann/Desktop/Software Development/Personal projects/form-api/frontend/src/contexts/project.context.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { UserContext } from \"./user.context\";\n\nexport const ProjectContext = createContext();\n\nconst baseURL = 'http://localhost:3001';\n\n// Custom hook to use the projects context\nexport const useUserProjects = () => {\n    return useContext(ProjectContext);\n};\n\n// Provide the context to the app\nexport const ProjectProvider = ({ children }) => {\n    const [projects, setProjects] = useState([]);\n    const [selectedProject, setSelectedProject] = useState(null);\n    const { user } = useContext(UserContext);\n\n    // Fetch projects data and store it in the projects state\n    const fetchProjects = async () => {\n        try {\n            const response = await axios.get(`${baseURL}/projects`, {\n                params: {\n                    userId: user.id,\n                },\n            });\n            console.log('Fetched projects:', response.data);\n            setProjects(response.data.map((project) => ({\n                value: project,\n                label: project.name,\n            })));\n        } catch (error) {\n            console.error('Error fetching projects', error);\n        }\n    };\n\n    // Fetch project data and store it in the selectedProject state\n    const fetchProject = async () => {\n        try {\n            const response = await axios.get(`${baseURL}/projects/${selectedProject.token}`, {\n                params: {\n                    userId: user.id,\n                }\n            });\n            setSelectedProject(response.data);\n        } catch (error) {\n            console.error('Error fetching project', error)\n        }\n    }\n\n    useEffect(() => {\n        fetchProjects(); // Fetch projects when the component mounts\n    }, []);\n\n    return (\n        <ProjectContext.Provider\n            value={{\n                projects,\n                setProjects,\n                selectedProject,\n                setSelectedProject,\n                fetchProjects,\n                fetchProject,\n            }}\n        >\n            {children}\n        </ProjectContext.Provider>\n    )\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,cAAc,gBAAGR,aAAa,CAAC,CAAC;AAE7C,MAAMS,OAAO,GAAG,uBAAuB;;AAEvC;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,OAAOV,UAAU,CAACO,cAAc,CAAC;AACrC,CAAC;;AAED;AAAAG,EAAA,CAJaD,eAAe;AAK5B,OAAO,MAAME,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM;IAAEgB;EAAK,CAAC,GAAGlB,UAAU,CAACI,WAAW,CAAC;;EAExC;EACA,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEb,OAAQ,WAAU,EAAE;QACpDc,MAAM,EAAE;UACJC,MAAM,EAAEL,IAAI,CAACM;QACjB;MACJ,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,QAAQ,CAACO,IAAI,CAAC;MAC/CZ,WAAW,CAACK,QAAQ,CAACO,IAAI,CAACC,GAAG,CAAEC,OAAO,KAAM;QACxCC,KAAK,EAAED,OAAO;QACdE,KAAK,EAAEF,OAAO,CAACG;MACnB,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMd,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEb,OAAQ,aAAYQ,eAAe,CAACmB,KAAM,EAAC,EAAE;QAC7Eb,MAAM,EAAE;UACJC,MAAM,EAAEL,IAAI,CAACM;QACjB;MACJ,CAAC,CAAC;MACFP,kBAAkB,CAACG,QAAQ,CAACO,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZR,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACZkB,aAAa,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA,CAACC,cAAc,CAAC6B,QAAQ;IACpBN,KAAK,EAAE;MACHhB,QAAQ;MACRC,WAAW;MACXC,eAAe;MACfC,kBAAkB;MAClBE,aAAa;MACbe;IACJ,CAAE;IAAAtB,QAAA,EAEDA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAAC3B,GAAA,CAvDWF,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jeremylehmann/Desktop/Software Development/Personal projects/form-api/frontend/src/components/Navbar/NewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport './NewForm.css';\nimport { UserContext } from \"../../contexts/user.context\";\nimport { ProjectContext } from '../../contexts/project.context';\nimport { generateUniqueToken } from '../../utilities/utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'http://localhost:3001';\nconst NewForm = ({\n  isOpen,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  const [form, setForm] = useState('');\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    setSelectedProject\n  } = useContext(ProjectContext);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!user) {\n        console.error('User not authenticated. Please log in.');\n        return;\n      }\n      const name = form.name;\n      const userId = user.id;\n\n      // Generate a unique token for the project\n      const projectToken = generateUniqueToken();\n      const response = await axios.post(`${baseURL}/projects/new`, {\n        name,\n        userId,\n        // Send the userId in the request body\n        token: projectToken\n      });\n      if (response.status === 201) {\n        console.log('Project created successfully!');\n        // Reload the page to reflect changes in the projects dropdown\n        onSubmit();\n\n        // Close the dropdown\n        onClose();\n\n        // Update the selected project in your context\n        setSelectedProject(response.data);\n        console.log('response.data in newForm: ', response.data);\n      } else {\n        console.error('Failed to create project');\n      }\n      console.log('userId: ', userId);\n    } catch (error) {\n      console.error('Error in creating project: ', error);\n    }\n  };\n\n  // This function will be called whenever the user edits the form.\n  const onFormInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dropdownn ${isOpen ? 'open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"create-new-form-input\",\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Project Name\",\n        onChange: onFormInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-new-form-button\",\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-new-form-button\",\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(NewForm, \"b+Vi6hPrGF4pIeKPfZdqi+KAtxE=\");\n_c = NewForm;\nexport default NewForm;\nvar _c;\n$RefreshReg$(_c, \"NewForm\");","map":{"version":3,"names":["React","useState","useContext","axios","UserContext","ProjectContext","generateUniqueToken","jsxDEV","_jsxDEV","baseURL","NewForm","isOpen","onClose","onSubmit","_s","form","setForm","user","setSelectedProject","handleSubmit","e","preventDefault","console","error","name","userId","id","projectToken","response","post","token","status","log","data","onFormInputChange","event","value","target","className","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jeremylehmann/Desktop/Software Development/Personal projects/form-api/frontend/src/components/Navbar/NewForm.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport './NewForm.css';\nimport { UserContext } from \"../../contexts/user.context\";\nimport { ProjectContext } from '../../contexts/project.context'\nimport { generateUniqueToken } from '../../utilities/utilities';\n\nconst baseURL = 'http://localhost:3001';\n\nconst NewForm = ({ isOpen, onClose, onSubmit }) => {\n    const [form, setForm] = useState('');\n    const { user } = useContext(UserContext);\n    const { setSelectedProject } = useContext(ProjectContext);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (!user) {\n                console.error('User not authenticated. Please log in.');\n                return;\n            }\n\n            const name = form.name;\n            const userId = user.id\n\n            // Generate a unique token for the project\n            const projectToken = generateUniqueToken();\n\n            const response = await axios.post(`${baseURL}/projects/new`, {\n                name,\n                userId, // Send the userId in the request body\n                token: projectToken,\n            });\n\n            if (response.status === 201) {\n                console.log('Project created successfully!');\n                // Reload the page to reflect changes in the projects dropdown\n                onSubmit();\n\n                // Close the dropdown\n                onClose();\n\n                // Update the selected project in your context\n                setSelectedProject(response.data);\n                console.log('response.data in newForm: ', response.data);\n            } else {\n                console.error('Failed to create project');\n            }\n\n            console.log('userId: ', userId)\n        } catch (error) {\n            console.error('Error in creating project: ', error);\n        }\n    };\n\n    // This function will be called whenever the user edits the form.\n    const onFormInputChange = (event) => {\n        const { name, value } = event.target;\n        setForm({ ...form, [name]: value });\n    };\n\n    return (\n        <div className={`dropdownn ${isOpen ? 'open' : ''}`}>\n            <form onSubmit={handleSubmit}>\n                <input className='create-new-form-input' name='name' type=\"text\" placeholder=\"Project Name\" onChange={onFormInputChange} required />\n                <button className='create-new-form-button' type=\"submit\">Create</button>\n            </form>\n            <button className='close-new-form-button' onClick={onClose}>Close</button>\n        </div>\n    );\n}\n\nexport default NewForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
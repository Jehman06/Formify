{"ast":null,"code":"var _jsxFileName = \"/Users/jeremylehmann/Desktop/Software Development/Personal projects/form-api/frontend/src/components/Form/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport './Form.css';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport axios from 'axios';\nimport { ProjectContext } from '../../contexts/project.context';\nimport { UserContext } from '../../contexts/user.context';\nimport Submissions from './Submissions/Submissions';\nimport FormNavbar from './FormNavbar/FormNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const {\n    selectedProject\n  } = useContext(ProjectContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const [forms, setForms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [copiedEndpoint, setCopiedEndpoint] = useState(false);\n  const [copyMessageVisibleEndpoint, setCopyMessageVisibleEndpoint] = useState(false);\n  const [copiedSnippet, setCopiedSnippet] = useState(false);\n  const [copyMessageVisibleSnippet, setCopyMessageVisibleSnippet] = useState(false);\n  const [activeLanguage, setActiveLanguage] = useState('html'); // Potential feature\n  const [activeView, setActiveView] = useState('documentation');\n  const baseURL = 'http://localhost:3001';\n  const codeSnippet = `\n            <form\n                action=\"${endpointUrl}\"\n                method=\"POST\"\n            >\n                <label>\n                    Your name:\n                    <input name=\"name\" type=\"text\">\n                </label>\n\n                <label>\n                    Your email:\n                    <input name=\"email\" type=\"email\">\n                </label>\n\n                <label>\n                    Your message:\n                    <textarea name=\"message\"></textarea>\n                </label>\n\n                <!-- your other form fields here -->\n                <button type=\"submit\">Send</button>\n            </form>\n        `;\n\n  // I don't think this is necessary\n  useEffect(() => {\n    if (selectedProject) {\n      fetchFormData();\n    }\n  }, [selectedProject, user.id]);\n\n  // This either, will test later\n  const fetchFormData = async () => {\n    try {\n      if (!selectedProject || !user) {\n        setLoading(false); // Stop loading\n        return;\n      }\n      const response = await axios.get(`${baseURL}/forms/${selectedProject.token}?userId=${user.id}`);\n      setForms(response.data);\n      setLoading(false); // Stop loading\n    } catch (error) {\n      console.error('Error fetching Form data: ', error);\n      setLoading(false); // Stop loading on error\n    }\n  };\n\n  // Copy the endpoint\n  const copyToClipboardEndpoint = async () => {\n    try {\n      await navigator.clipboard.writeText(endpointUrl);\n      setCopiedEndpoint(true);\n      setCopyMessageVisibleEndpoint(true); // Show copy message for endpoint\n      setTimeout(() => {\n        setCopiedEndpoint(false);\n        setCopyMessageVisibleEndpoint(false); // Hide copy message after 3 seconds\n      }, 3000);\n    } catch (error) {\n      console.error('Error copying endpoint to clipboard: ', error);\n    }\n  };\n\n  // Copy the code snippet\n  const copyToClipboardCodeSnippet = async () => {\n    try {\n      await navigator.clipboard.writeText(codeSnippet);\n      setCopiedSnippet(true);\n      setCopyMessageVisibleSnippet(true); // Show copy message for code snippet\n      setTimeout(() => {\n        setCopiedSnippet(false);\n        setCopyMessageVisibleSnippet(false); // Hide copy message after 3 seconds\n      }, 3000);\n    } catch (error) {\n      console.error('Error copying code snippet to clipboard: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    style: {\n      color: 'white'\n    },\n    children: selectedProject ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        children: selectedProject.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormNavbar, {\n        setActiveView: setActiveView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), activeView === 'documentation' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doc-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"endpoint\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Your form's endpoint is:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"copy-endpoint\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"copy-container\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"endpoint-text\",\n                children: [\"http://localhost:3001/forms/submit/\", selectedProject.token, \"/\", user.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"copy\",\n              children: [copyMessageVisibleEndpoint && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"copy-message\",\n                children: \"Copied\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 72\n              }, this), /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                className: \"copy-icon\",\n                onClick: copyToClipboardEndpoint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Place this URL in the action attribute of your form, and make sure to use \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"method=\\\"POST\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 110\n            }, this), \". All inputs elements should have a name attribute.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-snippet-container\",\n          children: [copyMessageVisibleSnippet && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"copy-message\",\n            children: \"Copied\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 63\n          }, this), /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n            className: \"copy-button\",\n            onClick: copyToClipboardCodeSnippet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n            language: \"html\",\n            style: vscDarkPlus,\n            children: codeSnippet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this), activeView === 'submissions' && /*#__PURE__*/_jsxDEV(Submissions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // Render a message when no project is selected\n    _jsxDEV(\"div\", {\n      className: \"no-proj-selected\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select a project or create one.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"4EpxSVWqPx2feoJEoxW6MwWcZL0=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useContext","useState","useEffect","ContentCopyIcon","Prism","SyntaxHighlighter","vscDarkPlus","axios","ProjectContext","UserContext","Submissions","FormNavbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","selectedProject","user","forms","setForms","loading","setLoading","copiedEndpoint","setCopiedEndpoint","copyMessageVisibleEndpoint","setCopyMessageVisibleEndpoint","copiedSnippet","setCopiedSnippet","copyMessageVisibleSnippet","setCopyMessageVisibleSnippet","activeLanguage","setActiveLanguage","activeView","setActiveView","baseURL","codeSnippet","endpointUrl","fetchFormData","id","response","get","token","data","error","console","copyToClipboardEndpoint","navigator","clipboard","writeText","setTimeout","copyToClipboardCodeSnippet","className","style","color","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","language","_c","$RefreshReg$"],"sources":["/Users/jeremylehmann/Desktop/Software Development/Personal projects/form-api/frontend/src/components/Form/Form.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport './Form.css';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport axios from 'axios';\nimport { ProjectContext } from '../../contexts/project.context';\nimport { UserContext } from '../../contexts/user.context';\nimport Submissions from './Submissions/Submissions';\n\nimport FormNavbar from './FormNavbar/FormNavbar';\n\nconst Form = () => {\n    const { selectedProject } = useContext(ProjectContext);\n    const { user } = useContext(UserContext);\n    const [forms, setForms] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [copiedEndpoint, setCopiedEndpoint] = useState(false);\n    const [copyMessageVisibleEndpoint, setCopyMessageVisibleEndpoint] = useState(false);\n    const [copiedSnippet, setCopiedSnippet] = useState(false);\n    const [copyMessageVisibleSnippet, setCopyMessageVisibleSnippet] = useState(false);\n    const [activeLanguage, setActiveLanguage] = useState('html'); // Potential feature\n    const [activeView, setActiveView] = useState('documentation');\n    const baseURL = 'http://localhost:3001';\n\n    const codeSnippet = `\n            <form\n                action=\"${endpointUrl}\"\n                method=\"POST\"\n            >\n                <label>\n                    Your name:\n                    <input name=\"name\" type=\"text\">\n                </label>\n\n                <label>\n                    Your email:\n                    <input name=\"email\" type=\"email\">\n                </label>\n\n                <label>\n                    Your message:\n                    <textarea name=\"message\"></textarea>\n                </label>\n\n                <!-- your other form fields here -->\n                <button type=\"submit\">Send</button>\n            </form>\n        `\n\n    // I don't think this is necessary\n    useEffect(() => {\n        if (selectedProject) {\n            fetchFormData();\n        }\n    }, [selectedProject, user.id]);\n\n    // This either, will test later\n    const fetchFormData = async () => {\n        try {\n            if (!selectedProject || !user) {\n                setLoading(false); // Stop loading\n                return;\n            }\n\n            const response = await axios.get(`${baseURL}/forms/${selectedProject.token}?userId=${user.id}`);\n            setForms(response.data);\n            setLoading(false); // Stop loading\n        } catch (error) {\n            console.error('Error fetching Form data: ', error);\n            setLoading(false); // Stop loading on error\n        }\n    }\n\n    // Copy the endpoint\n    const copyToClipboardEndpoint = async () => {\n        try {\n            await navigator.clipboard.writeText(endpointUrl);\n            setCopiedEndpoint(true);\n            setCopyMessageVisibleEndpoint(true); // Show copy message for endpoint\n            setTimeout(() => {\n                setCopiedEndpoint(false);\n                setCopyMessageVisibleEndpoint(false); // Hide copy message after 3 seconds\n            }, 3000);\n        } catch (error) {\n            console.error('Error copying endpoint to clipboard: ', error);\n        }\n    };\n\n    // Copy the code snippet\n    const copyToClipboardCodeSnippet = async () => {\n        try {\n            await navigator.clipboard.writeText(codeSnippet);\n            setCopiedSnippet(true);\n            setCopyMessageVisibleSnippet(true); // Show copy message for code snippet\n            setTimeout(() => {\n                setCopiedSnippet(false);\n                setCopyMessageVisibleSnippet(false); // Hide copy message after 3 seconds\n            }, 3000);\n        } catch (error) {\n            console.error('Error copying code snippet to clipboard: ', error);\n        }\n    };\n\n    return (\n        <div className='form-container' style={{ color: 'white' }}>\n            {selectedProject ? (\n                <>\n                    <h1 style={{ color: 'white' }}>{selectedProject.name}</h1>\n                    <FormNavbar setActiveView={setActiveView} />\n                    <br />\n\n                    {activeView === 'documentation' && (\n                        <div className='doc-container'>\n                            <div className='endpoint'>\n                                <h4>Your form's endpoint is:</h4>\n                                <div className='copy-endpoint'>\n                                    <div className='copy-container'>\n                                        <p className='endpoint-text'>\n                                            http://localhost:3001/forms/submit/{selectedProject.token}/{user.id}\n                                        </p>\n                                    </div>\n                                    <div className='copy'>\n                                        {copyMessageVisibleEndpoint && <div className='copy-message'>Copied</div>}\n                                        <ContentCopyIcon className='copy-icon' onClick={copyToClipboardEndpoint} />\n                                    </div>\n                                </div>\n                                <p>Place this URL in the action attribute of your form, and make sure to use <b>method=\"POST\"</b>. All inputs elements should have a name attribute.</p>\n                            </div>\n                            <div className=\"code-snippet-container\">\n                                {copyMessageVisibleSnippet && <div className='copy-message'>Copied</div>}\n                                <ContentCopyIcon className=\"copy-button\" onClick={copyToClipboardCodeSnippet} />\n                                <SyntaxHighlighter language=\"html\" style={vscDarkPlus}>\n                                    {codeSnippet}\n                                </SyntaxHighlighter>\n                            </div>\n                            {/* ... (rest of your code) ... */}\n                        </div>\n                    )}\n                    {activeView === 'submissions' && <Submissions />}\n                </>\n            ) : (\n                // Render a message when no project is selected\n                <div className='no-proj-selected'>\n                    <h1>Select a project or create one.</h1>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
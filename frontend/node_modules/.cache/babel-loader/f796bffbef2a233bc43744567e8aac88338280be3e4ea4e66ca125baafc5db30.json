{"ast":null,"code":"var _jsxFileName = \"/Users/jeremylehmann/Desktop/Software Development/Personal projects/form-api/frontend/src/components/Navbar/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from \"react\";\nimport './Navbar.css';\nimport { ProjectContext } from \"../../contexts/project.context\";\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport submitz from '../../assets/submitz.png';\nimport { UserContext } from \"../../contexts/user.context\";\nimport Dropdown from \"./Dropdown/Dropdown\";\nimport DropdownButton from \"./Dropdown/DropdownButton\";\nimport NewForm from \"./NewForm\";\nimport axios from 'axios';\nimport NotificationPopover from \"./Notifications\";\nimport io from 'socket.io-client';\nimport DropdownContent from \"./Dropdown/DropdownContent\";\nimport DropdownList from \"./Dropdown/DropdownList\";\nimport DropdownItem from \"./Dropdown/DropdownItem\";\nimport { DropdownContext } from \"../../contexts/dropdown.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const {\n    logOutUser\n  } = useContext(UserContext);\n  const {\n    projects = [],\n    selectedProject,\n    setSelectedProject,\n    fetchProjects,\n    setProjects\n  } = useContext(ProjectContext);\n  const [isNewFormDropdownOpen, setIsNewFormDropdownOpen] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const toggleNewFormDropdown = () => {\n    setIsNewFormDropdownOpen(!isNewFormDropdownOpen);\n  };\n  const closeNewFormDropdown = () => {\n    setIsNewFormDropdownOpen(false);\n  };\n  const handleDropdownChange = selectedOption => {\n    if (selectedOption) {\n      setSelectedProject(selectedOption.value);\n    } else {\n      setSelectedProject(null);\n    }\n  };\n  const fetchAndSetProjects = async () => {\n    try {\n      const newProjects = await fetchProjects();\n      setProjects(newProjects); // Update the projects state with the fetched data\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchAndSetProjects(); // Fetch the projects when the component mounts\n  }, []);\n\n  // Potential notifications feature\n  const toggleNotifications = () => {\n    setShowNotifications(!showNotifications);\n  };\n  useEffect(() => {\n    const socket = io.connect('http://localhost:3001/');\n    socket.on('connect', () => {\n      console.log('Connected to WebSocket server');\n    });\n    socket.on('newFormSubmission', formData => {\n      // Handle the new form submission notification here if needed\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from WebSocket server');\n    });\n    socket.on('connect_error', error => {\n      console.error('WebSocket connection error: ', error);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: submitz,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-container\",\n        children: isLoading ?\n        /*#__PURE__*/\n        // Display loading indicator\n        _jsxDEV(\"p\", {\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DropdownContent, {\n            children: /*#__PURE__*/_jsxDEV(DropdownList, {\n              children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(DropdownItem, {\n                children: project.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: toggleNewFormDropdown,\n        children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 52\n        }, this), \"New Form\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-form\",\n        children: isNewFormDropdownOpen && /*#__PURE__*/_jsxDEV(NewForm, {\n          isOpen: isNewFormDropdownOpen,\n          onClose: closeNewFormDropdown,\n          onSubmit: fetchAndSetProjects // Call refreshProjects after a new project is created\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: toggleNotifications,\n        children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(LogoutIcon, {\n          onClick: logOutUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), showNotifications && /*#__PURE__*/_jsxDEV(NotificationPopover, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"xaFLBvktui7jgWaVegDNxaWxcNI=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useContext","useState","ProjectContext","NotificationsIcon","LogoutIcon","AddCircleOutlineIcon","submitz","UserContext","Dropdown","DropdownButton","NewForm","axios","NotificationPopover","io","DropdownContent","DropdownList","DropdownItem","DropdownContext","jsxDEV","_jsxDEV","Navbar","_s","logOutUser","projects","selectedProject","setSelectedProject","fetchProjects","setProjects","isNewFormDropdownOpen","setIsNewFormDropdownOpen","showNotifications","setShowNotifications","isLoading","setIsLoading","toggleNewFormDropdown","closeNewFormDropdown","handleDropdownChange","selectedOption","value","fetchAndSetProjects","newProjects","error","console","toggleNotifications","socket","connect","on","log","formData","disconnect","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","name","onClick","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/Users/jeremylehmann/Desktop/Software Development/Personal projects/form-api/frontend/src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport './Navbar.css';\nimport { ProjectContext } from \"../../contexts/project.context\";\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport submitz from '../../assets/submitz.png';\nimport { UserContext } from \"../../contexts/user.context\";\nimport Dropdown from \"./Dropdown/Dropdown\";\nimport DropdownButton from \"./Dropdown/DropdownButton\";\nimport NewForm from \"./NewForm\";\nimport axios from 'axios';\nimport NotificationPopover from \"./Notifications\";\nimport io from 'socket.io-client';\nimport DropdownContent from \"./Dropdown/DropdownContent\";\nimport DropdownList from \"./Dropdown/DropdownList\";\nimport DropdownItem from \"./Dropdown/DropdownItem\";\nimport { DropdownContext } from \"../../contexts/dropdown.context\";\n\nconst Navbar = () => {\n    const { logOutUser } = useContext(UserContext);\n    const { projects = [], selectedProject, setSelectedProject, fetchProjects, setProjects } = useContext(ProjectContext);\n    const [isNewFormDropdownOpen, setIsNewFormDropdownOpen] = useState(false);\n    const [showNotifications, setShowNotifications] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const toggleNewFormDropdown = () => {\n        setIsNewFormDropdownOpen(!isNewFormDropdownOpen);\n    };\n\n    const closeNewFormDropdown = () => {\n        setIsNewFormDropdownOpen(false);\n    };\n\n    const handleDropdownChange = (selectedOption) => {\n        if (selectedOption) {\n            setSelectedProject(selectedOption.value);\n        } else {\n            setSelectedProject(null);\n        }\n    }\n\n    const fetchAndSetProjects = async () => {\n        try {\n            const newProjects = await fetchProjects();\n            setProjects(newProjects); // Update the projects state with the fetched data\n            setIsLoading(false);\n        } catch (error) {\n            console.error('Error fetching projects:', error);\n            setIsLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchAndSetProjects(); // Fetch the projects when the component mounts\n    }, []);\n\n    // Potential notifications feature\n    const toggleNotifications = () => {\n        setShowNotifications(!showNotifications);\n    }\n\n    useEffect(() => {\n        const socket = io.connect('http://localhost:3001/');\n\n        socket.on('connect', () => {\n            console.log('Connected to WebSocket server');\n        });\n\n        socket.on('newFormSubmission', (formData) => {\n            // Handle the new form submission notification here if needed\n        });\n\n        socket.on('disconnect', () => {\n            console.log('Disconnected from WebSocket server');\n        });\n\n        socket.on('connect_error', (error) => {\n            console.error('WebSocket connection error: ', error);\n        });\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    return (\n        <div className='navbar-container'>\n            <div className='logo'>\n                <img src={submitz} alt='logo' />\n                <div className='dropdown-container'>\n                    {isLoading ? (\n                        // Display loading indicator\n                        <p>...</p>\n                    ) : (\n                        <Dropdown>\n                            <DropdownButton>Projects</DropdownButton>\n                            <DropdownContent>\n                                <DropdownList>\n                                    {projects.map((project, index) => (\n                                        <DropdownItem key={index}>\n                                            {project.name}\n                                        </DropdownItem>\n                                    ))}\n                                </DropdownList>\n                            </DropdownContent>\n                        </Dropdown>\n                    )}\n                </div>\n            </div>\n            <div className='nav'>\n                <p onClick={toggleNewFormDropdown}><AddCircleOutlineIcon />New Form</p>\n                <div className='new-form'>\n                    {isNewFormDropdownOpen && (\n                        <NewForm\n                            isOpen={isNewFormDropdownOpen}\n                            onClose={closeNewFormDropdown}\n                            onSubmit={fetchAndSetProjects} // Call refreshProjects after a new project is created\n                        />\n                    )}\n                </div>\n                <p onClick={toggleNotifications}><NotificationsIcon /></p>\n                <p><LogoutIcon onClick={logOutUser} /></p>\n            </div>\n            {showNotifications && (\n                <NotificationPopover />\n            )}\n        </div>\n    )\n}\n\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}